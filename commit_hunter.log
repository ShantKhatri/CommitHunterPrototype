2025-03-14 17:38:02,601 - root - INFO - Logging system initialized
2025-03-14 17:38:02,601 - main - INFO - Starting CommitHunter
2025-03-14 17:38:02,605 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-14 17:38:02,605 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:38:02,605 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:38:02,607 - main - ERROR - Error in CommitHunter
Traceback (most recent call last):
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 1037, in main
    if not (args.test_results):
            ^^^^^^^^^^^^^^^^^
AttributeError: 'Namespace' object has no attribute 'test_results'
2025-03-14 17:41:02,322 - root - INFO - Logging system initialized
2025-03-14 17:41:02,322 - main - INFO - Starting CommitHunter
2025-03-14 17:41:02,322 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-14 17:41:02,322 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:41:02,322 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:41:02,322 - main - ERROR - Error in CommitHunter
Traceback (most recent call last):
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 1037, in main
    if not (args.test_results):
            ^^^^^^^^^^^^^^^^^
AttributeError: 'Namespace' object has no attribute 'test_results'
2025-03-14 17:43:07,156 - root - INFO - Logging system initialized
2025-03-14 17:43:07,156 - main - INFO - Starting CommitHunter
2025-03-14 17:43:07,156 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-14 17:43:07,161 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:43:07,161 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:43:07,161 - main - INFO - No test results directory specified, creating sample test results
2025-03-14 17:43:08,831 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-03-14 17:43:08,839 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-03-14 17:43:08,839 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-03-14 17:43:08,839 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-03-14 17:43:08,839 - main - INFO - Binary search will be skipped.
2025-03-14 17:43:08,839 - main - INFO - Testing test result extraction
2025-03-14 17:43:08,839 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-14 17:43:08,839 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 17:43:08,843 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 17:43:08,843 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 17:43:08,843 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 17:43:08,843 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 17:43:08,848 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-03-14 17:43:08,848 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-03-14 17:43:08,852 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-03-14 17:43:08,852 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 17:43:08,852 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-03-14 17:43:08,852 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-03-14T17:43:08.852443"
}
2025-03-14 17:43:08,856 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-03-14 17:43:08,856 - main - INFO - Using OpenJ9-specific analysis
2025-03-14 17:43:08,858 - __main__ - INFO - Processing OpenJ9 issue between 96ef5c5b and eac681f0
2025-03-14 17:43:08,860 - collectors.test_collector - INFO - Processing OpenJ9 issue #12345 between 96ef5c5b and eac681f0
2025-03-14 17:43:08,860 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 17:43:08,860 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 17:43:08,860 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 17:43:08,864 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 17:43:08,864 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 17:43:08,864 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 17:43:08,864 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-03-14 17:43:08,864 - collectors.test_collector - INFO - Analyzing OpenJ9 test failure: unknown
2025-03-14 17:43:08,868 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:43:09,058 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:43:24,376 - collectors.git_collector - INFO - Found 103 commits
2025-03-14 17:43:24,496 - collectors.test_collector - INFO - Classifying commit 96ef5c5b for test failure
2025-03-14 17:43:24,634 - collectors.test_collector - INFO - Classifying commit 7c8005e1 for test failure
2025-03-14 17:43:24,781 - collectors.test_collector - INFO - Classifying commit 8d929fec for test failure
2025-03-14 17:43:24,935 - collectors.test_collector - INFO - Classifying commit 2845176f for test failure
2025-03-14 17:43:25,094 - collectors.test_collector - INFO - Classifying commit a0b34799 for test failure
2025-03-14 17:43:25,253 - collectors.test_collector - INFO - Classifying commit 27dac39d for test failure
2025-03-14 17:43:25,410 - collectors.test_collector - INFO - Classifying commit def4a30a for test failure
2025-03-14 17:43:25,529 - collectors.test_collector - INFO - Classifying commit c2af1fed for test failure
2025-03-14 17:43:25,670 - collectors.test_collector - INFO - Classifying commit 18c16409 for test failure
2025-03-14 17:43:25,812 - collectors.test_collector - INFO - Classifying commit 00d08779 for test failure
2025-03-14 17:43:25,927 - collectors.test_collector - INFO - Classifying commit 51128c1d for test failure
2025-03-14 17:43:26,034 - collectors.test_collector - INFO - Classifying commit 4fc9a456 for test failure
2025-03-14 17:43:26,150 - collectors.test_collector - INFO - Classifying commit a6363210 for test failure
2025-03-14 17:43:26,295 - collectors.test_collector - INFO - Classifying commit 5b6168a9 for test failure
2025-03-14 17:43:26,434 - collectors.test_collector - INFO - Classifying commit 0b32a259 for test failure
2025-03-14 17:43:26,605 - collectors.test_collector - INFO - Classifying commit 9a15c735 for test failure
2025-03-14 17:43:26,834 - collectors.test_collector - INFO - Classifying commit 07797d6f for test failure
2025-03-14 17:43:26,961 - collectors.test_collector - INFO - Classifying commit 90ac2bf1 for test failure
2025-03-14 17:43:27,079 - collectors.test_collector - INFO - Classifying commit abdb2aa8 for test failure
2025-03-14 17:43:27,210 - collectors.test_collector - INFO - Classifying commit a5c3757b for test failure
2025-03-14 17:43:27,356 - collectors.test_collector - INFO - Classifying commit 9574f689 for test failure
2025-03-14 17:43:27,458 - collectors.test_collector - INFO - Classifying commit 2cfd7244 for test failure
2025-03-14 17:43:27,595 - collectors.test_collector - INFO - Classifying commit 6c5f2b35 for test failure
2025-03-14 17:43:27,725 - collectors.test_collector - INFO - Classifying commit ad9620c3 for test failure
2025-03-14 17:43:27,854 - collectors.test_collector - INFO - Classifying commit c792e991 for test failure
2025-03-14 17:43:27,964 - collectors.test_collector - INFO - Classifying commit ae0b2371 for test failure
2025-03-14 17:43:28,096 - collectors.test_collector - INFO - Classifying commit 71f9ccfc for test failure
2025-03-14 17:43:28,224 - collectors.test_collector - INFO - Classifying commit a3a09742 for test failure
2025-03-14 17:43:28,359 - collectors.test_collector - INFO - Classifying commit 860fd146 for test failure
2025-03-14 17:43:28,496 - collectors.test_collector - INFO - Classifying commit 70aac1f2 for test failure
2025-03-14 17:43:28,658 - collectors.test_collector - INFO - Classifying commit bd018c01 for test failure
2025-03-14 17:43:28,775 - collectors.test_collector - INFO - Classifying commit 3b3874e2 for test failure
2025-03-14 17:43:28,913 - collectors.test_collector - INFO - Classifying commit 17894a56 for test failure
2025-03-14 17:43:29,067 - collectors.test_collector - INFO - Classifying commit 3f48ea98 for test failure
2025-03-14 17:43:29,197 - collectors.test_collector - INFO - Classifying commit 0362cb32 for test failure
2025-03-14 17:43:29,307 - collectors.test_collector - INFO - Classifying commit dd27fc0d for test failure
2025-03-14 17:43:29,428 - collectors.test_collector - INFO - Classifying commit 48f557e4 for test failure
2025-03-14 17:43:29,597 - collectors.test_collector - INFO - Classifying commit c5b3b092 for test failure
2025-03-14 17:43:29,738 - collectors.test_collector - INFO - Classifying commit d98e1e5c for test failure
2025-03-14 17:43:29,863 - collectors.test_collector - INFO - Classifying commit 97d0bb70 for test failure
2025-03-14 17:43:29,992 - collectors.test_collector - INFO - Classifying commit 4d506fd4 for test failure
2025-03-14 17:43:30,147 - collectors.test_collector - INFO - Classifying commit 8e7895ff for test failure
2025-03-14 17:43:30,271 - collectors.test_collector - INFO - Classifying commit 01f287ca for test failure
2025-03-14 17:43:30,382 - collectors.test_collector - INFO - Classifying commit 487b005e for test failure
2025-03-14 17:43:30,496 - collectors.test_collector - INFO - Classifying commit 5dbfd876 for test failure
2025-03-14 17:43:30,630 - collectors.test_collector - INFO - Classifying commit 8805cc27 for test failure
2025-03-14 17:43:30,744 - collectors.test_collector - INFO - Classifying commit b6760a14 for test failure
2025-03-14 17:43:30,868 - collectors.test_collector - INFO - Classifying commit e4bf5c1e for test failure
2025-03-14 17:43:31,014 - collectors.test_collector - INFO - Classifying commit 3f3d51f3 for test failure
2025-03-14 17:43:31,140 - collectors.test_collector - INFO - Classifying commit 9142f7eb for test failure
2025-03-14 17:43:31,275 - collectors.test_collector - INFO - Classifying commit f3d33e83 for test failure
2025-03-14 17:43:31,410 - collectors.test_collector - INFO - Classifying commit d65b5fe5 for test failure
2025-03-14 17:43:31,528 - collectors.test_collector - INFO - Classifying commit d776a4a4 for test failure
2025-03-14 17:43:31,645 - collectors.test_collector - INFO - Classifying commit 876f013c for test failure
2025-03-14 17:43:31,769 - collectors.test_collector - INFO - Classifying commit 157a0ef2 for test failure
2025-03-14 17:43:31,890 - collectors.test_collector - INFO - Classifying commit 40c65378 for test failure
2025-03-14 17:43:32,034 - collectors.test_collector - INFO - Classifying commit b4719f8d for test failure
2025-03-14 17:43:32,176 - collectors.test_collector - INFO - Classifying commit eac4b61c for test failure
2025-03-14 17:43:32,301 - collectors.test_collector - INFO - Classifying commit 200b783f for test failure
2025-03-14 17:43:32,441 - collectors.test_collector - INFO - Classifying commit badec667 for test failure
2025-03-14 17:43:32,579 - collectors.test_collector - INFO - Classifying commit 9d601051 for test failure
2025-03-14 17:43:32,729 - collectors.test_collector - INFO - Classifying commit 0076e93a for test failure
2025-03-14 17:43:32,866 - collectors.test_collector - INFO - Classifying commit 5e3816d3 for test failure
2025-03-14 17:43:33,016 - collectors.test_collector - INFO - Classifying commit 4cffe9c3 for test failure
2025-03-14 17:43:33,161 - collectors.test_collector - INFO - Classifying commit d1aaa914 for test failure
2025-03-14 17:43:33,295 - collectors.test_collector - INFO - Classifying commit 7a309afe for test failure
2025-03-14 17:43:33,432 - collectors.test_collector - INFO - Classifying commit 313a00c9 for test failure
2025-03-14 17:43:33,575 - collectors.test_collector - INFO - Classifying commit ff51db6a for test failure
2025-03-14 17:43:33,733 - collectors.test_collector - INFO - Classifying commit 1ed9c082 for test failure
2025-03-14 17:43:33,887 - collectors.test_collector - INFO - Classifying commit 312c8246 for test failure
2025-03-14 17:43:34,025 - collectors.test_collector - INFO - Classifying commit 015b58dd for test failure
2025-03-14 17:43:34,178 - collectors.test_collector - INFO - Classifying commit 7affcea2 for test failure
2025-03-14 17:43:34,311 - collectors.test_collector - INFO - Classifying commit 578e8369 for test failure
2025-03-14 17:43:34,436 - collectors.test_collector - INFO - Classifying commit 95a69485 for test failure
2025-03-14 17:43:34,566 - collectors.test_collector - INFO - Classifying commit c2723578 for test failure
2025-03-14 17:43:34,716 - collectors.test_collector - INFO - Classifying commit 323b8b99 for test failure
2025-03-14 17:43:34,958 - collectors.test_collector - INFO - Classifying commit 3be60c0a for test failure
2025-03-14 17:43:35,087 - collectors.test_collector - INFO - Classifying commit 4ce1a43f for test failure
2025-03-14 17:43:35,222 - collectors.test_collector - INFO - Classifying commit 08e67ec7 for test failure
2025-03-14 17:43:35,348 - collectors.test_collector - INFO - Classifying commit 5b2a0713 for test failure
2025-03-14 17:43:35,481 - collectors.test_collector - INFO - Classifying commit 881038df for test failure
2025-03-14 17:43:35,610 - collectors.test_collector - INFO - Classifying commit aeef1385 for test failure
2025-03-14 17:43:35,743 - collectors.test_collector - INFO - Classifying commit 865b5754 for test failure
2025-03-14 17:43:35,877 - collectors.test_collector - INFO - Classifying commit ab58e586 for test failure
2025-03-14 17:43:36,024 - collectors.test_collector - INFO - Classifying commit 8ef7ddb4 for test failure
2025-03-14 17:43:36,161 - collectors.test_collector - INFO - Classifying commit b14cd71e for test failure
2025-03-14 17:43:36,299 - collectors.test_collector - INFO - Classifying commit b2674c2d for test failure
2025-03-14 17:43:36,432 - collectors.test_collector - INFO - Classifying commit 79f9d1c6 for test failure
2025-03-14 17:43:36,570 - collectors.test_collector - INFO - Classifying commit fba3bfe9 for test failure
2025-03-14 17:43:36,694 - collectors.test_collector - INFO - Classifying commit ab1ec9a1 for test failure
2025-03-14 17:43:36,823 - collectors.test_collector - INFO - Classifying commit 679e1830 for test failure
2025-03-14 17:43:36,964 - collectors.test_collector - INFO - Classifying commit 129082fe for test failure
2025-03-14 17:43:37,122 - collectors.test_collector - INFO - Classifying commit c0c18a98 for test failure
2025-03-14 17:43:37,265 - collectors.test_collector - INFO - Classifying commit b20800d7 for test failure
2025-03-14 17:43:37,404 - collectors.test_collector - INFO - Classifying commit 4b9cac2d for test failure
2025-03-14 17:43:37,529 - collectors.test_collector - INFO - Classifying commit deb57b93 for test failure
2025-03-14 17:43:37,683 - collectors.test_collector - INFO - Classifying commit c70cb5d2 for test failure
2025-03-14 17:43:37,855 - collectors.test_collector - INFO - Classifying commit 3a50aeb2 for test failure
2025-03-14 17:43:38,010 - collectors.test_collector - INFO - Classifying commit 04930aa4 for test failure
2025-03-14 17:43:38,196 - collectors.test_collector - INFO - Classifying commit 73fd0180 for test failure
2025-03-14 17:43:38,526 - collectors.test_collector - INFO - Classifying commit 2a1ae31e for test failure
2025-03-14 17:43:38,720 - collectors.test_collector - INFO - Classifying commit 2e4a0701 for test failure
2025-03-14 17:43:38,877 - collectors.test_collector - INFO - Classifying commit 0ba67381 for test failure
2025-03-14 17:43:38,879 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:43:39,008 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:44:02,984 - collectors.git_collector - INFO - Found 103 commits
2025-03-14 17:44:02,988 - main - ERROR - Error in CommitHunter
Traceback (most recent call last):
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 1134, in main
    report = generate_report(results, args.report_format)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 684, in generate_report
    f'<li>Good Commit: {results["metadata"]["good_commit"]}</li>',
                        ~~~~~~~^^^^^^^^^^^^
KeyError: 'metadata'
2025-03-14 17:49:32,733 - root - INFO - Logging system initialized
2025-03-14 17:49:32,733 - main - INFO - Starting CommitHunter
2025-03-14 17:49:34,656 - __main__ - ERROR - Error in CommitHunter
Traceback (most recent call last):
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 783, in main
    config=config.collectors.get('test_collector', {})
           ^^^^^^^^^^^^^^^^^
AttributeError: 'Config' object has no attribute 'collectors'
2025-03-14 17:56:22,176 - root - INFO - Logging system initialized
2025-03-14 17:56:22,176 - main - INFO - Starting CommitHunter
2025-03-14 17:56:22,176 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-14 17:56:22,179 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:56:22,179 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:56:22,180 - main - INFO - No test results directory specified, creating sample test results
2025-03-14 17:56:24,098 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-03-14 17:56:24,101 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-03-14 17:56:24,104 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-03-14 17:56:24,104 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-03-14 17:56:24,104 - main - INFO - Binary search will be skipped.
2025-03-14 17:56:24,104 - main - INFO - Testing test result extraction
2025-03-14 17:56:24,106 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-14 17:56:24,106 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 17:56:24,106 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 17:56:24,106 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 17:56:24,106 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 17:56:24,110 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 17:56:24,150 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-03-14 17:56:24,154 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-03-14 17:56:24,154 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-03-14 17:56:24,154 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 17:56:24,158 - collectors.test_collector - INFO - Collected 1 test result sets in 0.05 seconds
2025-03-14 17:56:24,158 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-03-14T17:56:24.158830"
}
2025-03-14 17:56:24,164 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-03-14 17:56:24,164 - main - INFO - Using OpenJ9-specific analysis
2025-03-14 17:56:24,167 - __main__ - INFO - Processing OpenJ9 issue between 96ef5c5b and eac681f0
2025-03-14 17:56:24,167 - collectors.test_collector - INFO - Processing OpenJ9 issue #12345 between 96ef5c5b and eac681f0
2025-03-14 17:56:24,167 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 17:56:24,167 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 17:56:24,172 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 17:56:24,173 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 17:56:24,176 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 17:56:24,178 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 17:56:24,178 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-03-14 17:56:24,179 - collectors.test_collector - INFO - Analyzing OpenJ9 test failure: unknown
2025-03-14 17:56:24,179 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:56:24,422 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:56:40,863 - collectors.git_collector - INFO - Found 103 commits
2025-03-14 17:56:40,979 - collectors.test_collector - INFO - Classifying commit 96ef5c5b for test failure
2025-03-14 17:56:41,102 - collectors.test_collector - INFO - Classifying commit 7c8005e1 for test failure
2025-03-14 17:56:41,234 - collectors.test_collector - INFO - Classifying commit 8d929fec for test failure
2025-03-14 17:56:41,348 - collectors.test_collector - INFO - Classifying commit 2845176f for test failure
2025-03-14 17:56:41,466 - collectors.test_collector - INFO - Classifying commit a0b34799 for test failure
2025-03-14 17:56:41,581 - collectors.test_collector - INFO - Classifying commit 27dac39d for test failure
2025-03-14 17:56:41,702 - collectors.test_collector - INFO - Classifying commit def4a30a for test failure
2025-03-14 17:56:41,825 - collectors.test_collector - INFO - Classifying commit c2af1fed for test failure
2025-03-14 17:56:41,951 - collectors.test_collector - INFO - Classifying commit 18c16409 for test failure
2025-03-14 17:56:42,083 - collectors.test_collector - INFO - Classifying commit 00d08779 for test failure
2025-03-14 17:56:42,198 - collectors.test_collector - INFO - Classifying commit 51128c1d for test failure
2025-03-14 17:56:42,315 - collectors.test_collector - INFO - Classifying commit 4fc9a456 for test failure
2025-03-14 17:56:42,428 - collectors.test_collector - INFO - Classifying commit a6363210 for test failure
2025-03-14 17:56:42,548 - collectors.test_collector - INFO - Classifying commit 5b6168a9 for test failure
2025-03-14 17:56:42,667 - collectors.test_collector - INFO - Classifying commit 0b32a259 for test failure
2025-03-14 17:56:42,785 - collectors.test_collector - INFO - Classifying commit 9a15c735 for test failure
2025-03-14 17:56:42,902 - collectors.test_collector - INFO - Classifying commit 07797d6f for test failure
2025-03-14 17:56:43,020 - collectors.test_collector - INFO - Classifying commit 90ac2bf1 for test failure
2025-03-14 17:56:43,140 - collectors.test_collector - INFO - Classifying commit abdb2aa8 for test failure
2025-03-14 17:56:43,255 - collectors.test_collector - INFO - Classifying commit a5c3757b for test failure
2025-03-14 17:56:43,382 - collectors.test_collector - INFO - Classifying commit 9574f689 for test failure
2025-03-14 17:56:43,499 - collectors.test_collector - INFO - Classifying commit 2cfd7244 for test failure
2025-03-14 17:56:43,609 - collectors.test_collector - INFO - Classifying commit 6c5f2b35 for test failure
2025-03-14 17:56:43,724 - collectors.test_collector - INFO - Classifying commit ad9620c3 for test failure
2025-03-14 17:56:43,839 - collectors.test_collector - INFO - Classifying commit c792e991 for test failure
2025-03-14 17:56:43,955 - collectors.test_collector - INFO - Classifying commit ae0b2371 for test failure
2025-03-14 17:56:44,074 - collectors.test_collector - INFO - Classifying commit 71f9ccfc for test failure
2025-03-14 17:56:44,216 - collectors.test_collector - INFO - Classifying commit a3a09742 for test failure
2025-03-14 17:56:44,339 - collectors.test_collector - INFO - Classifying commit 860fd146 for test failure
2025-03-14 17:56:44,467 - collectors.test_collector - INFO - Classifying commit 70aac1f2 for test failure
2025-03-14 17:56:44,591 - collectors.test_collector - INFO - Classifying commit bd018c01 for test failure
2025-03-14 17:56:44,730 - collectors.test_collector - INFO - Classifying commit 3b3874e2 for test failure
2025-03-14 17:56:44,902 - collectors.test_collector - INFO - Classifying commit 17894a56 for test failure
2025-03-14 17:56:45,041 - collectors.test_collector - INFO - Classifying commit 3f48ea98 for test failure
2025-03-14 17:56:45,168 - collectors.test_collector - INFO - Classifying commit 0362cb32 for test failure
2025-03-14 17:56:45,287 - collectors.test_collector - INFO - Classifying commit dd27fc0d for test failure
2025-03-14 17:56:45,418 - collectors.test_collector - INFO - Classifying commit 48f557e4 for test failure
2025-03-14 17:56:45,587 - collectors.test_collector - INFO - Classifying commit c5b3b092 for test failure
2025-03-14 17:56:45,722 - collectors.test_collector - INFO - Classifying commit d98e1e5c for test failure
2025-03-14 17:56:45,852 - collectors.test_collector - INFO - Classifying commit 97d0bb70 for test failure
2025-03-14 17:56:45,975 - collectors.test_collector - INFO - Classifying commit 4d506fd4 for test failure
2025-03-14 17:56:46,164 - collectors.test_collector - INFO - Classifying commit 8e7895ff for test failure
2025-03-14 17:56:46,291 - collectors.test_collector - INFO - Classifying commit 01f287ca for test failure
2025-03-14 17:56:46,415 - collectors.test_collector - INFO - Classifying commit 487b005e for test failure
2025-03-14 17:56:46,541 - collectors.test_collector - INFO - Classifying commit 5dbfd876 for test failure
2025-03-14 17:56:46,675 - collectors.test_collector - INFO - Classifying commit 8805cc27 for test failure
2025-03-14 17:56:46,809 - collectors.test_collector - INFO - Classifying commit b6760a14 for test failure
2025-03-14 17:56:46,933 - collectors.test_collector - INFO - Classifying commit e4bf5c1e for test failure
2025-03-14 17:56:47,060 - collectors.test_collector - INFO - Classifying commit 3f3d51f3 for test failure
2025-03-14 17:56:47,223 - collectors.test_collector - INFO - Classifying commit 9142f7eb for test failure
2025-03-14 17:56:47,362 - collectors.test_collector - INFO - Classifying commit f3d33e83 for test failure
2025-03-14 17:56:47,493 - collectors.test_collector - INFO - Classifying commit d65b5fe5 for test failure
2025-03-14 17:56:47,624 - collectors.test_collector - INFO - Classifying commit d776a4a4 for test failure
2025-03-14 17:56:47,758 - collectors.test_collector - INFO - Classifying commit 876f013c for test failure
2025-03-14 17:56:47,899 - collectors.test_collector - INFO - Classifying commit 157a0ef2 for test failure
2025-03-14 17:56:48,032 - collectors.test_collector - INFO - Classifying commit 40c65378 for test failure
2025-03-14 17:56:48,175 - collectors.test_collector - INFO - Classifying commit b4719f8d for test failure
2025-03-14 17:56:48,311 - collectors.test_collector - INFO - Classifying commit eac4b61c for test failure
2025-03-14 17:56:48,436 - collectors.test_collector - INFO - Classifying commit 200b783f for test failure
2025-03-14 17:56:48,566 - collectors.test_collector - INFO - Classifying commit badec667 for test failure
2025-03-14 17:56:48,704 - collectors.test_collector - INFO - Classifying commit 9d601051 for test failure
2025-03-14 17:56:48,851 - collectors.test_collector - INFO - Classifying commit 0076e93a for test failure
2025-03-14 17:56:48,978 - collectors.test_collector - INFO - Classifying commit 5e3816d3 for test failure
2025-03-14 17:56:49,110 - collectors.test_collector - INFO - Classifying commit 4cffe9c3 for test failure
2025-03-14 17:56:49,253 - collectors.test_collector - INFO - Classifying commit d1aaa914 for test failure
2025-03-14 17:56:49,528 - collectors.test_collector - INFO - Classifying commit 7a309afe for test failure
2025-03-14 17:56:49,672 - collectors.test_collector - INFO - Classifying commit 313a00c9 for test failure
2025-03-14 17:56:49,808 - collectors.test_collector - INFO - Classifying commit ff51db6a for test failure
2025-03-14 17:56:49,951 - collectors.test_collector - INFO - Classifying commit 1ed9c082 for test failure
2025-03-14 17:56:50,102 - collectors.test_collector - INFO - Classifying commit 312c8246 for test failure
2025-03-14 17:56:50,263 - collectors.test_collector - INFO - Classifying commit 015b58dd for test failure
2025-03-14 17:56:50,432 - collectors.test_collector - INFO - Classifying commit 7affcea2 for test failure
2025-03-14 17:56:50,568 - collectors.test_collector - INFO - Classifying commit 578e8369 for test failure
2025-03-14 17:56:50,856 - collectors.test_collector - INFO - Classifying commit 95a69485 for test failure
2025-03-14 17:56:51,004 - collectors.test_collector - INFO - Classifying commit c2723578 for test failure
2025-03-14 17:56:51,161 - collectors.test_collector - INFO - Classifying commit 323b8b99 for test failure
2025-03-14 17:56:51,307 - collectors.test_collector - INFO - Classifying commit 3be60c0a for test failure
2025-03-14 17:56:51,457 - collectors.test_collector - INFO - Classifying commit 4ce1a43f for test failure
2025-03-14 17:56:51,604 - collectors.test_collector - INFO - Classifying commit 08e67ec7 for test failure
2025-03-14 17:56:51,752 - collectors.test_collector - INFO - Classifying commit 5b2a0713 for test failure
2025-03-14 17:56:51,896 - collectors.test_collector - INFO - Classifying commit 881038df for test failure
2025-03-14 17:56:52,056 - collectors.test_collector - INFO - Classifying commit aeef1385 for test failure
2025-03-14 17:56:52,223 - collectors.test_collector - INFO - Classifying commit 865b5754 for test failure
2025-03-14 17:56:52,383 - collectors.test_collector - INFO - Classifying commit ab58e586 for test failure
2025-03-14 17:56:52,556 - collectors.test_collector - INFO - Classifying commit 8ef7ddb4 for test failure
2025-03-14 17:56:52,733 - collectors.test_collector - INFO - Classifying commit b14cd71e for test failure
2025-03-14 17:56:52,913 - collectors.test_collector - INFO - Classifying commit b2674c2d for test failure
2025-03-14 17:56:53,167 - collectors.test_collector - INFO - Classifying commit 79f9d1c6 for test failure
2025-03-14 17:56:53,335 - collectors.test_collector - INFO - Classifying commit fba3bfe9 for test failure
2025-03-14 17:56:53,488 - collectors.test_collector - INFO - Classifying commit ab1ec9a1 for test failure
2025-03-14 17:56:53,719 - collectors.test_collector - INFO - Classifying commit 679e1830 for test failure
2025-03-14 17:56:53,863 - collectors.test_collector - INFO - Classifying commit 129082fe for test failure
2025-03-14 17:56:54,000 - collectors.test_collector - INFO - Classifying commit c0c18a98 for test failure
2025-03-14 17:56:54,113 - collectors.test_collector - INFO - Classifying commit b20800d7 for test failure
2025-03-14 17:56:54,229 - collectors.test_collector - INFO - Classifying commit 4b9cac2d for test failure
2025-03-14 17:56:54,349 - collectors.test_collector - INFO - Classifying commit deb57b93 for test failure
2025-03-14 17:56:54,474 - collectors.test_collector - INFO - Classifying commit c70cb5d2 for test failure
2025-03-14 17:56:54,596 - collectors.test_collector - INFO - Classifying commit 3a50aeb2 for test failure
2025-03-14 17:56:54,716 - collectors.test_collector - INFO - Classifying commit 04930aa4 for test failure
2025-03-14 17:56:54,835 - collectors.test_collector - INFO - Classifying commit 73fd0180 for test failure
2025-03-14 17:56:54,950 - collectors.test_collector - INFO - Classifying commit 2a1ae31e for test failure
2025-03-14 17:56:55,071 - collectors.test_collector - INFO - Classifying commit 2e4a0701 for test failure
2025-03-14 17:56:55,190 - collectors.test_collector - INFO - Classifying commit 0ba67381 for test failure
2025-03-14 17:56:55,190 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 17:56:55,285 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 17:57:13,835 - collectors.git_collector - INFO - Found 103 commits
2025-03-14 17:57:13,840 - main - INFO - Results written to ./reports/issue_12345.html
2025-03-14 17:57:13,841 - main - INFO - CommitHunter completed successfully
2025-03-14 19:00:49,312 - root - INFO - Logging system initialized
2025-03-14 19:00:49,313 - main - INFO - Starting CommitHunter
2025-03-14 19:00:49,314 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-14 19:00:49,314 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:00:49,315 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:00:49,316 - main - INFO - No test results directory specified, creating sample test results
2025-03-14 19:00:50,749 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-03-14 19:00:50,751 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-03-14 19:00:50,752 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-03-14 19:00:50,753 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-03-14 19:00:50,753 - main - INFO - Binary search will be skipped.
2025-03-14 19:00:50,754 - main - INFO - Testing test result extraction
2025-03-14 19:00:50,754 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-14 19:00:50,755 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 19:00:50,756 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 19:00:50,757 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 19:00:50,759 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 19:00:50,759 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 19:00:50,761 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-03-14 19:00:50,763 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-03-14 19:00:50,764 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-03-14 19:00:50,764 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 19:00:50,765 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-03-14 19:00:50,766 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-03-14T19:00:50.765240"
}
2025-03-14 19:00:50,769 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-03-14 19:00:50,770 - main - INFO - Using OpenJ9-specific analysis
2025-03-14 19:00:50,771 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-14 19:00:50,772 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 19:00:50,773 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 19:00:50,774 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 19:00:50,775 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 19:00:50,775 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 19:00:50,777 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 19:00:50,777 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-03-14 19:00:50,778 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-03-14T19:00:50.778246"
}
2025-03-14 19:00:50,781 - __main__ - INFO - Running string matcher analysis
2025-03-14 19:00:50,781 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-03-14 19:00:50,782 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:00:50,782 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-03-14 19:00:51,149 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-03-14 19:00:51,150 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:00:51,236 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:01:15,399 - root - INFO - Logging system initialized
2025-03-14 19:01:15,401 - main - INFO - Starting CommitHunter
2025-03-14 19:01:15,402 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-14 19:01:15,402 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:01:15,403 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:01:15,403 - main - INFO - No test results directory specified, creating sample test results
2025-03-14 19:01:16,533 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-03-14 19:01:16,536 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-03-14 19:01:16,536 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-03-14 19:01:16,537 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-03-14 19:01:16,538 - main - INFO - Binary search will be skipped.
2025-03-14 19:01:16,538 - main - INFO - Testing test result extraction
2025-03-14 19:01:16,538 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-14 19:01:16,539 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 19:01:16,541 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 19:01:16,542 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 19:01:16,543 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 19:01:16,544 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 19:01:16,546 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-03-14 19:01:16,547 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-03-14 19:01:16,548 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-03-14 19:01:16,549 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 19:01:16,550 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-03-14 19:01:16,550 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-03-14T19:01:16.550155"
}
2025-03-14 19:01:16,555 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-03-14 19:01:16,556 - main - INFO - Using OpenJ9-specific analysis
2025-03-14 19:01:16,557 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-14 19:01:16,558 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-03-14 19:01:16,559 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-03-14 19:01:16,560 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-03-14 19:01:16,561 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-14 19:01:16,562 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-03-14 19:01:16,563 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-03-14 19:01:16,564 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-03-14 19:01:16,565 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-03-14T19:01:16.565158"
}
2025-03-14 19:01:16,568 - __main__ - INFO - Running string matcher analysis
2025-03-14 19:01:16,568 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-03-14 19:01:16,569 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:01:16,570 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-03-14 19:01:16,763 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-03-14 19:01:16,763 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:01:16,843 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:01:31,946 - collectors.git_collector - INFO - Found 103 commits
2025-03-14 19:01:31,946 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-03-14 19:02:32,084 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-03-14 19:02:32,085 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:02:34,526 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:02:34,528 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:02:35,473 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:02:36,291 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-14 19:02:36,395 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-14 19:02:54,143 - collectors.git_collector - INFO - Found 103 commits
2025-03-14 19:02:54,144 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-03-14 19:02:54,212 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-03-14 19:02:54,269 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-03-14 19:02:54,332 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-03-14 19:02:54,397 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-03-14 19:02:54,462 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-03-14 19:02:54,524 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-03-14 19:02:54,584 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-03-14 19:02:54,643 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-03-14 19:02:54,703 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-03-14 19:02:54,765 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-03-14 19:02:54,826 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-03-14 19:02:54,884 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-03-14 19:02:54,946 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-03-14 19:02:55,001 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-03-14 19:02:55,065 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-03-14 19:02:55,128 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-03-14 19:02:55,195 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-03-14 19:02:55,262 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-03-14 19:02:55,332 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-03-14 19:02:55,404 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-03-14 19:02:55,469 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-03-14 19:02:55,530 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-03-14 19:02:55,592 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-03-14 19:02:55,648 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-03-14 19:02:55,703 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-03-14 19:02:55,755 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-03-14 19:02:55,809 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-03-14 19:02:55,895 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-03-14 19:02:55,965 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-03-14 19:02:56,034 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-03-14 19:02:56,104 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-03-14 19:02:56,164 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-03-14 19:02:56,223 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-03-14 19:02:56,294 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-03-14 19:02:56,357 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-03-14 19:02:56,416 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-03-14 19:02:56,484 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-03-14 19:02:56,593 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-03-14 19:02:56,675 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-03-14 19:02:56,747 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-03-14 19:02:56,811 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-03-14 19:02:56,871 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-03-14 19:02:56,933 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-03-14 19:02:56,991 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-03-14 19:02:57,046 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-03-14 19:02:57,103 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-03-14 19:02:57,160 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-03-14 19:02:57,219 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-03-14 19:02:57,277 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-03-14 19:02:57,334 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-03-14 19:02:57,388 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-03-14 19:02:57,446 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-03-14 19:02:57,511 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-03-14 19:02:57,597 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-03-14 19:02:57,709 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-03-14 19:02:57,796 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-03-14 19:02:57,877 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-03-14 19:02:57,951 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-03-14 19:02:58,023 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-03-14 19:02:58,110 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-03-14 19:02:58,213 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-03-14 19:02:58,304 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-03-14 19:02:58,381 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-03-14 19:02:58,453 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-03-14 19:02:58,543 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-03-14 19:02:58,629 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-03-14 19:02:58,742 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-03-14 19:02:58,838 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-03-14 19:02:58,929 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-03-14 19:02:59,004 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-03-14 19:02:59,091 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-03-14 19:02:59,163 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-03-14 19:02:59,233 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-03-14 19:02:59,299 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-03-14 19:02:59,367 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-03-14 19:02:59,433 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-03-14 19:02:59,489 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-03-14 19:02:59,544 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-03-14 19:02:59,598 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-03-14 19:02:59,659 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-03-14 19:02:59,720 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-03-14 19:02:59,787 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-03-14 19:02:59,864 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-03-14 19:03:00,314 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-03-14 19:03:00,488 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-03-14 19:03:00,552 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-03-14 19:03:00,614 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-03-14 19:03:00,676 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-03-14 19:03:00,741 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-03-14 19:03:00,800 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-03-14 19:03:00,858 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-03-14 19:03:00,919 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-03-14 19:03:00,983 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-03-14 19:03:01,036 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-03-14 19:03:01,092 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-03-14 19:03:01,148 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-03-14 19:03:01,216 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-03-14 19:03:01,285 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-03-14 19:03:01,340 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-03-14 19:03:01,404 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-03-14 19:03:01,469 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-03-14 19:03:01,523 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-03-14 19:03:01,586 - main - INFO - Results written to ./reports/openj9_results.html
2025-03-14 19:03:01,587 - main - INFO - CommitHunter completed successfully
2025-03-19 19:10:57,971 - root - INFO - Logging system initialized
2025-03-19 19:10:57,971 - main - INFO - Starting CommitHunter
2025-03-19 19:10:57,971 - main - INFO - Repository: https://github.com/eclipse-openj9/openj9
2025-03-19 19:10:57,971 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-19 19:10:57,971 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-03-19 19:11:00,801 - collectors.test_collector - INFO - Test collector initialized for .\mock-test-data
2025-03-19 19:11:00,817 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-03-19 19:11:00,817 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-03-19 19:11:00,817 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-03-19 19:11:00,817 - main - INFO - Binary search will be skipped.
2025-03-19 19:11:00,817 - main - INFO - Testing test result extraction
2025-03-19 19:11:00,817 - collectors.test_collector - INFO - Getting test results for all tests
2025-03-19 19:11:00,817 - collectors.test_collector - INFO - Looking for test result files in .\mock-test-data
2025-03-19 19:11:00,817 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.xml
2025-03-19 19:11:00,817 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.json
2025-03-19 19:11:00,817 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-19 19:11:00,832 - collectors.test_collector - INFO - Found test result file: mock-test-data\openj9-failures\jit-failure.json
2025-03-19 19:11:00,832 - collectors.test_collector - ERROR - Error in collect_test_results: 'TestCollector' object has no attribute '_parse_json_results'
2025-03-19 19:11:00,835 - collectors.test_collector - WARNING - No test results found through standard collection methods
2025-03-19 19:11:00,835 - collectors.test_collector - INFO - Extracting error messages from test logs.
2025-03-19 19:11:00,836 - main - WARNING - No test results found
2025-03-19 19:11:00,836 - main - INFO - Attempting to collect all test results
2025-03-19 19:11:00,836 - collectors.test_collector - INFO - Looking for test result files in .\mock-test-data
2025-03-19 19:11:00,836 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.xml
2025-03-19 19:11:00,839 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.json
2025-03-19 19:11:00,840 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-19 19:11:00,840 - collectors.test_collector - INFO - Found test result file: mock-test-data\openj9-failures\jit-failure.json
2025-03-19 19:11:00,841 - collectors.test_collector - ERROR - Error in collect_test_results: 'TestCollector' object has no attribute '_parse_json_results'
2025-03-19 19:11:00,841 - main - INFO - Found 0 test result sets
2025-03-19 19:11:00,842 - main - INFO - Using OpenJ9-specific analysis
2025-03-19 19:11:00,842 - __main__ - INFO - Processing OpenJ9 issue between 96ef5c5b and eac681f0
2025-03-19 19:11:00,843 - collectors.test_collector - INFO - Processing OpenJ9 issue #12345 between 96ef5c5b and eac681f0
2025-03-19 19:11:00,843 - collectors.test_collector - INFO - Looking for test result files in .\mock-test-data
2025-03-19 19:11:00,844 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.xml
2025-03-19 19:11:00,845 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.json
2025-03-19 19:11:00,846 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-03-19 19:11:00,847 - collectors.test_collector - INFO - Found test result file: mock-test-data\openj9-failures\jit-failure.json
2025-03-19 19:11:00,847 - collectors.test_collector - ERROR - Error in collect_test_results: 'TestCollector' object has no attribute '_parse_json_results'
2025-03-19 19:11:00,849 - collectors.test_collector - INFO - Analyzing OpenJ9 test failure: unknown
2025-03-19 19:11:00,851 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-19 19:11:01,048 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-19 19:11:19,408 - collectors.git_collector - INFO - Found 103 commits
2025-03-19 19:11:19,573 - collectors.test_collector - INFO - Classifying commit 96ef5c5b for test failure
2025-03-19 19:11:19,727 - collectors.test_collector - INFO - Classifying commit 7c8005e1 for test failure
2025-03-19 19:11:19,864 - collectors.test_collector - INFO - Classifying commit 8d929fec for test failure
2025-03-19 19:11:20,062 - collectors.test_collector - INFO - Classifying commit 2845176f for test failure
2025-03-19 19:11:20,216 - collectors.test_collector - INFO - Classifying commit a0b34799 for test failure
2025-03-19 19:11:20,350 - collectors.test_collector - INFO - Classifying commit 27dac39d for test failure
2025-03-19 19:11:20,467 - collectors.test_collector - INFO - Classifying commit def4a30a for test failure
2025-03-19 19:11:20,618 - collectors.test_collector - INFO - Classifying commit c2af1fed for test failure
2025-03-19 19:11:20,781 - collectors.test_collector - INFO - Classifying commit 18c16409 for test failure
2025-03-19 19:11:20,916 - collectors.test_collector - INFO - Classifying commit 00d08779 for test failure
2025-03-19 19:11:21,048 - collectors.test_collector - INFO - Classifying commit 51128c1d for test failure
2025-03-19 19:11:21,183 - collectors.test_collector - INFO - Classifying commit 4fc9a456 for test failure
2025-03-19 19:11:21,300 - collectors.test_collector - INFO - Classifying commit a6363210 for test failure
2025-03-19 19:11:21,417 - collectors.test_collector - INFO - Classifying commit 5b6168a9 for test failure
2025-03-19 19:11:21,534 - collectors.test_collector - INFO - Classifying commit 0b32a259 for test failure
2025-03-19 19:11:21,682 - collectors.test_collector - INFO - Classifying commit 9a15c735 for test failure
2025-03-19 19:11:21,797 - collectors.test_collector - INFO - Classifying commit 07797d6f for test failure
2025-03-19 19:11:21,914 - collectors.test_collector - INFO - Classifying commit 90ac2bf1 for test failure
2025-03-19 19:11:22,027 - collectors.test_collector - INFO - Classifying commit abdb2aa8 for test failure
2025-03-19 19:11:22,144 - collectors.test_collector - INFO - Classifying commit a5c3757b for test failure
2025-03-19 19:11:22,261 - collectors.test_collector - INFO - Classifying commit 9574f689 for test failure
2025-03-19 19:11:22,375 - collectors.test_collector - INFO - Classifying commit 2cfd7244 for test failure
2025-03-19 19:11:22,485 - collectors.test_collector - INFO - Classifying commit 6c5f2b35 for test failure
2025-03-19 19:11:22,603 - collectors.test_collector - INFO - Classifying commit ad9620c3 for test failure
2025-03-19 19:11:22,717 - collectors.test_collector - INFO - Classifying commit c792e991 for test failure
2025-03-19 19:11:22,858 - collectors.test_collector - INFO - Classifying commit ae0b2371 for test failure
2025-03-19 19:11:22,986 - collectors.test_collector - INFO - Classifying commit 71f9ccfc for test failure
2025-03-19 19:11:23,133 - collectors.test_collector - INFO - Classifying commit a3a09742 for test failure
2025-03-19 19:11:23,266 - collectors.test_collector - INFO - Classifying commit 860fd146 for test failure
2025-03-19 19:11:23,383 - collectors.test_collector - INFO - Classifying commit 70aac1f2 for test failure
2025-03-19 19:11:23,512 - collectors.test_collector - INFO - Classifying commit bd018c01 for test failure
2025-03-19 19:11:23,617 - collectors.test_collector - INFO - Classifying commit 3b3874e2 for test failure
2025-03-19 19:11:23,751 - collectors.test_collector - INFO - Classifying commit 17894a56 for test failure
2025-03-19 19:11:23,914 - collectors.test_collector - INFO - Classifying commit 3f48ea98 for test failure
2025-03-19 19:11:24,049 - collectors.test_collector - INFO - Classifying commit 0362cb32 for test failure
2025-03-19 19:11:24,166 - collectors.test_collector - INFO - Classifying commit dd27fc0d for test failure
2025-03-19 19:11:24,282 - collectors.test_collector - INFO - Classifying commit 48f557e4 for test failure
2025-03-19 19:11:24,416 - collectors.test_collector - INFO - Classifying commit c5b3b092 for test failure
2025-03-19 19:11:24,582 - collectors.test_collector - INFO - Classifying commit d98e1e5c for test failure
2025-03-19 19:11:24,796 - collectors.test_collector - INFO - Classifying commit 97d0bb70 for test failure
2025-03-19 19:11:24,980 - collectors.test_collector - INFO - Classifying commit 4d506fd4 for test failure
2025-03-19 19:11:25,163 - collectors.test_collector - INFO - Classifying commit 8e7895ff for test failure
2025-03-19 19:11:25,283 - collectors.test_collector - INFO - Classifying commit 01f287ca for test failure
2025-03-19 19:11:25,425 - collectors.test_collector - INFO - Classifying commit 487b005e for test failure
2025-03-19 19:11:25,628 - collectors.test_collector - INFO - Classifying commit 5dbfd876 for test failure
2025-03-19 19:11:25,766 - collectors.test_collector - INFO - Classifying commit 8805cc27 for test failure
2025-03-19 19:11:25,901 - collectors.test_collector - INFO - Classifying commit b6760a14 for test failure
2025-03-19 19:11:26,018 - collectors.test_collector - INFO - Classifying commit e4bf5c1e for test failure
2025-03-19 19:11:26,156 - collectors.test_collector - INFO - Classifying commit 3f3d51f3 for test failure
2025-03-19 19:11:26,281 - collectors.test_collector - INFO - Classifying commit 9142f7eb for test failure
2025-03-19 19:11:26,401 - collectors.test_collector - INFO - Classifying commit f3d33e83 for test failure
2025-03-19 19:11:26,518 - collectors.test_collector - INFO - Classifying commit d65b5fe5 for test failure
2025-03-19 19:11:26,648 - collectors.test_collector - INFO - Classifying commit d776a4a4 for test failure
2025-03-19 19:11:26,763 - collectors.test_collector - INFO - Classifying commit 876f013c for test failure
2025-03-19 19:11:26,883 - collectors.test_collector - INFO - Classifying commit 157a0ef2 for test failure
2025-03-19 19:11:27,000 - collectors.test_collector - INFO - Classifying commit 40c65378 for test failure
2025-03-19 19:11:27,134 - collectors.test_collector - INFO - Classifying commit b4719f8d for test failure
2025-03-19 19:11:27,251 - collectors.test_collector - INFO - Classifying commit eac4b61c for test failure
2025-03-19 19:11:27,407 - collectors.test_collector - INFO - Classifying commit 200b783f for test failure
2025-03-19 19:11:27,534 - collectors.test_collector - INFO - Classifying commit badec667 for test failure
2025-03-19 19:11:27,667 - collectors.test_collector - INFO - Classifying commit 9d601051 for test failure
2025-03-19 19:11:27,798 - collectors.test_collector - INFO - Classifying commit 0076e93a for test failure
2025-03-19 19:11:27,913 - collectors.test_collector - INFO - Classifying commit 5e3816d3 for test failure
2025-03-19 19:11:28,032 - collectors.test_collector - INFO - Classifying commit 4cffe9c3 for test failure
2025-03-19 19:11:28,150 - collectors.test_collector - INFO - Classifying commit d1aaa914 for test failure
2025-03-19 19:11:28,287 - collectors.test_collector - INFO - Classifying commit 7a309afe for test failure
2025-03-19 19:11:28,419 - collectors.test_collector - INFO - Classifying commit 313a00c9 for test failure
2025-03-19 19:11:28,534 - collectors.test_collector - INFO - Classifying commit ff51db6a for test failure
2025-03-19 19:11:28,666 - collectors.test_collector - INFO - Classifying commit 1ed9c082 for test failure
2025-03-19 19:11:28,804 - collectors.test_collector - INFO - Classifying commit 312c8246 for test failure
2025-03-19 19:11:28,918 - collectors.test_collector - INFO - Classifying commit 015b58dd for test failure
2025-03-19 19:11:29,043 - collectors.test_collector - INFO - Classifying commit 7affcea2 for test failure
2025-03-19 19:11:29,166 - collectors.test_collector - INFO - Classifying commit 578e8369 for test failure
2025-03-19 19:11:29,301 - collectors.test_collector - INFO - Classifying commit 95a69485 for test failure
2025-03-19 19:11:29,420 - collectors.test_collector - INFO - Classifying commit c2723578 for test failure
2025-03-19 19:11:29,583 - collectors.test_collector - INFO - Classifying commit 323b8b99 for test failure
2025-03-19 19:11:29,748 - collectors.test_collector - INFO - Classifying commit 3be60c0a for test failure
2025-03-19 19:11:29,883 - collectors.test_collector - INFO - Classifying commit 4ce1a43f for test failure
2025-03-19 19:11:30,000 - collectors.test_collector - INFO - Classifying commit 08e67ec7 for test failure
2025-03-19 19:11:30,117 - collectors.test_collector - INFO - Classifying commit 5b2a0713 for test failure
2025-03-19 19:11:30,238 - collectors.test_collector - INFO - Classifying commit 881038df for test failure
2025-03-19 19:11:30,387 - collectors.test_collector - INFO - Classifying commit aeef1385 for test failure
2025-03-19 19:11:30,522 - collectors.test_collector - INFO - Classifying commit 865b5754 for test failure
2025-03-19 19:11:30,653 - collectors.test_collector - INFO - Classifying commit ab58e586 for test failure
2025-03-19 19:11:30,767 - collectors.test_collector - INFO - Classifying commit 8ef7ddb4 for test failure
2025-03-19 19:11:30,884 - collectors.test_collector - INFO - Classifying commit b14cd71e for test failure
2025-03-19 19:11:31,013 - collectors.test_collector - INFO - Classifying commit b2674c2d for test failure
2025-03-19 19:11:31,190 - collectors.test_collector - INFO - Classifying commit 79f9d1c6 for test failure
2025-03-19 19:11:31,497 - collectors.test_collector - INFO - Classifying commit fba3bfe9 for test failure
2025-03-19 19:11:31,663 - collectors.test_collector - INFO - Classifying commit ab1ec9a1 for test failure
2025-03-19 19:11:31,800 - collectors.test_collector - INFO - Classifying commit 679e1830 for test failure
2025-03-19 19:11:31,980 - collectors.test_collector - INFO - Classifying commit 129082fe for test failure
2025-03-19 19:11:32,134 - collectors.test_collector - INFO - Classifying commit c0c18a98 for test failure
2025-03-19 19:11:32,256 - collectors.test_collector - INFO - Classifying commit b20800d7 for test failure
2025-03-19 19:11:32,397 - collectors.test_collector - INFO - Classifying commit 4b9cac2d for test failure
2025-03-19 19:11:32,524 - collectors.test_collector - INFO - Classifying commit deb57b93 for test failure
2025-03-19 19:11:32,650 - collectors.test_collector - INFO - Classifying commit c70cb5d2 for test failure
2025-03-19 19:11:32,777 - collectors.test_collector - INFO - Classifying commit 3a50aeb2 for test failure
2025-03-19 19:11:32,884 - collectors.test_collector - INFO - Classifying commit 04930aa4 for test failure
2025-03-19 19:11:33,018 - collectors.test_collector - INFO - Classifying commit 73fd0180 for test failure
2025-03-19 19:11:33,134 - collectors.test_collector - INFO - Classifying commit 2a1ae31e for test failure
2025-03-19 19:11:33,266 - collectors.test_collector - INFO - Classifying commit 2e4a0701 for test failure
2025-03-19 19:11:33,383 - collectors.test_collector - INFO - Classifying commit 0ba67381 for test failure
2025-03-19 19:11:33,383 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-03-19 19:11:33,498 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-03-19 19:11:52,638 - collectors.git_collector - INFO - Found 103 commits
2025-03-19 19:11:52,643 - main - INFO - Results written to .\reports\jit_analysis.html
2025-03-19 19:11:52,645 - main - INFO - CommitHunter completed successfully
2025-04-10 04:22:05,725 - root - INFO - Logging system initialized
2025-04-10 04:22:05,726 - main - INFO - Starting CommitHunter
2025-04-10 04:22:05,727 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:22:05,727 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:22:05,728 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:22:05,728 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:22:08,354 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:22:08,366 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:22:08,366 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:22:08,366 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 04:22:08,366 - main - INFO - Binary search will be skipped.
2025-04-10 04:22:08,366 - main - INFO - Testing test result extraction
2025-04-10 04:22:08,366 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:22:08,366 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:22:08,370 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:22:08,371 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:22:08,371 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:22:08,372 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:22:08,373 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:22:08,376 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:22:08,377 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:22:08,377 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:22:08,377 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:22:08,378 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:22:08.378558"
}
2025-04-10 04:22:08,379 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:22:08,379 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:22:08,379 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:22:08,380 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:22:08,381 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:22:08,382 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:22:08,382 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:22:08,383 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:22:08,384 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 04:22:08,384 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:22:08.384564"
}
2025-04-10 04:22:08,385 - __main__ - INFO - Running string matcher analysis
2025-04-10 04:22:08,385 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 04:22:08,385 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:22:08,386 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 04:22:08,576 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 04:22:08,577 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:22:08,653 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:22:23,847 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:22:23,848 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 04:23:16,775 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 04:23:16,778 - main - INFO - CommitHunter completed successfully
2025-04-10 04:37:38,091 - root - INFO - Logging system initialized
2025-04-10 04:37:38,091 - main - INFO - Starting CommitHunter
2025-04-10 04:37:38,091 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:37:38,091 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:37:38,091 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:37:38,106 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:37:39,236 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:37:39,236 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:37:39,240 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:37:39,240 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 04:37:39,240 - main - INFO - Binary search will be skipped.
2025-04-10 04:37:39,240 - main - INFO - Testing test result extraction
2025-04-10 04:37:39,240 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:37:39,240 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:37:39,243 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:37:39,245 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:37:39,245 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:37:39,246 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:37:39,247 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:37:39,248 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:37:39,249 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:37:39,249 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:37:39,250 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:37:39,250 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:37:39.250370"
}
2025-04-10 04:37:39,251 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:37:39,252 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:37:39,252 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:37:39,253 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:37:39,253 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:37:39,253 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:37:39,253 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:37:39,258 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:37:39,258 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:37:39,259 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:37:39.259089"
}
2025-04-10 04:37:39,260 - __main__ - INFO - Running string matcher analysis
2025-04-10 04:37:39,260 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 04:37:39,260 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:37:39,260 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 04:37:39,413 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 04:37:39,413 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:37:39,489 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:37:52,816 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:37:52,816 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 04:38:42,517 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 04:38:42,517 - main - INFO - CommitHunter completed successfully
2025-04-10 04:42:13,097 - root - INFO - Logging system initialized
2025-04-10 04:42:13,097 - main - INFO - Starting CommitHunter
2025-04-10 04:42:13,099 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:42:13,099 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:42:13,099 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:42:13,099 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:42:14,248 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:42:14,248 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:42:14,248 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:42:14,248 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 04:42:14,248 - main - INFO - Binary search will be skipped.
2025-04-10 04:42:14,248 - main - INFO - Testing test result extraction
2025-04-10 04:42:14,260 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:42:14,260 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:42:14,262 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:42:14,263 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:42:14,264 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:42:14,264 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:42:14,265 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:42:14,266 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:42:14,267 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:42:14,267 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:42:14,268 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:42:14,268 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:42:14.268161"
}
2025-04-10 04:42:14,269 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:42:14,270 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:42:14,270 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:42:14,271 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:42:14,273 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:42:14,273 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:42:14,273 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:42:14,273 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:42:14,278 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:42:14,278 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:42:14.278698"
}
2025-04-10 04:42:14,279 - __main__ - INFO - Running string matcher analysis
2025-04-10 04:42:14,279 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 04:42:14,280 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:42:14,280 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 04:42:14,460 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 04:42:14,460 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:42:14,534 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:42:27,883 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:42:27,883 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 04:43:18,836 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 04:43:18,836 - main - INFO - CommitHunter completed successfully
2025-04-10 04:46:30,230 - root - INFO - Logging system initialized
2025-04-10 04:46:30,230 - main - INFO - Starting CommitHunter
2025-04-10 04:46:30,239 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:46:30,239 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:46:30,239 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:46:30,239 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:46:31,415 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:46:31,415 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:46:31,415 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:46:31,415 - main - INFO - Testing test result extraction
2025-04-10 04:46:31,415 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:46:31,415 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:46:31,415 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:46:31,427 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:46:31,428 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:46:31,428 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:46:31,430 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:46:31,431 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:46:31,432 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:46:31,432 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:46:31,433 - collectors.test_collector - INFO - Collected 1 test result sets in 0.02 seconds
2025-04-10 04:46:31,434 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:46:31.433478"
}
2025-04-10 04:46:31,435 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:46:31,435 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:46:31,435 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:46:31,436 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:46:31,437 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:46:31,438 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:46:31,439 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:46:31,441 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:46:31,441 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:46:31,441 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:46:31.441599"
}
2025-04-10 04:46:31,442 - __main__ - INFO - Running binary search analysis first
2025-04-10 04:46:31,443 - main - ERROR - Error in CommitHunter
Traceback (most recent call last):
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 1169, in main
    results = analyze_commits(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 174, in analyze_commits
    binary_results = binary_analyzer.find_problematic_commit(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'BinarySearchAnalyzer' object has no attribute 'find_problematic_commit'
2025-04-10 04:46:41,347 - root - INFO - Logging system initialized
2025-04-10 04:46:41,347 - main - INFO - Starting CommitHunter
2025-04-10 04:46:41,347 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:46:41,347 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:46:41,347 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:46:41,347 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:46:42,431 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:46:42,431 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:46:42,431 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:46:42,431 - main - INFO - Testing test result extraction
2025-04-10 04:46:42,431 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:46:42,431 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:46:42,439 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:46:42,440 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:46:42,441 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:46:42,441 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:46:42,443 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:46:42,444 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:46:42,444 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:46:42,444 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:46:42,445 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:46:42,445 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:46:42.445865"
}
2025-04-10 04:46:42,446 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:46:42,446 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 04:46:42,447 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:46:42,448 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:46:42,449 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:46:42,449 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:46:42,450 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:46:42,452 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:46:42,452 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:46:42,452 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 04:46:42,453 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:46:42.453934"
}
2025-04-10 04:46:42,453 - __main__ - INFO - Running binary search analysis first
2025-04-10 04:46:42,454 - main - ERROR - Error in CommitHunter
Traceback (most recent call last):
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 1135, in main
    results = analyze_commits(
              ^^^^^^^^^^^^^^^^
  File "C:\Users\prash\ML_Projects\CommitHunterPrototype\src\main.py", line 174, in analyze_commits
    binary_results = binary_analyzer.find_problematic_commit(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'BinarySearchAnalyzer' object has no attribute 'find_problematic_commit'
2025-04-10 04:49:13,660 - root - INFO - Logging system initialized
2025-04-10 04:49:13,660 - main - INFO - Starting CommitHunter
2025-04-10 04:49:13,660 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:49:13,660 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:49:13,660 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:49:13,660 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:49:14,779 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:49:14,779 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:49:14,785 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:49:14,785 - main - INFO - Testing test result extraction
2025-04-10 04:49:14,785 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:49:14,786 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:49:14,787 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:49:14,787 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:49:14,788 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:49:14,789 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:49:14,790 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:49:14,791 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:49:14,792 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:49:14,792 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:49:14,793 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:49:14,794 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:49:14.793957"
}
2025-04-10 04:49:14,796 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:49:14,796 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 04:49:14,797 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:49:14,797 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:49:14,799 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:49:14,800 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:49:14,801 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:49:14,801 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:49:14,803 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:49:14,803 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:49:14,804 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:49:14.804183"
}
2025-04-10 04:49:14,804 - __main__ - INFO - Running binary search analysis first
2025-04-10 04:49:14,805 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:49:14,966 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:49:28,828 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:49:39,773 - __main__ - INFO - Running test 'org.openj9.TestProfiler.testMethod' on commit 96ef5c5b (mode: full)
2025-04-10 04:49:39,773 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:49:41,796 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:49:41,796 - collectors.test_collector - INFO - Running test 'org.openj9.TestProfiler.testMethod' in full mode
2025-04-10 04:49:41,812 - collectors.test_collector - WARNING - Could not determine test command for 'org.openj9.TestProfiler.testMethod'
2025-04-10 04:49:41,812 - collectors.test_collector - WARNING - Could not determine how to run test 'org.openj9.TestProfiler.testMethod'
2025-04-10 04:49:41,812 - __main__ - WARNING - No result for test 'org.openj9.TestProfiler.testMethod' on commit 96ef5c5b
2025-04-10 04:49:41,812 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:49:41,899 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:49:56,371 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:49:56,371 - __main__ - INFO - Running string matcher analysis
2025-04-10 04:49:56,371 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 04:49:56,379 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:49:56,379 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 04:49:56,482 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 04:49:56,482 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:49:56,568 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:50:11,308 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:50:11,308 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 04:50:52,370 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 04:50:52,370 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:50:52,946 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:50:52,961 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:50:53,724 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:50:55,227 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:50:55,319 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:51:09,268 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:51:09,268 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 04:51:09,316 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 04:51:09,368 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 04:51:09,416 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 04:51:09,466 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 04:51:09,506 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 04:51:09,556 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 04:51:09,605 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 04:51:09,650 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 04:51:09,712 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 04:51:09,769 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 04:51:09,834 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 04:51:09,884 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 04:51:09,934 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 04:51:09,983 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 04:51:10,034 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 04:51:10,081 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 04:51:10,132 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 04:51:10,181 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 04:51:10,223 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 04:51:10,273 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 04:51:10,335 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 04:51:10,385 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 04:51:10,433 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 04:51:10,484 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 04:51:10,533 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 04:51:10,584 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 04:51:10,633 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 04:51:10,699 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 04:51:10,756 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 04:51:10,810 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 04:51:10,855 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 04:51:10,901 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 04:51:10,955 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 04:51:11,069 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 04:51:11,130 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 04:51:11,186 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 04:51:11,235 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 04:51:11,302 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 04:51:11,349 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 04:51:11,400 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 04:51:11,449 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 04:51:11,501 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 04:51:11,552 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 04:51:11,605 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 04:51:11,650 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 04:51:11,704 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 04:51:11,757 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 04:51:11,818 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 04:51:11,872 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 04:51:11,922 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 04:51:11,984 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 04:51:12,034 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 04:51:12,084 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 04:51:12,136 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 04:51:12,185 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 04:51:12,249 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 04:51:12,301 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 04:51:12,350 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 04:51:12,401 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 04:51:12,451 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 04:51:12,501 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 04:51:12,552 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 04:51:12,604 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 04:51:12,660 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 04:51:12,705 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 04:51:12,765 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 04:51:12,822 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 04:51:12,873 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 04:51:12,924 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 04:51:12,976 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 04:51:13,022 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 04:51:13,074 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 04:51:13,117 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 04:51:13,173 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 04:51:13,218 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 04:51:13,277 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 04:51:13,339 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 04:51:13,409 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 04:51:13,466 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 04:51:13,517 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 04:51:13,565 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 04:51:13,615 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 04:51:13,664 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 04:51:13,714 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 04:51:13,764 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 04:51:13,818 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 04:51:13,883 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 04:51:13,934 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 04:51:13,984 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 04:51:14,033 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 04:51:14,084 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 04:51:14,135 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 04:51:14,184 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 04:51:14,240 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 04:51:14,283 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 04:51:14,339 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 04:51:14,384 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 04:51:14,450 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 04:51:14,500 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 04:51:14,551 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 04:51:14,614 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 04:51:14,668 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 04:51:14,720 - main - INFO - Results written to ./reports/test_analysis.html
2025-04-10 04:51:14,720 - main - INFO - CommitHunter completed successfully
2025-04-10 04:56:29,616 - root - INFO - Logging system initialized
2025-04-10 04:56:29,616 - main - INFO - Starting CommitHunter
2025-04-10 04:56:29,616 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 04:56:29,616 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:56:29,616 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:56:29,616 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 04:56:30,648 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 04:56:30,648 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 04:56:30,648 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 04:56:30,664 - main - INFO - Testing test result extraction
2025-04-10 04:56:30,665 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:56:30,665 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:56:30,665 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:56:30,668 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:56:30,669 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:56:30,669 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:56:30,671 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 04:56:30,672 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 04:56:30,672 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 04:56:30,673 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:56:30,673 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:56:30,674 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:56:30.673927"
}
2025-04-10 04:56:30,675 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 04:56:30,675 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 04:56:30,676 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 04:56:30,676 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 04:56:30,678 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 04:56:30,678 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 04:56:30,678 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 04:56:30,678 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 04:56:30,681 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 04:56:30,682 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 04:56:30,683 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T04:56:30.682412"
}
2025-04-10 04:56:30,683 - __main__ - INFO - Running binary search analysis first
2025-04-10 04:56:30,684 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:56:30,828 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:56:44,107 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:56:54,607 - __main__ - INFO - Running test 'JITTest' on commit 96ef5c5b (mode: full)
2025-04-10 04:56:54,607 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:56:55,656 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:56:55,656 - collectors.test_collector - INFO - Running test 'JITTest' in full mode
2025-04-10 04:56:55,656 - collectors.test_collector - WARNING - Could not determine test command for 'JITTest'
2025-04-10 04:56:55,656 - collectors.test_collector - WARNING - Could not determine how to run test 'JITTest'
2025-04-10 04:56:55,656 - __main__ - WARNING - No result for test 'JITTest' on commit 96ef5c5b
2025-04-10 04:56:55,656 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:56:55,746 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:57:09,895 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:57:09,895 - __main__ - INFO - Running string matcher analysis
2025-04-10 04:57:09,895 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 04:57:09,895 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:57:09,895 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 04:57:09,998 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 04:57:09,998 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:57:10,083 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:57:24,752 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:57:24,752 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 04:58:06,955 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 04:58:06,955 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:58:07,615 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:58:07,615 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:58:08,465 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:58:08,998 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 04:58:09,083 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 04:58:24,173 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 04:58:24,173 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 04:58:24,227 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 04:58:24,285 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 04:58:24,360 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 04:58:24,433 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 04:58:24,511 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 04:58:24,589 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 04:58:24,703 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 04:58:24,872 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 04:58:24,956 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 04:58:25,017 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 04:58:25,084 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 04:58:25,146 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 04:58:25,215 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 04:58:25,285 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 04:58:25,351 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 04:58:25,412 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 04:58:25,586 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 04:58:25,663 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 04:58:25,723 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 04:58:25,782 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 04:58:25,841 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 04:58:25,902 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 04:58:25,960 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 04:58:26,006 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 04:58:26,075 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 04:58:26,134 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 04:58:26,187 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 04:58:26,298 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 04:58:26,449 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 04:58:26,509 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 04:58:26,570 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 04:58:26,622 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 04:58:26,679 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 04:58:26,749 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 04:58:26,802 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 04:58:26,901 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 04:58:26,950 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 04:58:27,001 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 04:58:27,051 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 04:58:27,239 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 04:58:27,322 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 04:58:27,396 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 04:58:27,450 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 04:58:27,522 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 04:58:27,579 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 04:58:27,623 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 04:58:27,676 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 04:58:27,722 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 04:58:27,771 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 04:58:27,936 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 04:58:28,022 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 04:58:28,091 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 04:58:28,159 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 04:58:28,215 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 04:58:28,272 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 04:58:28,317 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 04:58:28,378 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 04:58:28,432 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 04:58:28,495 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 04:58:28,539 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 04:58:28,589 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 04:58:28,644 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 04:58:28,688 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 04:58:28,765 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 04:58:28,892 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 04:58:28,967 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 04:58:29,049 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 04:58:29,232 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 04:58:29,316 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 04:58:29,383 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 04:58:29,433 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 04:58:29,501 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 04:58:29,575 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 04:58:29,634 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 04:58:29,709 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 04:58:29,772 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 04:58:29,838 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 04:58:29,904 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 04:58:30,096 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 04:58:30,211 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 04:58:30,302 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 04:58:30,377 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 04:58:30,453 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 04:58:30,515 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 04:58:30,571 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 04:58:30,633 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 04:58:30,695 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 04:58:30,898 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 04:58:30,967 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 04:58:31,021 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 04:58:31,096 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 04:58:31,173 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 04:58:31,256 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 04:58:31,333 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 04:58:31,422 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 04:58:31,492 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 04:58:31,559 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 04:58:31,631 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 04:58:31,696 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 04:58:31,770 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 04:58:31,833 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 04:58:31,897 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 04:58:31,957 - main - INFO - Results written to ./reports/jit_analysis1.html
2025-04-10 04:58:31,957 - main - INFO - CommitHunter completed successfully
2025-04-10 05:01:59,054 - root - INFO - Logging system initialized
2025-04-10 05:01:59,054 - main - INFO - Starting CommitHunter
2025-04-10 05:01:59,054 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:01:59,054 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:01:59,054 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:01:59,054 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:02:00,122 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:02:00,122 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:02:00,122 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:02:00,122 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:02:00,122 - main - INFO - Binary search will be skipped.
2025-04-10 05:02:00,122 - main - INFO - Testing test result extraction
2025-04-10 05:02:00,122 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:02:00,122 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:02:00,122 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:02:00,135 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:02:00,137 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:02:00,137 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:02:00,138 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:02:00,139 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:02:00,139 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:02:00,140 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:02:00,141 - collectors.test_collector - INFO - Collected 1 test result sets in 0.02 seconds
2025-04-10 05:02:00,141 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:02:00.141696"
}
2025-04-10 05:02:00,142 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:02:00,143 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:02:00,143 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:02:00,143 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:02:00,143 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:02:00,143 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:02:00,148 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:02:00,149 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:02:00,150 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:02:00,151 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:02:00.150252"
}
2025-04-10 05:02:00,152 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:02:00,152 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:02:00,152 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:02:00,153 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:02:00,362 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:02:00,362 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:02:00,509 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:02:13,417 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:02:13,417 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:03:05,304 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:03:05,304 - main - INFO - CommitHunter completed successfully
2025-04-10 05:05:58,662 - root - INFO - Logging system initialized
2025-04-10 05:05:58,662 - main - INFO - Starting CommitHunter
2025-04-10 05:05:58,662 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:05:58,662 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:05:58,662 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:05:58,662 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:06:00,198 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:06:00,198 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:06:00,198 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:06:00,198 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:06:00,198 - main - INFO - Binary search will be skipped.
2025-04-10 05:06:00,206 - main - INFO - Testing test result extraction
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:06:00,206 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:06:00,213 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:06:00,215 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:06:00,215 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:06:00,216 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:06:00,216 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:06:00.216216"
}
2025-04-10 05:06:00,217 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:06:00,218 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:06:00,219 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:06:00,220 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:06:00,221 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:06:00,222 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:06:00,223 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:06:00,223 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:06:00,226 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:06:00,226 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:06:00.226476"
}
2025-04-10 05:06:00,229 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:06:00,229 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:06:00,231 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:06:00,231 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:06:00,531 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:06:00,533 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:06:00,615 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:06:15,132 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:06:15,132 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:07:07,555 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:07:07,556 - main - INFO - CommitHunter completed successfully
2025-04-10 05:10:22,830 - root - INFO - Logging system initialized
2025-04-10 05:10:22,830 - main - INFO - Starting CommitHunter
2025-04-10 05:10:22,830 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:10:22,830 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:10:22,830 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:10:22,830 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:10:23,917 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:10:23,917 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:10:23,917 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:10:23,917 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:10:23,917 - main - INFO - Binary search will be skipped.
2025-04-10 05:10:23,917 - main - INFO - Testing test result extraction
2025-04-10 05:10:23,917 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:10:23,917 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:10:23,917 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:10:23,917 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:10:23,926 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:10:23,926 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:10:23,928 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:10:23,928 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:10:23,929 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:10:23,929 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:10:23,929 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:10:23,929 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:10:23.929282"
}
2025-04-10 05:10:23,931 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:10:23,931 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 05:10:23,932 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:10:23,933 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:10:23,934 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:10:23,934 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:10:23,935 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:10:23,935 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:10:23,937 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:10:23,937 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 05:10:23,938 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:10:23.938833"
}
2025-04-10 05:10:23,938 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:10:23,939 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:10:23,939 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:10:23,939 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:10:24,133 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:10:24,141 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:10:24,217 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:10:37,849 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:10:37,849 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:11:31,077 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 05:11:31,077 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:11:32,547 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:11:32,547 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:11:33,404 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:11:34,176 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:11:34,278 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:11:50,542 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:11:50,557 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 05:11:50,601 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 05:11:50,652 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 05:11:50,716 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 05:11:50,768 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 05:11:50,839 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 05:11:50,901 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 05:11:50,958 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 05:11:51,019 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 05:11:51,083 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 05:11:51,136 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 05:11:51,202 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 05:11:51,268 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 05:11:51,332 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 05:11:51,386 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 05:11:51,452 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 05:11:51,501 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 05:11:51,556 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 05:11:51,601 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 05:11:51,656 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 05:11:51,706 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 05:11:51,756 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 05:11:51,806 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 05:11:51,856 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 05:11:51,905 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 05:11:51,951 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 05:11:51,998 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 05:11:52,040 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 05:11:52,102 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 05:11:52,155 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 05:11:52,206 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 05:11:52,262 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 05:11:52,318 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 05:11:52,367 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 05:11:52,449 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 05:11:52,501 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 05:11:52,551 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 05:11:52,601 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 05:11:52,657 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 05:11:52,710 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 05:11:52,756 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 05:11:52,809 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 05:11:52,865 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 05:11:52,915 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 05:11:53,000 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 05:11:53,069 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 05:11:53,123 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 05:11:53,169 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 05:11:53,222 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 05:11:53,268 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 05:11:53,322 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 05:11:53,373 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 05:11:53,423 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 05:11:53,486 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 05:11:53,539 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 05:11:53,586 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 05:11:53,643 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 05:11:53,693 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 05:11:53,745 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 05:11:53,791 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 05:11:53,839 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 05:11:53,884 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 05:11:53,940 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 05:11:53,984 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 05:11:54,038 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 05:11:54,085 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 05:11:54,135 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 05:11:54,185 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 05:11:54,234 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 05:11:54,281 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 05:11:54,329 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 05:11:54,379 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 05:11:54,430 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 05:11:54,472 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 05:11:54,522 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 05:11:54,567 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 05:11:54,616 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 05:11:54,663 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 05:11:54,707 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 05:11:54,755 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 05:11:54,819 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 05:11:54,948 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 05:11:55,004 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 05:11:55,053 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 05:11:55,098 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 05:11:55,141 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 05:11:55,187 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 05:11:55,242 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 05:11:55,302 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 05:11:55,362 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 05:11:55,415 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 05:11:55,463 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 05:11:55,516 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 05:11:55,568 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 05:11:55,618 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 05:11:55,672 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 05:11:55,720 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 05:11:55,773 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 05:11:55,820 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 05:11:55,879 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 05:11:55,935 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 05:11:55,989 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 05:11:56,043 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 05:11:56,087 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:11:56,098 - main - INFO - CommitHunter completed successfully
2025-04-10 05:13:44,964 - root - INFO - Logging system initialized
2025-04-10 05:13:44,967 - main - INFO - Starting CommitHunter
2025-04-10 05:13:44,969 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:13:44,969 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:13:44,970 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:13:44,970 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:13:46,152 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:13:46,152 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:13:46,168 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:13:46,168 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:13:46,168 - main - INFO - Binary search will be skipped.
2025-04-10 05:13:46,168 - main - INFO - Testing test result extraction
2025-04-10 05:13:46,168 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:13:46,168 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:13:46,172 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:13:46,173 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:13:46,173 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:13:46,174 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:13:46,175 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:13:46,176 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:13:46,177 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:13:46,178 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:13:46,178 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:13:46,178 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:13:46.178315"
}
2025-04-10 05:13:46,178 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:13:46,182 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 05:13:46,182 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:13:46,183 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:13:46,184 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:13:46,185 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:13:46,185 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:13:46,186 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:13:46,187 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:13:46,188 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 05:13:46,189 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:13:46.188069"
}
2025-04-10 05:13:46,189 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:13:46,190 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:13:46,190 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:13:46,190 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:13:46,346 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:13:46,347 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:13:46,418 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:14:00,307 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:14:00,308 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:14:55,262 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 05:14:55,263 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:14:56,292 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:14:56,292 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:14:57,451 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:14:58,001 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:14:58,084 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:15:13,798 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:15:13,798 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 05:15:13,882 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 05:15:13,959 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 05:15:14,033 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 05:15:14,111 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 05:15:14,188 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 05:15:14,266 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 05:15:14,337 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 05:15:14,398 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 05:15:14,466 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 05:15:14,553 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 05:15:14,634 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 05:15:14,716 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 05:15:14,801 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 05:15:14,899 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 05:15:14,964 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 05:15:15,028 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 05:15:15,083 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 05:15:15,152 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 05:15:15,217 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 05:15:15,285 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 05:15:15,448 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 05:15:15,628 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 05:15:15,720 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 05:15:15,805 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 05:15:15,898 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 05:15:15,985 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 05:15:16,059 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 05:15:16,243 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 05:15:16,325 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 05:15:16,399 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 05:15:16,484 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 05:15:16,566 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 05:15:16,636 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 05:15:16,746 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 05:15:16,801 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 05:15:16,860 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 05:15:16,926 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 05:15:16,991 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 05:15:17,057 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 05:15:17,223 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 05:15:17,313 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 05:15:17,431 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 05:15:17,486 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 05:15:17,553 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 05:15:17,613 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 05:15:17,672 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 05:15:17,739 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 05:15:17,800 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 05:15:17,869 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 05:15:17,933 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 05:15:17,997 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 05:15:18,070 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 05:15:18,224 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 05:15:18,285 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 05:15:18,334 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 05:15:18,388 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 05:15:18,433 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 05:15:18,488 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 05:15:18,535 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 05:15:18,586 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 05:15:18,650 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 05:15:18,707 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 05:15:18,853 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 05:15:18,934 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 05:15:18,986 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 05:15:19,054 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 05:15:19,102 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 05:15:19,168 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 05:15:19,218 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 05:15:19,278 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 05:15:19,370 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 05:15:19,485 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 05:15:19,549 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 05:15:19,598 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 05:15:19,651 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 05:15:19,700 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 05:15:19,765 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 05:15:19,820 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 05:15:19,865 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 05:15:20,000 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 05:15:20,113 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 05:15:20,167 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 05:15:20,216 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 05:15:20,269 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 05:15:20,332 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 05:15:20,400 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 05:15:20,468 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 05:15:20,534 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 05:15:20,588 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 05:15:20,771 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 05:15:20,852 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 05:15:20,917 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 05:15:20,985 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 05:15:21,039 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 05:15:21,101 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 05:15:21,183 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 05:15:21,243 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 05:15:21,301 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 05:15:21,366 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 05:15:21,434 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 05:15:21,549 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 05:15:21,668 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 05:15:21,717 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:15:21,717 - main - INFO - CommitHunter completed successfully
2025-04-10 05:16:20,491 - root - INFO - Logging system initialized
2025-04-10 05:16:20,492 - main - INFO - Starting CommitHunter
2025-04-10 05:16:20,493 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:16:20,493 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:16:20,494 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:16:20,494 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:16:22,151 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:16:22,160 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:16:22,160 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:16:22,160 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:16:22,160 - main - INFO - Binary search will be skipped.
2025-04-10 05:16:22,160 - main - INFO - Testing test result extraction
2025-04-10 05:16:22,160 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:16:22,160 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:16:22,164 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:16:22,165 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:16:22,166 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:16:22,166 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:16:22,167 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:16:22,168 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:16:22,169 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:16:22,169 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:16:22,170 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:16:22,170 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:16:22.170455"
}
2025-04-10 05:16:22,171 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:16:22,171 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 05:16:22,172 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:16:22,172 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:16:22,173 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:16:22,173 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:16:22,175 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:16:22,175 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:16:22,176 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:16:22,176 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 05:16:22,176 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:16:22.176943"
}
2025-04-10 05:16:22,176 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:16:22,176 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:16:22,176 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:16:22,176 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:16:22,348 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:16:22,350 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:16:22,417 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:16:36,188 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:16:36,188 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:17:32,376 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 05:17:32,376 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:17:33,340 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:17:33,340 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:17:34,378 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:17:34,894 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:17:34,990 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:17:49,636 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:17:49,636 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 05:17:49,683 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 05:17:49,735 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 05:17:49,795 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 05:17:49,849 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 05:17:49,899 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 05:17:49,949 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 05:17:50,000 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 05:17:50,055 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 05:17:50,106 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 05:17:50,159 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 05:17:50,209 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 05:17:50,269 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 05:17:50,446 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 05:17:50,519 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 05:17:50,589 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 05:17:50,641 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 05:17:50,703 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 05:17:50,765 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 05:17:50,823 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 05:17:50,887 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 05:17:50,933 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 05:17:50,999 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 05:17:51,136 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 05:17:51,203 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 05:17:51,267 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 05:17:51,335 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 05:17:51,400 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 05:17:51,468 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 05:17:51,523 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 05:17:51,581 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 05:17:51,637 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 05:17:51,696 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 05:17:51,846 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 05:17:51,979 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 05:17:52,034 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 05:17:52,073 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 05:17:52,135 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 05:17:52,193 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 05:17:52,255 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 05:17:52,299 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 05:17:52,351 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 05:17:52,433 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 05:17:52,582 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 05:17:52,648 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 05:17:52,700 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 05:17:52,757 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 05:17:52,816 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 05:17:52,868 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 05:17:52,942 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 05:17:53,009 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 05:17:53,087 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 05:17:53,150 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 05:17:53,252 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 05:17:53,384 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 05:17:53,450 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 05:17:53,510 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 05:17:53,557 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 05:17:53,616 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 05:17:53,682 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 05:17:53,740 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 05:17:53,782 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 05:17:53,839 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 05:17:53,898 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 05:17:53,951 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 05:17:54,008 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 05:17:54,067 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 05:17:54,116 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 05:17:54,183 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 05:17:54,236 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 05:17:54,297 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 05:17:54,352 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 05:17:54,402 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 05:17:54,470 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 05:17:54,519 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 05:17:54,568 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 05:17:54,623 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 05:17:54,678 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 05:17:54,735 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 05:17:54,793 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 05:17:54,849 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 05:17:54,902 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 05:17:54,961 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 05:17:55,126 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 05:17:55,201 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 05:17:55,303 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 05:17:55,408 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 05:17:55,504 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 05:17:55,587 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 05:17:55,670 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 05:17:55,741 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 05:17:55,801 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 05:17:55,851 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 05:17:55,915 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 05:17:56,082 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 05:17:56,135 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 05:17:56,201 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 05:17:56,268 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 05:17:56,319 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 05:17:56,386 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 05:17:56,465 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 05:17:56,534 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 05:17:56,596 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 05:17:56,769 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:17:56,769 - main - INFO - CommitHunter completed successfully
2025-04-10 05:18:07,549 - root - INFO - Logging system initialized
2025-04-10 05:18:07,550 - main - INFO - Starting CommitHunter
2025-04-10 05:18:07,550 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:18:07,550 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:18:07,550 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:18:07,550 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:18:08,740 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:18:08,740 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:18:08,740 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:18:08,740 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:18:08,740 - main - INFO - Binary search will be skipped.
2025-04-10 05:18:08,740 - main - INFO - Testing test result extraction
2025-04-10 05:18:08,740 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:18:08,740 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:18:08,748 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:18:08,749 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:18:08,750 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:18:08,751 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:18:08,752 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:18:08,753 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:18:08,754 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:18:08,754 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:18:08,755 - collectors.test_collector - INFO - Collected 1 test result sets in 0.02 seconds
2025-04-10 05:18:08,756 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:18:08.755451"
}
2025-04-10 05:18:08,757 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:18:08,757 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 05:18:08,758 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:18:08,758 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:18:08,760 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:18:08,761 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:18:08,762 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:18:08,762 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:18:08,764 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:18:08,764 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:18:08,765 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:18:08.765904"
}
2025-04-10 05:18:08,765 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:18:08,765 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:18:08,765 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:18:08,765 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:18:08,945 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:18:08,945 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:18:08,945 - collectors.git_collector - INFO - For All Commits 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:18:09,127 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:18:23,062 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:18:23,062 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:19:18,870 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 05:19:18,870 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:19:19,865 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:19:19,866 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:19:20,883 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:19:21,465 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:19:21,466 - collectors.git_collector - INFO - For All Commits 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:19:21,552 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:19:41,178 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:19:41,179 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 05:19:41,224 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 05:19:41,294 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 05:19:41,359 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 05:19:41,432 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 05:19:41,507 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 05:19:41,749 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 05:19:41,827 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 05:19:41,899 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 05:19:41,973 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 05:19:42,064 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 05:19:42,175 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 05:19:42,265 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 05:19:42,353 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 05:19:42,437 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 05:19:42,525 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 05:19:42,600 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 05:19:42,700 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 05:19:42,822 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 05:19:42,913 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 05:19:43,011 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 05:19:43,105 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 05:19:43,201 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 05:19:43,300 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 05:19:43,387 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 05:19:43,451 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 05:19:43,669 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 05:19:43,781 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 05:19:43,899 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 05:19:43,995 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 05:19:44,087 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 05:19:44,170 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 05:19:44,252 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 05:19:44,347 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 05:19:44,457 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 05:19:44,543 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 05:19:44,628 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 05:19:44,701 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 05:19:44,770 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 05:19:44,849 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 05:19:44,935 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 05:19:45,015 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 05:19:45,179 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 05:19:45,300 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 05:19:45,397 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 05:19:45,472 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 05:19:45,567 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 05:19:45,647 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 05:19:45,720 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 05:19:45,797 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 05:19:45,874 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 05:19:45,940 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 05:19:45,999 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 05:19:46,051 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 05:19:46,118 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 05:19:46,169 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 05:19:46,338 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 05:19:46,409 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 05:19:46,486 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 05:19:46,550 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 05:19:46,606 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 05:19:46,683 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 05:19:46,758 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 05:19:46,836 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 05:19:46,918 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 05:19:46,999 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 05:19:47,200 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 05:19:47,283 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 05:19:47,367 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 05:19:47,442 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 05:19:47,521 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 05:19:47,600 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 05:19:47,678 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 05:19:47,750 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 05:19:47,993 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 05:19:48,079 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 05:19:48,155 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 05:19:48,222 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 05:19:48,282 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 05:19:48,342 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 05:19:48,401 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 05:19:48,465 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 05:19:48,518 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 05:19:48,584 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 05:19:48,636 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 05:19:48,695 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 05:19:48,746 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 05:19:48,802 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 05:19:48,964 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 05:19:49,023 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 05:19:49,085 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 05:19:49,133 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 05:19:49,183 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 05:19:49,249 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 05:19:49,303 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 05:19:49,357 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 05:19:49,416 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 05:19:49,468 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 05:19:49,541 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 05:19:49,590 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 05:19:49,664 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 05:19:49,863 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 05:19:49,919 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 05:19:49,982 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:19:49,982 - main - INFO - CommitHunter completed successfully
2025-04-10 05:22:14,481 - root - INFO - Logging system initialized
2025-04-10 05:22:14,481 - main - INFO - Starting CommitHunter
2025-04-10 05:22:14,482 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:22:14,483 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:22:14,483 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:22:14,483 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:22:15,648 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:22:15,648 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:22:15,648 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:22:15,648 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:22:15,648 - main - INFO - Binary search will be skipped.
2025-04-10 05:22:15,648 - main - INFO - Testing test result extraction
2025-04-10 05:22:15,648 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:22:15,648 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:22:15,657 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:22:15,658 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:22:15,658 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:22:15,659 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:22:15,660 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:22:15,661 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:22:15,661 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:22:15,662 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:22:15,663 - collectors.test_collector - INFO - Collected 1 test result sets in 0.02 seconds
2025-04-10 05:22:15,663 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:22:15.663130"
}
2025-04-10 05:22:15,664 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:22:15,664 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 05:22:15,665 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:22:15,665 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:22:15,666 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:22:15,666 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:22:15,667 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:22:15,668 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:22:15,670 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:22:15,670 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 05:22:15,671 - __main__ - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:22:15.671421"
}
2025-04-10 05:22:15,672 - __main__ - INFO - Running string matcher analysis
2025-04-10 05:22:15,672 - __main__ - INFO - No problematic commit identified, using full commit range for string matcher
2025-04-10 05:22:15,672 - analyzers.string_matcher - INFO - Finding suspicious commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:22:15,673 - analyzers.string_matcher - INFO - Processing error message (326 chars): Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfi...
2025-04-10 05:22:15,892 - analyzers.string_matcher - INFO - Using 26 keywords: java, org, openj9, testprofil, nativemethodaccessorimpl, invok, testmethod, base, jdk, intern...
2025-04-10 05:22:15,893 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:22:15,982 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:22:31,095 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:22:31,095 - analyzers.string_matcher - INFO - Analyzing 103 commits
2025-04-10 05:23:25,083 - analyzers.perf_analyzer - INFO - Analyzing OpenJ9 performance between 96ef5c5b and eac681f0
2025-04-10 05:23:25,083 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:23:26,094 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:23:26,094 - collectors.git_collector - INFO - Checking out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:23:26,919 - collectors.git_collector - INFO - Successfully checked out commit eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:23:27,500 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:23:27,610 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:23:42,581 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:23:42,581 - analyzers.perf_analyzer - INFO - Classifying commit 96ef5c5b for performance regression
2025-04-10 05:23:42,619 - analyzers.perf_analyzer - INFO - Classifying commit 7c8005e1 for performance regression
2025-04-10 05:23:42,679 - analyzers.perf_analyzer - INFO - Classifying commit 8d929fec for performance regression
2025-04-10 05:23:42,736 - analyzers.perf_analyzer - INFO - Classifying commit 2845176f for performance regression
2025-04-10 05:23:42,800 - analyzers.perf_analyzer - INFO - Classifying commit a0b34799 for performance regression
2025-04-10 05:23:42,849 - analyzers.perf_analyzer - INFO - Classifying commit 27dac39d for performance regression
2025-04-10 05:23:43,008 - analyzers.perf_analyzer - INFO - Classifying commit def4a30a for performance regression
2025-04-10 05:23:43,110 - analyzers.perf_analyzer - INFO - Classifying commit c2af1fed for performance regression
2025-04-10 05:23:43,186 - analyzers.perf_analyzer - INFO - Classifying commit 18c16409 for performance regression
2025-04-10 05:23:43,253 - analyzers.perf_analyzer - INFO - Classifying commit 00d08779 for performance regression
2025-04-10 05:23:43,312 - analyzers.perf_analyzer - INFO - Classifying commit 51128c1d for performance regression
2025-04-10 05:23:43,356 - analyzers.perf_analyzer - INFO - Classifying commit 4fc9a456 for performance regression
2025-04-10 05:23:43,408 - analyzers.perf_analyzer - INFO - Classifying commit a6363210 for performance regression
2025-04-10 05:23:43,469 - analyzers.perf_analyzer - INFO - Classifying commit 5b6168a9 for performance regression
2025-04-10 05:23:43,535 - analyzers.perf_analyzer - INFO - Classifying commit 0b32a259 for performance regression
2025-04-10 05:23:43,591 - analyzers.perf_analyzer - INFO - Classifying commit 9a15c735 for performance regression
2025-04-10 05:23:43,633 - analyzers.perf_analyzer - INFO - Classifying commit 07797d6f for performance regression
2025-04-10 05:23:43,704 - analyzers.perf_analyzer - INFO - Classifying commit 90ac2bf1 for performance regression
2025-04-10 05:23:43,763 - analyzers.perf_analyzer - INFO - Classifying commit abdb2aa8 for performance regression
2025-04-10 05:23:43,817 - analyzers.perf_analyzer - INFO - Classifying commit a5c3757b for performance regression
2025-04-10 05:23:43,869 - analyzers.perf_analyzer - INFO - Classifying commit 9574f689 for performance regression
2025-04-10 05:23:43,934 - analyzers.perf_analyzer - INFO - Classifying commit 2cfd7244 for performance regression
2025-04-10 05:23:43,984 - analyzers.perf_analyzer - INFO - Classifying commit 6c5f2b35 for performance regression
2025-04-10 05:23:44,035 - analyzers.perf_analyzer - INFO - Classifying commit ad9620c3 for performance regression
2025-04-10 05:23:44,094 - analyzers.perf_analyzer - INFO - Classifying commit c792e991 for performance regression
2025-04-10 05:23:44,140 - analyzers.perf_analyzer - INFO - Classifying commit ae0b2371 for performance regression
2025-04-10 05:23:44,199 - analyzers.perf_analyzer - INFO - Classifying commit 71f9ccfc for performance regression
2025-04-10 05:23:44,273 - analyzers.perf_analyzer - INFO - Classifying commit a3a09742 for performance regression
2025-04-10 05:23:44,351 - analyzers.perf_analyzer - INFO - Classifying commit 860fd146 for performance regression
2025-04-10 05:23:44,401 - analyzers.perf_analyzer - INFO - Classifying commit 70aac1f2 for performance regression
2025-04-10 05:23:44,452 - analyzers.perf_analyzer - INFO - Classifying commit bd018c01 for performance regression
2025-04-10 05:23:44,518 - analyzers.perf_analyzer - INFO - Classifying commit 3b3874e2 for performance regression
2025-04-10 05:23:44,568 - analyzers.perf_analyzer - INFO - Classifying commit 17894a56 for performance regression
2025-04-10 05:23:44,634 - analyzers.perf_analyzer - INFO - Classifying commit 3f48ea98 for performance regression
2025-04-10 05:23:44,765 - analyzers.perf_analyzer - INFO - Classifying commit 0362cb32 for performance regression
2025-04-10 05:23:44,818 - analyzers.perf_analyzer - INFO - Classifying commit dd27fc0d for performance regression
2025-04-10 05:23:44,883 - analyzers.perf_analyzer - INFO - Classifying commit 48f557e4 for performance regression
2025-04-10 05:23:44,932 - analyzers.perf_analyzer - INFO - Classifying commit c5b3b092 for performance regression
2025-04-10 05:23:44,986 - analyzers.perf_analyzer - INFO - Classifying commit d98e1e5c for performance regression
2025-04-10 05:23:45,054 - analyzers.perf_analyzer - INFO - Classifying commit 97d0bb70 for performance regression
2025-04-10 05:23:45,101 - analyzers.perf_analyzer - INFO - Classifying commit 4d506fd4 for performance regression
2025-04-10 05:23:45,152 - analyzers.perf_analyzer - INFO - Classifying commit 8e7895ff for performance regression
2025-04-10 05:23:45,235 - analyzers.perf_analyzer - INFO - Classifying commit 01f287ca for performance regression
2025-04-10 05:23:45,301 - analyzers.perf_analyzer - INFO - Classifying commit 487b005e for performance regression
2025-04-10 05:23:45,503 - analyzers.perf_analyzer - INFO - Classifying commit 5dbfd876 for performance regression
2025-04-10 05:23:45,586 - analyzers.perf_analyzer - INFO - Classifying commit 8805cc27 for performance regression
2025-04-10 05:23:45,652 - analyzers.perf_analyzer - INFO - Classifying commit b6760a14 for performance regression
2025-04-10 05:23:45,718 - analyzers.perf_analyzer - INFO - Classifying commit e4bf5c1e for performance regression
2025-04-10 05:23:45,787 - analyzers.perf_analyzer - INFO - Classifying commit 3f3d51f3 for performance regression
2025-04-10 05:23:45,858 - analyzers.perf_analyzer - INFO - Classifying commit 9142f7eb for performance regression
2025-04-10 05:23:45,918 - analyzers.perf_analyzer - INFO - Classifying commit f3d33e83 for performance regression
2025-04-10 05:23:45,997 - analyzers.perf_analyzer - INFO - Classifying commit d65b5fe5 for performance regression
2025-04-10 05:23:46,211 - analyzers.perf_analyzer - INFO - Classifying commit d776a4a4 for performance regression
2025-04-10 05:23:46,304 - analyzers.perf_analyzer - INFO - Classifying commit 876f013c for performance regression
2025-04-10 05:23:46,393 - analyzers.perf_analyzer - INFO - Classifying commit 157a0ef2 for performance regression
2025-04-10 05:23:46,457 - analyzers.perf_analyzer - INFO - Classifying commit 40c65378 for performance regression
2025-04-10 05:23:46,518 - analyzers.perf_analyzer - INFO - Classifying commit b4719f8d for performance regression
2025-04-10 05:23:46,584 - analyzers.perf_analyzer - INFO - Classifying commit eac4b61c for performance regression
2025-04-10 05:23:46,638 - analyzers.perf_analyzer - INFO - Classifying commit 200b783f for performance regression
2025-04-10 05:23:46,699 - analyzers.perf_analyzer - INFO - Classifying commit badec667 for performance regression
2025-04-10 05:23:46,883 - analyzers.perf_analyzer - INFO - Classifying commit 9d601051 for performance regression
2025-04-10 05:23:46,955 - analyzers.perf_analyzer - INFO - Classifying commit 0076e93a for performance regression
2025-04-10 05:23:47,013 - analyzers.perf_analyzer - INFO - Classifying commit 5e3816d3 for performance regression
2025-04-10 05:23:47,057 - analyzers.perf_analyzer - INFO - Classifying commit 4cffe9c3 for performance regression
2025-04-10 05:23:47,125 - analyzers.perf_analyzer - INFO - Classifying commit d1aaa914 for performance regression
2025-04-10 05:23:47,182 - analyzers.perf_analyzer - INFO - Classifying commit 7a309afe for performance regression
2025-04-10 05:23:47,236 - analyzers.perf_analyzer - INFO - Classifying commit 313a00c9 for performance regression
2025-04-10 05:23:47,292 - analyzers.perf_analyzer - INFO - Classifying commit ff51db6a for performance regression
2025-04-10 05:23:47,350 - analyzers.perf_analyzer - INFO - Classifying commit 1ed9c082 for performance regression
2025-04-10 05:23:47,402 - analyzers.perf_analyzer - INFO - Classifying commit 312c8246 for performance regression
2025-04-10 05:23:47,452 - analyzers.perf_analyzer - INFO - Classifying commit 015b58dd for performance regression
2025-04-10 05:23:47,639 - analyzers.perf_analyzer - INFO - Classifying commit 7affcea2 for performance regression
2025-04-10 05:23:47,699 - analyzers.perf_analyzer - INFO - Classifying commit 578e8369 for performance regression
2025-04-10 05:23:47,775 - analyzers.perf_analyzer - INFO - Classifying commit 95a69485 for performance regression
2025-04-10 05:23:47,844 - analyzers.perf_analyzer - INFO - Classifying commit c2723578 for performance regression
2025-04-10 05:23:47,918 - analyzers.perf_analyzer - INFO - Classifying commit 323b8b99 for performance regression
2025-04-10 05:23:47,984 - analyzers.perf_analyzer - INFO - Classifying commit 3be60c0a for performance regression
2025-04-10 05:23:48,035 - analyzers.perf_analyzer - INFO - Classifying commit 4ce1a43f for performance regression
2025-04-10 05:23:48,101 - analyzers.perf_analyzer - INFO - Classifying commit 08e67ec7 for performance regression
2025-04-10 05:23:48,161 - analyzers.perf_analyzer - INFO - Classifying commit 5b2a0713 for performance regression
2025-04-10 05:23:48,207 - analyzers.perf_analyzer - INFO - Classifying commit 881038df for performance regression
2025-04-10 05:23:48,269 - analyzers.perf_analyzer - INFO - Classifying commit aeef1385 for performance regression
2025-04-10 05:23:48,352 - analyzers.perf_analyzer - INFO - Classifying commit 865b5754 for performance regression
2025-04-10 05:23:48,499 - analyzers.perf_analyzer - INFO - Classifying commit ab58e586 for performance regression
2025-04-10 05:23:48,568 - analyzers.perf_analyzer - INFO - Classifying commit 8ef7ddb4 for performance regression
2025-04-10 05:23:48,643 - analyzers.perf_analyzer - INFO - Classifying commit b14cd71e for performance regression
2025-04-10 05:23:48,700 - analyzers.perf_analyzer - INFO - Classifying commit b2674c2d for performance regression
2025-04-10 05:23:48,751 - analyzers.perf_analyzer - INFO - Classifying commit 79f9d1c6 for performance regression
2025-04-10 05:23:48,818 - analyzers.perf_analyzer - INFO - Classifying commit fba3bfe9 for performance regression
2025-04-10 05:23:48,885 - analyzers.perf_analyzer - INFO - Classifying commit ab1ec9a1 for performance regression
2025-04-10 05:23:48,949 - analyzers.perf_analyzer - INFO - Classifying commit 679e1830 for performance regression
2025-04-10 05:23:49,017 - analyzers.perf_analyzer - INFO - Classifying commit 129082fe for performance regression
2025-04-10 05:23:49,109 - analyzers.perf_analyzer - INFO - Classifying commit c0c18a98 for performance regression
2025-04-10 05:23:49,186 - analyzers.perf_analyzer - INFO - Classifying commit b20800d7 for performance regression
2025-04-10 05:23:49,261 - analyzers.perf_analyzer - INFO - Classifying commit 4b9cac2d for performance regression
2025-04-10 05:23:49,344 - analyzers.perf_analyzer - INFO - Classifying commit deb57b93 for performance regression
2025-04-10 05:23:49,430 - analyzers.perf_analyzer - INFO - Classifying commit c70cb5d2 for performance regression
2025-04-10 05:23:49,681 - analyzers.perf_analyzer - INFO - Classifying commit 3a50aeb2 for performance regression
2025-04-10 05:23:49,791 - analyzers.perf_analyzer - INFO - Classifying commit 04930aa4 for performance regression
2025-04-10 05:23:49,876 - analyzers.perf_analyzer - INFO - Classifying commit 73fd0180 for performance regression
2025-04-10 05:23:49,952 - analyzers.perf_analyzer - INFO - Classifying commit 2a1ae31e for performance regression
2025-04-10 05:23:50,029 - analyzers.perf_analyzer - INFO - Classifying commit 2e4a0701 for performance regression
2025-04-10 05:23:50,108 - analyzers.perf_analyzer - INFO - Classifying commit 0ba67381 for performance regression
2025-04-10 05:23:50,184 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:23:50,185 - main - INFO - CommitHunter completed successfully
2025-04-10 05:24:53,994 - root - INFO - Logging system initialized
2025-04-10 05:24:53,994 - main - INFO - Starting CommitHunter
2025-04-10 05:24:53,995 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 05:24:53,995 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:24:53,995 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:24:53,996 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 05:24:55,153 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 05:24:55,153 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 05:24:55,153 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 05:24:55,153 - main - WARNING - BinarySearchAnalyzer requires a test name. Use --test-name to specify a test.
2025-04-10 05:24:55,153 - main - INFO - Binary search will be skipped.
2025-04-10 05:24:55,153 - main - INFO - Testing test result extraction
2025-04-10 05:24:55,165 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 05:24:55,165 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:24:55,166 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:24:55,167 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:24:55,168 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:24:55,169 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:24:55,170 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 05:24:55,170 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 05:24:55,171 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 05:24:55,171 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:24:55,172 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 05:24:55,172 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T05:24:55.172914"
}
2025-04-10 05:24:55,174 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 05:24:55,174 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 05:24:55,174 - __main__ - INFO - Processing OpenJ9 issue between 96ef5c5b and eac681f0
2025-04-10 05:24:55,175 - collectors.test_collector - INFO - Processing OpenJ9 issue #12345 between 96ef5c5b and eac681f0
2025-04-10 05:24:55,175 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 05:24:55,176 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 05:24:55,177 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 05:24:55,178 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 05:24:55,178 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 05:24:55,179 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 05:24:55,180 - collectors.test_collector - INFO - Collected 1 test result sets in 0.00 seconds
2025-04-10 05:24:55,180 - collectors.test_collector - INFO - Analyzing OpenJ9 test failure: unknown
2025-04-10 05:24:55,183 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:24:55,363 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:25:08,955 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:25:09,056 - collectors.test_collector - INFO - Classifying commit 96ef5c5b for test failure
2025-04-10 05:25:09,156 - collectors.test_collector - INFO - Classifying commit 7c8005e1 for test failure
2025-04-10 05:25:09,378 - collectors.test_collector - INFO - Classifying commit 8d929fec for test failure
2025-04-10 05:25:09,482 - collectors.test_collector - INFO - Classifying commit 2845176f for test failure
2025-04-10 05:25:09,588 - collectors.test_collector - INFO - Classifying commit a0b34799 for test failure
2025-04-10 05:25:09,693 - collectors.test_collector - INFO - Classifying commit 27dac39d for test failure
2025-04-10 05:25:09,814 - collectors.test_collector - INFO - Classifying commit def4a30a for test failure
2025-04-10 05:25:09,944 - collectors.test_collector - INFO - Classifying commit c2af1fed for test failure
2025-04-10 05:25:10,056 - collectors.test_collector - INFO - Classifying commit 18c16409 for test failure
2025-04-10 05:25:10,169 - collectors.test_collector - INFO - Classifying commit 00d08779 for test failure
2025-04-10 05:25:10,273 - collectors.test_collector - INFO - Classifying commit 51128c1d for test failure
2025-04-10 05:25:10,379 - collectors.test_collector - INFO - Classifying commit 4fc9a456 for test failure
2025-04-10 05:25:10,488 - collectors.test_collector - INFO - Classifying commit a6363210 for test failure
2025-04-10 05:25:10,595 - collectors.test_collector - INFO - Classifying commit 5b6168a9 for test failure
2025-04-10 05:25:10,699 - collectors.test_collector - INFO - Classifying commit 0b32a259 for test failure
2025-04-10 05:25:10,833 - collectors.test_collector - INFO - Classifying commit 9a15c735 for test failure
2025-04-10 05:25:10,950 - collectors.test_collector - INFO - Classifying commit 07797d6f for test failure
2025-04-10 05:25:11,066 - collectors.test_collector - INFO - Classifying commit 90ac2bf1 for test failure
2025-04-10 05:25:11,183 - collectors.test_collector - INFO - Classifying commit abdb2aa8 for test failure
2025-04-10 05:25:11,302 - collectors.test_collector - INFO - Classifying commit a5c3757b for test failure
2025-04-10 05:25:11,412 - collectors.test_collector - INFO - Classifying commit 9574f689 for test failure
2025-04-10 05:25:11,535 - collectors.test_collector - INFO - Classifying commit 2cfd7244 for test failure
2025-04-10 05:25:11,649 - collectors.test_collector - INFO - Classifying commit 6c5f2b35 for test failure
2025-04-10 05:25:11,766 - collectors.test_collector - INFO - Classifying commit ad9620c3 for test failure
2025-04-10 05:25:12,040 - collectors.test_collector - INFO - Classifying commit c792e991 for test failure
2025-04-10 05:25:12,166 - collectors.test_collector - INFO - Classifying commit ae0b2371 for test failure
2025-04-10 05:25:12,278 - collectors.test_collector - INFO - Classifying commit 71f9ccfc for test failure
2025-04-10 05:25:12,389 - collectors.test_collector - INFO - Classifying commit a3a09742 for test failure
2025-04-10 05:25:12,512 - collectors.test_collector - INFO - Classifying commit 860fd146 for test failure
2025-04-10 05:25:12,652 - collectors.test_collector - INFO - Classifying commit 70aac1f2 for test failure
2025-04-10 05:25:12,802 - collectors.test_collector - INFO - Classifying commit bd018c01 for test failure
2025-04-10 05:25:13,004 - collectors.test_collector - INFO - Classifying commit 3b3874e2 for test failure
2025-04-10 05:25:13,131 - collectors.test_collector - INFO - Classifying commit 17894a56 for test failure
2025-04-10 05:25:13,459 - collectors.test_collector - INFO - Classifying commit 3f48ea98 for test failure
2025-04-10 05:25:13,699 - collectors.test_collector - INFO - Classifying commit 0362cb32 for test failure
2025-04-10 05:25:13,844 - collectors.test_collector - INFO - Classifying commit dd27fc0d for test failure
2025-04-10 05:25:13,983 - collectors.test_collector - INFO - Classifying commit 48f557e4 for test failure
2025-04-10 05:25:14,132 - collectors.test_collector - INFO - Classifying commit c5b3b092 for test failure
2025-04-10 05:25:14,274 - collectors.test_collector - INFO - Classifying commit d98e1e5c for test failure
2025-04-10 05:25:14,518 - collectors.test_collector - INFO - Classifying commit 97d0bb70 for test failure
2025-04-10 05:25:14,675 - collectors.test_collector - INFO - Classifying commit 4d506fd4 for test failure
2025-04-10 05:25:14,831 - collectors.test_collector - INFO - Classifying commit 8e7895ff for test failure
2025-04-10 05:25:14,965 - collectors.test_collector - INFO - Classifying commit 01f287ca for test failure
2025-04-10 05:25:15,115 - collectors.test_collector - INFO - Classifying commit 487b005e for test failure
2025-04-10 05:25:15,368 - collectors.test_collector - INFO - Classifying commit 5dbfd876 for test failure
2025-04-10 05:25:15,480 - collectors.test_collector - INFO - Classifying commit 8805cc27 for test failure
2025-04-10 05:25:15,599 - collectors.test_collector - INFO - Classifying commit b6760a14 for test failure
2025-04-10 05:25:15,699 - collectors.test_collector - INFO - Classifying commit e4bf5c1e for test failure
2025-04-10 05:25:15,887 - collectors.test_collector - INFO - Classifying commit 3f3d51f3 for test failure
2025-04-10 05:25:16,134 - collectors.test_collector - INFO - Classifying commit 9142f7eb for test failure
2025-04-10 05:25:16,277 - collectors.test_collector - INFO - Classifying commit f3d33e83 for test failure
2025-04-10 05:25:16,387 - collectors.test_collector - INFO - Classifying commit d65b5fe5 for test failure
2025-04-10 05:25:16,606 - collectors.test_collector - INFO - Classifying commit d776a4a4 for test failure
2025-04-10 05:25:16,789 - collectors.test_collector - INFO - Classifying commit 876f013c for test failure
2025-04-10 05:25:16,918 - collectors.test_collector - INFO - Classifying commit 157a0ef2 for test failure
2025-04-10 05:25:17,053 - collectors.test_collector - INFO - Classifying commit 40c65378 for test failure
2025-04-10 05:25:17,187 - collectors.test_collector - INFO - Classifying commit b4719f8d for test failure
2025-04-10 05:25:17,310 - collectors.test_collector - INFO - Classifying commit eac4b61c for test failure
2025-04-10 05:25:17,446 - collectors.test_collector - INFO - Classifying commit 200b783f for test failure
2025-04-10 05:25:17,708 - collectors.test_collector - INFO - Classifying commit badec667 for test failure
2025-04-10 05:25:17,864 - collectors.test_collector - INFO - Classifying commit 9d601051 for test failure
2025-04-10 05:25:17,999 - collectors.test_collector - INFO - Classifying commit 0076e93a for test failure
2025-04-10 05:25:18,135 - collectors.test_collector - INFO - Classifying commit 5e3816d3 for test failure
2025-04-10 05:25:18,298 - collectors.test_collector - INFO - Classifying commit 4cffe9c3 for test failure
2025-04-10 05:25:18,448 - collectors.test_collector - INFO - Classifying commit d1aaa914 for test failure
2025-04-10 05:25:18,585 - collectors.test_collector - INFO - Classifying commit 7a309afe for test failure
2025-04-10 05:25:18,716 - collectors.test_collector - INFO - Classifying commit 313a00c9 for test failure
2025-04-10 05:25:19,049 - collectors.test_collector - INFO - Classifying commit ff51db6a for test failure
2025-04-10 05:25:19,199 - collectors.test_collector - INFO - Classifying commit 1ed9c082 for test failure
2025-04-10 05:25:19,335 - collectors.test_collector - INFO - Classifying commit 312c8246 for test failure
2025-04-10 05:25:19,449 - collectors.test_collector - INFO - Classifying commit 015b58dd for test failure
2025-04-10 05:25:19,572 - collectors.test_collector - INFO - Classifying commit 7affcea2 for test failure
2025-04-10 05:25:19,700 - collectors.test_collector - INFO - Classifying commit 578e8369 for test failure
2025-04-10 05:25:19,970 - collectors.test_collector - INFO - Classifying commit 95a69485 for test failure
2025-04-10 05:25:20,115 - collectors.test_collector - INFO - Classifying commit c2723578 for test failure
2025-04-10 05:25:20,244 - collectors.test_collector - INFO - Classifying commit 323b8b99 for test failure
2025-04-10 05:25:20,361 - collectors.test_collector - INFO - Classifying commit 3be60c0a for test failure
2025-04-10 05:25:20,479 - collectors.test_collector - INFO - Classifying commit 4ce1a43f for test failure
2025-04-10 05:25:20,600 - collectors.test_collector - INFO - Classifying commit 08e67ec7 for test failure
2025-04-10 05:25:20,712 - collectors.test_collector - INFO - Classifying commit 5b2a0713 for test failure
2025-04-10 05:25:20,829 - collectors.test_collector - INFO - Classifying commit 881038df for test failure
2025-04-10 05:25:21,063 - collectors.test_collector - INFO - Classifying commit aeef1385 for test failure
2025-04-10 05:25:21,200 - collectors.test_collector - INFO - Classifying commit 865b5754 for test failure
2025-04-10 05:25:21,365 - collectors.test_collector - INFO - Classifying commit ab58e586 for test failure
2025-04-10 05:25:21,505 - collectors.test_collector - INFO - Classifying commit 8ef7ddb4 for test failure
2025-04-10 05:25:21,616 - collectors.test_collector - INFO - Classifying commit b14cd71e for test failure
2025-04-10 05:25:21,757 - collectors.test_collector - INFO - Classifying commit b2674c2d for test failure
2025-04-10 05:25:22,028 - collectors.test_collector - INFO - Classifying commit 79f9d1c6 for test failure
2025-04-10 05:25:22,139 - collectors.test_collector - INFO - Classifying commit fba3bfe9 for test failure
2025-04-10 05:25:22,242 - collectors.test_collector - INFO - Classifying commit ab1ec9a1 for test failure
2025-04-10 05:25:22,353 - collectors.test_collector - INFO - Classifying commit 679e1830 for test failure
2025-04-10 05:25:22,489 - collectors.test_collector - INFO - Classifying commit 129082fe for test failure
2025-04-10 05:25:22,632 - collectors.test_collector - INFO - Classifying commit c0c18a98 for test failure
2025-04-10 05:25:22,766 - collectors.test_collector - INFO - Classifying commit b20800d7 for test failure
2025-04-10 05:25:22,900 - collectors.test_collector - INFO - Classifying commit 4b9cac2d for test failure
2025-04-10 05:25:23,043 - collectors.test_collector - INFO - Classifying commit deb57b93 for test failure
2025-04-10 05:25:23,237 - collectors.test_collector - INFO - Classifying commit c70cb5d2 for test failure
2025-04-10 05:25:23,400 - collectors.test_collector - INFO - Classifying commit 3a50aeb2 for test failure
2025-04-10 05:25:23,555 - collectors.test_collector - INFO - Classifying commit 04930aa4 for test failure
2025-04-10 05:25:23,699 - collectors.test_collector - INFO - Classifying commit 73fd0180 for test failure
2025-04-10 05:25:23,832 - collectors.test_collector - INFO - Classifying commit 2a1ae31e for test failure
2025-04-10 05:25:23,966 - collectors.test_collector - INFO - Classifying commit 2e4a0701 for test failure
2025-04-10 05:25:24,099 - collectors.test_collector - INFO - Classifying commit 0ba67381 for test failure
2025-04-10 05:25:24,100 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 05:25:24,199 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 05:25:39,928 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 05:25:39,928 - __main__ - INFO - Retrieved 103 commits between 96ef5c5b and eac681f0
2025-04-10 05:25:39,929 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,929 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,932 - __main__ - INFO - Commit Info 
{'hash': '96ef5c5b4026552ec5d6f0413d034cf09ba7103f', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 7, 22, 42, 10), 'committer': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 8, 9, 23, 38, 57), 'message': 'Changes for new/delete used by IProfiler\n\nThis commit implements the following changes:\n- `operator new` was defined in every class derived from TR_IPBytecodeHashTableEntry\n   After this commit there will be only one definition of `operator new`\n   provided by the base class TR_IPBytecodeHashTableEntry and all derived\n   classes will use the same definition. The same applies for\n   `operator delete`\n- `operator delete` used to do nothing. After this commit `operator delete`\n   will use the IProfiler persistent memory deallocator to free memory.\n   Note that freed memory goes into a pool, to be reused later.\n- For 64-bit environments, `operator new` used to ensure aligned\n   allocations by adding four bytes the size needed and then rounding up\n   on a 8 byte boundary. This is not needed, because the persistent allocator\n   already makes sure that allocations are 8 byte aligned, so the operator\n   was just wasting memory.\n- TR_IProfiler::findOrCreateEntry() contains a race condition which may\n   lead to a small (and bounded) memory leak. This commit frees the entry\n   that is allocated but later found that is not needed.\n\nSigned-off-by: Marius Pirvu <mpirvu@ca.ibm.com>\n', 'parents': ['7c8005e1ff6614029ce973728ac057cd2fb26abf'], 'files_changed': ['runtime/compiler/runtime/IProfiler.cpp', 'runtime/compiler/runtime/IProfiler.hpp'], 'lines_added': 15, 'lines_deleted': 54, 'lines_changed': 69, 'file_stats': {'runtime/compiler/runtime/IProfiler.cpp': {'lines_added': 9, 'lines_deleted': 38, 'lines_changed': 47}, 'runtime/compiler/runtime/IProfiler.hpp': {'lines_added': 6, 'lines_deleted': 16, 'lines_changed': 22}}, 'subsystems': {'runtime'}, 'entropy': 0.9031161721568719, 'author_experience': 1271, 'recent_experience': 28}
2025-04-10 05:25:39,932 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,932 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,932 - __main__ - INFO - Commit Info 
{'hash': '7c8005e1ff6614029ce973728ac057cd2fb26abf', 'author': 'Rahil Shah <rahil@ca.ibm.com>', 'author_name': 'Rahil Shah', 'author_email': 'rahil@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 7, 22, 14, 30), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 7, 22, 14, 30), 'message': 'Merge pull request #19937 from dchopra001/ffi_zos_structs\n\nAdd support for structs in FFI Upcall on z/OS', 'parents': ['8d929fecab76405ac018de0d4596f229bb012220', '2845176fee827f42115afd4df0f5b9286fa87d4d'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java', 'runtime/oti/FFIUpcallThunkGenHelpers.hpp', 'runtime/vm/mz64/UpcallThunkGen.cpp', 'runtime/vm/xz64/UpcallThunkGen.cpp'], 'lines_added': 635, 'lines_deleted': 322, 'lines_changed': 957, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java': {'lines_added': 0, 'lines_deleted': 4, 'lines_changed': 4}, 'runtime/oti/FFIUpcallThunkGenHelpers.hpp': {'lines_added': 184, 'lines_deleted': 48, 'lines_changed': 232}, 'runtime/vm/mz64/UpcallThunkGen.cpp': {'lines_added': 451, 'lines_deleted': 181, 'lines_changed': 632}, 'runtime/vm/xz64/UpcallThunkGen.cpp': {'lines_added': 0, 'lines_deleted': 89, 'lines_changed': 89}}, 'subsystems': {'jcl', 'runtime'}, 'entropy': 1.2426245407414747, 'author_experience': 144, 'recent_experience': 11}
2025-04-10 05:25:39,932 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,932 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,935 - __main__ - INFO - Commit Info 
{'hash': '8d929fecab76405ac018de0d4596f229bb012220', 'author': "Irwin D'Souza <dsouzai.gh@gmail.com>", 'author_name': "Irwin D'Souza", 'author_email': 'dsouzai.gh@gmail.com', 'authored_date': datetime.datetime(2024, 8, 7, 21, 18, 6), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 7, 21, 18, 6), 'message': 'Merge pull request #19967 from mpirvu/iprofiler_race\n\nMake IProfiler race conditon less likely', 'parents': ['27dac39d2c5b8ea2df7c7e005a5ac0d9eb1f5b9c', 'a0b34799e5b3b9a6a5eccfd1ca394b9a9d80240a'], 'files_changed': ['runtime/compiler/runtime/IProfiler.cpp'], 'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11, 'file_stats': {'runtime/compiler/runtime/IProfiler.cpp': {'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 730, 'recent_experience': 17}
2025-04-10 05:25:39,935 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,935 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,936 - __main__ - INFO - Commit Info 
{'hash': '2845176fee827f42115afd4df0f5b9286fa87d4d', 'author': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'author_name': 'Dhruv Chopra', 'author_email': 'Dhruv.C.Chopra@ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 58, 25), 'committer': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'committed_date': datetime.datetime(2024, 8, 5, 9, 10, 45), 'message': 'Add support for structs in FFI Upcall on z/OS\n\nThis commit completes FFI Upcall functionality support\non z/OS by adding support to handle structs as parameters\nand return types.\n\nSigned-off-by: Dhruv Chopra <Dhruv.C.Chopra@ibm.com>\n', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java', 'runtime/oti/FFIUpcallThunkGenHelpers.hpp', 'runtime/vm/mz64/UpcallThunkGen.cpp', 'runtime/vm/xz64/UpcallThunkGen.cpp'], 'lines_added': 635, 'lines_deleted': 322, 'lines_changed': 957, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java': {'lines_added': 0, 'lines_deleted': 4, 'lines_changed': 4}, 'runtime/oti/FFIUpcallThunkGenHelpers.hpp': {'lines_added': 184, 'lines_deleted': 48, 'lines_changed': 232}, 'runtime/vm/mz64/UpcallThunkGen.cpp': {'lines_added': 451, 'lines_deleted': 181, 'lines_changed': 632}, 'runtime/vm/xz64/UpcallThunkGen.cpp': {'lines_added': 0, 'lines_deleted': 89, 'lines_changed': 89}}, 'subsystems': {'jcl', 'runtime'}, 'entropy': 1.2426245407414747, 'author_experience': 157, 'recent_experience': 1}
2025-04-10 05:25:39,936 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,937 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,937 - __main__ - INFO - Commit Info 
{'hash': 'a0b34799e5b3b9a6a5eccfd1ca394b9a9d80240a', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 4, 3, 2, 7), 'committer': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 8, 5, 5, 24, 35), 'message': 'Make IProfiler race conditon less likely\n\nInterpreter profiling is uses lockless mechanisms that\nallow for some races to occur. The outcome of these races\nis some small memory leak.\nWhen adding new profiling info to the IProfiler hashtable, we\nfirst determine if an entry with the same pc exists (pc is the key)\nand if not, we allocate memory for a new entry and then add the\nentry to the head of the linked list of the corresponding bucket\nof the IP hashtable. It turns out that allocating memory for a\nnew entry is relatively expensive, and in this window of time\nanother thread could perform the same check, deciding to add\na new entry with the same pc.\nThis commit performs another check just before adding to the\nlinked list of the bucket. This reduces the likelihood of\ntwo threads adding entries with the same pc.\n\nSigned-off-by: Marius Pirvu <mpirvu@ca.ibm.com>\n', 'parents': ['27dac39d2c5b8ea2df7c7e005a5ac0d9eb1f5b9c'], 'files_changed': ['runtime/compiler/runtime/IProfiler.cpp'], 'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11, 'file_stats': {'runtime/compiler/runtime/IProfiler.cpp': {'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 1271, 'recent_experience': 32}
2025-04-10 05:25:39,939 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,939 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,939 - __main__ - INFO - Commit Info 
{'hash': '27dac39d2c5b8ea2df7c7e005a5ac0d9eb1f5b9c', 'author': 'Graham Chapman <graham_chapman@ca.ibm.com>', 'author_name': 'Graham Chapman', 'author_email': 'graham_chapman@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 19, 23, 14), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 19, 23, 14), 'message': 'Merge pull request #19949 from IBMJimmyk/FSDfix\n\nAdds FSD check to jitClassRedefineEvent', 'parents': ['def4a30a460112e5d78ce398a0eab65cbf334752', 'ad9620c3405492824867184bd8c7f95c457e06f4'], 'files_changed': ['runtime/util/hshelp.c'], 'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12, 'file_stats': {'runtime/util/hshelp.c': {'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 1029, 'recent_experience': 11}
2025-04-10 05:25:39,939 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,939 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,939 - __main__ - INFO - Commit Info 
{'hash': 'def4a30a460112e5d78ce398a0eab65cbf334752', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 5, 28, 29), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 5, 28, 29), 'message': 'Merge pull request #19957 from thallium/jfr-test-fix\n\nFix cmdLineTester_jfr', 'parents': ['c2af1fedb6e87bf43fc01355c0358616fe7d8a65', '4fc9a45639f11e9c4211ffd86902b560d0ea02c6'], 'files_changed': ['test/functional/cmdLineTests/jfr/build.xml'], 'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5, 'file_stats': {'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 60}
2025-04-10 05:25:39,939 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,939 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,939 - __main__ - INFO - Commit Info 
{'hash': 'c2af1fedb6e87bf43fc01355c0358616fe7d8a65', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 3, 26, 55), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 3, 26, 55), 'message': 'Merge pull request #19958 from eclipse-openj9/revert-17969-offheap-unsafe\n\nRevert "Adjust arguments to Unsafe array operations while offheap is enabled"', 'parents': ['18c16409f772ee7902fa4dc34ff285fc82065c33', '00d08779e99f056ce8502b4d693f498f4e99395a'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 158, 'lines_deleted': 746, 'lines_changed': 904, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 156, 'lines_deleted': 735, 'lines_changed': 891}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 2, 'lines_deleted': 11, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.10860192578701666, 'author_experience': 3908, 'recent_experience': 57}
2025-04-10 05:25:39,939 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,939 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,939 - __main__ - INFO - Commit Info 
{'hash': '18c16409f772ee7902fa4dc34ff285fc82065c33', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 3, 11, 38), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 3, 11, 38), 'message': 'Merge pull request #19938 from theresa-m/invokeinterfacearray\n\nVerification check for invokeinterface receiver', 'parents': ['51128c1de454ed435b74529cf9ae30a5ab1afd98', '9a15c7357f01ea6a78bfd38d5a1d952107d896ac'], 'files_changed': ['runtime/bcverify/rtverify.c'], 'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 21}
2025-04-10 05:25:39,945 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,945 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,945 - __main__ - INFO - Commit Info 
{'hash': '00d08779e99f056ce8502b4d693f498f4e99395a', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 2, 6, 32), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 2, 6, 32), 'message': 'Revert "Adjust arguments to Unsafe array operations while offheap is enabled"\n', 'parents': ['51128c1de454ed435b74529cf9ae30a5ab1afd98'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 158, 'lines_deleted': 746, 'lines_changed': 904, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 156, 'lines_deleted': 735, 'lines_changed': 891}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 2, 'lines_deleted': 11, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.10860192578701666, 'author_experience': 3908, 'recent_experience': 57}
2025-04-10 05:25:39,945 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,945 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,946 - __main__ - INFO - Commit Info 
{'hash': '51128c1de454ed435b74529cf9ae30a5ab1afd98', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 0, 26, 16), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 0, 26, 16), 'message': 'Merge pull request #19956 from keithc-ca/maint\n\nUpdate java.specification.maintenance.version', 'parents': ['5b6168a97a22ae306fab172797749271e36dadfd', 'a6363210964017d960adc0c68ce24487cf3376d2'], 'files_changed': ['runtime/vm/vmprops.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/vm/vmprops.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 3908, 'recent_experience': 57}
2025-04-10 05:25:39,946 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,947 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,947 - __main__ - INFO - Commit Info 
{'hash': '4fc9a45639f11e9c4211ffd86902b560d0ea02c6', 'author': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'author_name': 'Gengchen Tuo', 'author_email': 'gengchen.tuo@ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 23, 14, 27), 'committer': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'committed_date': datetime.datetime(2024, 8, 2, 0, 22, 31), 'message': 'Fix cmdLineTester_jfr\n\nUse include tag instead of filename tag.\nRemove *.mk selector since it does not match any file.\n\nFix: https://github.com/eclipse-openj9/openj9/issues/19950\n\nSigned-off-by: Gengchen Tuo <gengchen.tuo@ibm.com>\n', 'parents': ['5b6168a97a22ae306fab172797749271e36dadfd'], 'files_changed': ['test/functional/cmdLineTests/jfr/build.xml'], 'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5, 'file_stats': {'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 86, 'recent_experience': 0}
2025-04-10 05:25:39,947 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,948 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,949 - __main__ - INFO - Commit Info 
{'hash': 'a6363210964017d960adc0c68ce24487cf3376d2', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 18, 58, 29), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 8, 1, 20, 5, 1), 'message': 'Update java.specification.maintenance.version\n\nTo match the reference implementations.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['07797d6fa2534a2303a73b4781783160a483dee7'], 'files_changed': ['runtime/vm/vmprops.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/vm/vmprops.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 61}
2025-04-10 05:25:39,950 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,950 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,950 - __main__ - INFO - Commit Info 
{'hash': '5b6168a97a22ae306fab172797749271e36dadfd', 'author': 'Lan Xia <Lan_Xia@ca.ibm.com>', 'author_name': 'Lan Xia', 'author_email': 'Lan_Xia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 19, 29, 49), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 1, 19, 29, 49), 'message': 'Merge pull request #19945 from keithc-ca/yield\n\nUpdate number of frames for test_YieldedVirtualThreadGetStackTrace', 'parents': ['0b32a2599670dd77b6bc5ca9d531c9a48d3d786a', '6c5f2b357ff854850a8993a33668cc6ede24a089'], 'files_changed': ['test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java'], 'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52, 'file_stats': {'test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java': {'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 574, 'recent_experience': 2}
2025-04-10 05:25:39,951 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,952 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,952 - __main__ - INFO - Commit Info 
{'hash': '0b32a2599670dd77b6bc5ca9d531c9a48d3d786a', 'author': 'Lan Xia <Lan_Xia@ca.ibm.com>', 'author_name': 'Lan Xia', 'author_email': 'Lan_Xia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 19, 28, 3), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 1, 19, 28, 3), 'message': 'Merge pull request #19943 from keithc-ca/runner\n\nAdd support for aarch64 to j9vm.runner.Runner', 'parents': ['07797d6fa2534a2303a73b4781783160a483dee7', '2cfd72440387d4e231c7c44b3c0c6113eb637c24'], 'files_changed': ['test/functional/VM_Test/src/j9vm/runner/Runner.java', 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java'], 'lines_added': 155, 'lines_deleted': 133, 'lines_changed': 288, 'file_stats': {'test/functional/VM_Test/src/j9vm/runner/Runner.java': {'lines_added': 126, 'lines_deleted': 104, 'lines_changed': 230}, 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java': {'lines_added': 29, 'lines_deleted': 29, 'lines_changed': 58}}, 'subsystems': {'test'}, 'entropy': 0.7246971909054878, 'author_experience': 574, 'recent_experience': 2}
2025-04-10 05:25:39,952 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,952 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,952 - __main__ - INFO - Commit Info 
{'hash': '9a15c7357f01ea6a78bfd38d5a1d952107d896ac', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 35, 55), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 8, 1, 19, 15, 17), 'message': 'Verification check for invokeinterface receiver\n\nArrays should be rejected as a receiver for invokeinterface\nunless it is being assigned to Serializeable or Cloneable.\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['runtime/bcverify/rtverify.c'], 'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 366, 'recent_experience': 34}
2025-04-10 05:25:39,955 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,955 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,955 - __main__ - INFO - Commit Info 
{'hash': '07797d6fa2534a2303a73b4781783160a483dee7', 'author': 'Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'author_name': 'Dmitri Pivkine', 'author_email': 'Dmitri_Pivkine@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 23, 49, 48), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 23, 49, 48), 'message': 'Merge pull request #19936 from amicic/maxTLH_noBatchClear\n\nIncrease max TLH for non-batch clear platforms', 'parents': ['90ac2bf1870aef94692fb25618b524c4bfdbbc6c', '9574f6897aaf4b0b69f673c851f1be65576f8f5c'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/gc_base/GCExtensions.hpp', 'runtime/gc_modron_startup/mmhelpers.cpp', 'runtime/gc_modron_startup/mmparseXgc.cpp'], 'lines_added': 24, 'lines_deleted': 1, 'lines_changed': 25, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/gc_base/GCExtensions.hpp': {'lines_added': 9, 'lines_deleted': 0, 'lines_changed': 9}, 'runtime/gc_modron_startup/mmhelpers.cpp': {'lines_added': 10, 'lines_deleted': 1, 'lines_changed': 11}, 'runtime/gc_modron_startup/mmparseXgc.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 1.6605332770550814, 'author_experience': 337, 'recent_experience': 4}
2025-04-10 05:25:39,956 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,956 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,957 - __main__ - INFO - Commit Info 
{'hash': '90ac2bf1870aef94692fb25618b524c4bfdbbc6c', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 21, 10, 3), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 21, 10, 3), 'message': 'Merge pull request #19944 from Sreekala-Gopakumar/46RelNote\n\nUpdate 0.46.0 release note', 'parents': ['abdb2aa87b34c0e2153ae6a6f53c67e5f34819b2', 'a5c3757b9cc0e96acd1eee0ee30f55da62f77c51'], 'files_changed': ['doc/release-notes/0.46/0.46.md'], 'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148, 'file_stats': {'doc/release-notes/0.46/0.46.md': {'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148}}, 'subsystems': {'doc'}, 'entropy': 0.0, 'author_experience': 3908, 'recent_experience': 60}
2025-04-10 05:25:39,957 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,958 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,958 - __main__ - INFO - Commit Info 
{'hash': 'abdb2aa87b34c0e2153ae6a6f53c67e5f34819b2', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 19, 9, 49), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 19, 9, 49), 'message': 'Merge pull request #19935 from keithc-ca/emv\n\nCorrect spelling of METADATA_BLOB_FILE_ENVVAR', 'parents': ['c792e991bf132e8dceadf99904dff2bfa879982e', '70aac1f21716023e185a8663dc740659c2a94623'], 'files_changed': ['runtime/vm/JFRWriter.hpp'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'runtime/vm/JFRWriter.hpp': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 22}
2025-04-10 05:25:39,958 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,958 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,958 - __main__ - INFO - Commit Info 
{'hash': 'a5c3757b9cc0e96acd1eee0ee30f55da62f77c51', 'author': 'Sreekala Gopakumar <Sreekala.Gopakumar@ibm.com>', 'author_name': 'Sreekala Gopakumar', 'author_email': 'Sreekala.Gopakumar@ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 32, 24), 'committer': 'Sreekala Gopakumar <Sreekala.Gopakumar@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 11, 44, 37), 'message': 'Update 0.46.0 release note\n\nhttps://github.com/eclipse-openj9/openj9-docs/issues/1330\n\nUpdated the draft release note that includes the known issues related to -XX:+ShareOrphans\n\n[skip ci]\nSigned-off-by: Sreekala Gopakumar sreekala.gopakumar@ibm.com\n', 'parents': ['6fae8827bc5a2a2a4b1e6fb73517dd0881bca2d0'], 'files_changed': ['doc/release-notes/0.46/0.46.md'], 'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148, 'file_stats': {'doc/release-notes/0.46/0.46.md': {'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148}}, 'subsystems': {'doc'}, 'entropy': 0.0, 'author_experience': 43, 'recent_experience': 2}
2025-04-10 05:25:39,958 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,958 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,958 - __main__ - INFO - Commit Info 
{'hash': '9574f6897aaf4b0b69f673c851f1be65576f8f5c', 'author': 'Aleksandar Micic <Aleksandar_Micic@ca.ibm.com>', 'author_name': 'Aleksandar Micic', 'author_email': 'Aleksandar_Micic@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 1, 32, 55), 'committer': 'Aleksandar Micic <Aleksandar_Micic@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 5, 24, 39), 'message': 'Increase max TLH for non-batch clear platforms\n\nFor non-batch TLH clear platform (currently only those based on X h/w)\nthe maximum size is increased to 1MB (from 128K default set by OMR).\nThis allows better scaling on high allocating/high CPU count\nconfigurations.\n\nBatch clearing platforms stays at 128K max, since clearing too much in a\nbatch may flush useful data from CPU data caches.\n\nSigned-off-by: Aleksandar Micic <Aleksandar_Micic@ca.ibm.com>', 'parents': ['c792e991bf132e8dceadf99904dff2bfa879982e'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/gc_base/GCExtensions.hpp', 'runtime/gc_modron_startup/mmhelpers.cpp', 'runtime/gc_modron_startup/mmparseXgc.cpp'], 'lines_added': 24, 'lines_deleted': 1, 'lines_changed': 25, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/gc_base/GCExtensions.hpp': {'lines_added': 9, 'lines_deleted': 0, 'lines_changed': 9}, 'runtime/gc_modron_startup/mmhelpers.cpp': {'lines_added': 10, 'lines_deleted': 1, 'lines_changed': 11}, 'runtime/gc_modron_startup/mmparseXgc.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 1.6605332770550814, 'author_experience': 44, 'recent_experience': 1}
2025-04-10 05:25:39,958 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,958 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,958 - __main__ - INFO - Commit Info 
{'hash': '2cfd72440387d4e231c7c44b3c0c6113eb637c24', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 2, 23, 36), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 5, 2, 56), 'message': 'Add support for aarch64 to j9vm.runner.Runner\n\nAlso reorganize and tidy up.\n\nFixed JavaHomeTestRunner which assumed that getCommandLine()\nreturns a string that ends with a space.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['ae0b2371ed3037a326392a9403ff3fda168ef23e'], 'files_changed': ['test/functional/VM_Test/src/j9vm/runner/Runner.java', 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java'], 'lines_added': 155, 'lines_deleted': 133, 'lines_changed': 288, 'file_stats': {'test/functional/VM_Test/src/j9vm/runner/Runner.java': {'lines_added': 126, 'lines_deleted': 104, 'lines_changed': 230}, 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java': {'lines_added': 29, 'lines_deleted': 29, 'lines_changed': 58}}, 'subsystems': {'test'}, 'entropy': 0.7246971909054878, 'author_experience': 2221, 'recent_experience': 63}
2025-04-10 05:25:39,958 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,964 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,965 - __main__ - INFO - Commit Info 
{'hash': '6c5f2b357ff854850a8993a33668cc6ede24a089', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 1, 28, 22), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 2, 33, 27), 'message': 'Update number of frames for test_YieldedVirtualThreadGetStackTrace\n\nJDK24 removed VirtualThreads.park() from the stack trace.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['c792e991bf132e8dceadf99904dff2bfa879982e'], 'files_changed': ['test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java'], 'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52, 'file_stats': {'test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java': {'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 63}
2025-04-10 05:25:39,966 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,966 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,967 - __main__ - INFO - Commit Info 
{'hash': 'ad9620c3405492824867184bd8c7f95c457e06f4', 'author': 'jimmyk <jimmyk@ca.ibm.com>', 'author_name': 'jimmyk', 'author_email': 'jimmyk@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 58, 15), 'committer': 'jimmyk <jimmyk@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 1, 0, 43), 'message': 'Adds FSD check to jitClassRedefineEvent\n\njitClassRedefineEvent is updated to include an explicit check for FSD being\nenabled.\n\nThe result of this is the code cache is tossed out if either HCR extensions\nare enabled or FSD mode is enabled.\n\nSigned-off-by: jimmyk <jimmyk@ca.ibm.com>\n', 'parents': ['d776a4a40f493f86d9376a6e2d667f9eb68a8935'], 'files_changed': ['runtime/util/hshelp.c'], 'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12, 'file_stats': {'runtime/util/hshelp.c': {'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 52, 'recent_experience': 2}
2025-04-10 05:25:39,967 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,968 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,968 - __main__ - INFO - Commit Info 
{'hash': 'c792e991bf132e8dceadf99904dff2bfa879982e', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 10, 26), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 0, 10, 26), 'message': 'Merge pull request #19939 from dmitripivkine/master\n\nRemove unused J9GCVMInfo and J9GCThreadInfo', 'parents': ['ae0b2371ed3037a326392a9403ff3fda168ef23e', '860fd1468ae695d38e5c8ca610f1afef4355da94'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/oti/j9nonbuilder.h'], 'lines_added': 0, 'lines_deleted': 15, 'lines_changed': 15, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 0, 'lines_deleted': 5, 'lines_changed': 5}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 0, 'lines_deleted': 10, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.9182958340544896, 'author_experience': 3908, 'recent_experience': 60}
2025-04-10 05:25:39,969 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,969 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,969 - __main__ - INFO - Commit Info 
{'hash': 'ae0b2371ed3037a326392a9403ff3fda168ef23e', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 23, 23, 15), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 23, 23, 15), 'message': 'Merge pull request #19940 from LongyuZhang/thread2\n\nRemove duplicate exclude in jvmtitests', 'parents': ['a3a097424aa462bd610ba3ed4c5db1ee44e54b88', '71f9ccfcde0fd0253f106ee6d821524c956ac229'], 'files_changed': ['test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1, 'file_stats': {'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 05:25:39,969 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,969 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,969 - __main__ - INFO - Commit Info 
{'hash': '71f9ccfcde0fd0253f106ee6d821524c956ac229', 'author': 'LongyuZhang <longyu.zhang@ibm.com>', 'author_name': 'LongyuZhang', 'author_email': 'longyu.zhang@ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 21, 39, 27), 'committer': 'LongyuZhang <longyu.zhang@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 23, 15, 37), 'message': 'Remove duplicate exclude in jvmtitests\n\nRemove the duplicate exclude for GetThreadListStackTracesExtendedTest.\n\nIssue: https://github.com/eclipse-openj9/openj9/pull/19918#discussion_r1697151877\n\nSigned-off-by: LongyuZhang <longyu.zhang@ibm.com>\n', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1, 'file_stats': {'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 20, 'recent_experience': 1}
2025-04-10 05:25:39,969 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,969 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,969 - __main__ - INFO - Commit Info 
{'hash': 'a3a097424aa462bd610ba3ed4c5db1ee44e54b88', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 22, 52, 23), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 22, 52, 23), 'message': 'Merge pull request #19917 from thallium/jfr-cpp-flag\n\nAdd triggerExecutionSample native', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4', '3f48ea98f397c774df7dabe3d2e47b0b7ba614cc'], 'files_changed': ['.gitattributes', 'jcl/jpp_configuration.xml', 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java', 'jcl/src/java.base/share/classes/java/lang/System.java', 'runtime/jcl/CMakeLists.txt', 'runtime/jcl/common/com_ibm_oti_vm_VM.c', 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp', 'runtime/jcl/exports.cmake', 'runtime/jcl/module.xml', 'runtime/jcl/uma/jfr_exports.xml', 'runtime/oti/j9nonbuilder.h', 'runtime/oti/jclprots.h', 'runtime/vm/intfunc.c', 'test/functional/cmdLineTests/jfr/build.xml', 'test/functional/cmdLineTests/jfr/jfr.xml', 'test/functional/cmdLineTests/jfr/metadata.blob', 'test/functional/cmdLineTests/jfr/playlist.xml', 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java'], 'lines_added': 2673, 'lines_deleted': 198, 'lines_changed': 2871, 'file_stats': {'.gitattributes': {'lines_added': 5, 'lines_deleted': 4, 'lines_changed': 9}, 'jcl/jpp_configuration.xml': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'jcl/src/java.base/share/classes/java/lang/System.java': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/CMakeLists.txt': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/jcl/common/com_ibm_oti_vm_VM.c': {'lines_added': 0, 'lines_deleted': 192, 'lines_changed': 192}, 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp': {'lines_added': 221, 'lines_deleted': 0, 'lines_changed': 221}, 'runtime/jcl/exports.cmake': {'lines_added': 6, 'lines_deleted': 0, 'lines_changed': 6}, 'runtime/jcl/module.xml': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/uma/jfr_exports.xml': {'lines_added': 24, 'lines_deleted': 0, 'lines_changed': 24}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 3, 'lines_deleted': 0, 'lines_changed': 3}, 'runtime/oti/jclprots.h': {'lines_added': 5, 'lines_deleted': 0, 'lines_changed': 5}, 'runtime/vm/intfunc.c': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 87, 'lines_deleted': 0, 'lines_changed': 87}, 'test/functional/cmdLineTests/jfr/jfr.xml': {'lines_added': 33, 'lines_deleted': 0, 'lines_changed': 33}, 'test/functional/cmdLineTests/jfr/metadata.blob': {'lines_added': 2180, 'lines_deleted': 0, 'lines_changed': 2180}, 'test/functional/cmdLineTests/jfr/playlist.xml': {'lines_added': 57, 'lines_deleted': 0, 'lines_changed': 57}, 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java': {'lines_added': 31, 'lines_deleted': 0, 'lines_changed': 31}}, 'subsystems': {'jcl', 'runtime', 'root', 'test'}, 'entropy': 1.4612023105729814, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 05:25:39,975 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,975 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,976 - __main__ - INFO - Commit Info 
{'hash': '860fd1468ae695d38e5c8ca610f1afef4355da94', 'author': 'Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'author_name': 'Dmitri Pivkine', 'author_email': 'Dmitri_Pivkine@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 45, 15), 'committer': 'Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 45, 15), 'message': 'Remove unused J9GCVMInfo and J9GCThreadInfo\n\nLooks like J9JavaVM->gcInfo field and J9GCVMInfo, J9GCThreadInfo structs\nare not used and can be deleted.\n\nSigned-off-by: Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/oti/j9nonbuilder.h'], 'lines_added': 0, 'lines_deleted': 15, 'lines_changed': 15, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 0, 'lines_deleted': 5, 'lines_changed': 5}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 0, 'lines_deleted': 10, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.9182958340544896, 'author_experience': 337, 'recent_experience': 4}
2025-04-10 05:25:39,977 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,977 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,977 - __main__ - INFO - Commit Info 
{'hash': '70aac1f21716023e185a8663dc740659c2a94623', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 26, 51), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 27, 12), 'message': 'Correct spelling of METADATA_BLOB_FILE_ENVVAR\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['0362cb326d8137effe1e16c1f10661a99c0a0691'], 'files_changed': ['runtime/vm/JFRWriter.hpp'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'runtime/vm/JFRWriter.hpp': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 05:25:39,978 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,979 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,979 - __main__ - INFO - Commit Info 
{'hash': 'bd018c01d21f1c6ab9499449b8e2af71eb03a6a4', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 9, 42), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 9, 42), 'message': 'Merge pull request #19929 from zl-wang/master\n\nSet spin-counts right', 'parents': ['3b3874e25ade7739155be3800e762f3ba6580fea', 'dd27fc0d807057d0a1299edc7cabb769bc6c9e01'], 'files_changed': ['runtime/vm/vmthread.cpp'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/vm/vmthread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 23}
2025-04-10 05:25:39,979 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,979 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,979 - __main__ - INFO - Commit Info 
{'hash': '3b3874e25ade7739155be3800e762f3ba6580fea', 'author': 'AdamBrousseau <adam.brousseau88@gmail.com>', 'author_name': 'AdamBrousseau', 'author_email': 'adam.brousseau88@gmail.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 0, 46), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 0, 46), 'message': 'Merge pull request #19933 from mahdipub/sets_cuda_to_default_for_all\n\nSets cuda_default for p Linux and removes cuda_9', 'parents': ['0362cb326d8137effe1e16c1f10661a99c0a0691', '17894a56b62b128d056b630b350c9915b0fbe0ba'], 'files_changed': ['buildenv/jenkins/variables/defaults.yml'], 'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8, 'file_stats': {'buildenv/jenkins/variables/defaults.yml': {'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8}}, 'subsystems': {'buildenv'}, 'entropy': 0.0, 'author_experience': 71, 'recent_experience': 6}
2025-04-10 05:25:39,979 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,982 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,982 - __main__ - INFO - Commit Info 
{'hash': '17894a56b62b128d056b630b350c9915b0fbe0ba', 'author': 'Mahdi Ardekanian <mahdi@ibm.com>', 'author_name': 'Mahdi Ardekanian', 'author_email': 'mahdi@ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 19, 36, 46), 'committer': 'Mahdi Ardekanian <mahdi@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 19, 58, 54), 'message': 'Sets cuda_default for p Linux and removes cuda_9\n\nNow that plinux build moved to docker, we can set cuda level to `cuda_default` as we use for others like xlinux. With that we can also remove `cuda_9` which only plinux is using.\n\nSigned-off-by: mahdi@ibm.com\n', 'parents': ['0362cb326d8137effe1e16c1f10661a99c0a0691'], 'files_changed': ['buildenv/jenkins/variables/defaults.yml'], 'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8, 'file_stats': {'buildenv/jenkins/variables/defaults.yml': {'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8}}, 'subsystems': {'buildenv'}, 'entropy': 0.0, 'author_experience': 18, 'recent_experience': 6}
2025-04-10 05:25:39,983 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,983 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,984 - __main__ - INFO - Commit Info 
{'hash': '3f48ea98f397c774df7dabe3d2e47b0b7ba614cc', 'author': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'author_name': 'Gengchen Tuo', 'author_email': 'gengchen.tuo@ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 2, 51, 54), 'committer': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 7, 0, 29), 'message': 'Add triggerExecutionSample native\n\n- Add JPP flag for JFR\n- Add com.ibm.oti.vm.VM::triggerExecutionSample that calls\n  jfrExecutionSample on all Java threads\n- Add test for triggerExecutionSample\n\nRelated:\n- https://github.com/ibmruntimes/openj9-openjdk-jdk/pull/817\n\nDepend on:\n- https://github.com/adoptium/TKG/pull/589\n\nSigned-off-by: Gengchen Tuo <gengchen.tuo@ibm.com>\n', 'parents': ['ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535'], 'files_changed': ['.gitattributes', 'jcl/jpp_configuration.xml', 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java', 'jcl/src/java.base/share/classes/java/lang/System.java', 'runtime/jcl/CMakeLists.txt', 'runtime/jcl/common/com_ibm_oti_vm_VM.c', 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp', 'runtime/jcl/exports.cmake', 'runtime/jcl/module.xml', 'runtime/jcl/uma/jfr_exports.xml', 'runtime/oti/j9nonbuilder.h', 'runtime/oti/jclprots.h', 'runtime/vm/intfunc.c', 'test/functional/cmdLineTests/jfr/build.xml', 'test/functional/cmdLineTests/jfr/jfr.xml', 'test/functional/cmdLineTests/jfr/metadata.blob', 'test/functional/cmdLineTests/jfr/playlist.xml', 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java'], 'lines_added': 2673, 'lines_deleted': 198, 'lines_changed': 2871, 'file_stats': {'.gitattributes': {'lines_added': 5, 'lines_deleted': 4, 'lines_changed': 9}, 'jcl/jpp_configuration.xml': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'jcl/src/java.base/share/classes/java/lang/System.java': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/CMakeLists.txt': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/jcl/common/com_ibm_oti_vm_VM.c': {'lines_added': 0, 'lines_deleted': 192, 'lines_changed': 192}, 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp': {'lines_added': 221, 'lines_deleted': 0, 'lines_changed': 221}, 'runtime/jcl/exports.cmake': {'lines_added': 6, 'lines_deleted': 0, 'lines_changed': 6}, 'runtime/jcl/module.xml': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/uma/jfr_exports.xml': {'lines_added': 24, 'lines_deleted': 0, 'lines_changed': 24}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 3, 'lines_deleted': 0, 'lines_changed': 3}, 'runtime/oti/jclprots.h': {'lines_added': 5, 'lines_deleted': 0, 'lines_changed': 5}, 'runtime/vm/intfunc.c': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 87, 'lines_deleted': 0, 'lines_changed': 87}, 'test/functional/cmdLineTests/jfr/jfr.xml': {'lines_added': 33, 'lines_deleted': 0, 'lines_changed': 33}, 'test/functional/cmdLineTests/jfr/metadata.blob': {'lines_added': 2180, 'lines_deleted': 0, 'lines_changed': 2180}, 'test/functional/cmdLineTests/jfr/playlist.xml': {'lines_added': 57, 'lines_deleted': 0, 'lines_changed': 57}, 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java': {'lines_added': 31, 'lines_deleted': 0, 'lines_changed': 31}}, 'subsystems': {'jcl', 'runtime', 'root', 'test'}, 'entropy': 1.4612023105729814, 'author_experience': 86, 'recent_experience': 0}
2025-04-10 05:25:39,985 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,986 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,987 - __main__ - INFO - Commit Info 
{'hash': '0362cb326d8137effe1e16c1f10661a99c0a0691', 'author': 'Lan Xia <Lan_Xia@ca.ibm.com>', 'author_name': 'Lan Xia', 'author_email': 'Lan_Xia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 2, 59, 2), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 2, 59, 2), 'message': 'Merge pull request #19918 from LongyuZhang/thread1\n\nExtract Thread Test to JDK 22 and under', 'parents': ['48f557e42619c18f1282fffe592e5554ae784160', '01f287ca56688c57bf3f68a62877c6ce67535eae'], 'files_changed': ['test/functional/Java8andUp/build.xml', 'test/functional/Java8andUp/playlist.xml', 'test/functional/Java8andUp/testng.xml', 'test/functional/Java8andUp/testng_thread.xml', 'test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 143, 'lines_deleted': 15, 'lines_changed': 158, 'file_stats': {'test/functional/Java8andUp/build.xml': {'lines_added': 25, 'lines_deleted': 2, 'lines_changed': 27}, 'test/functional/Java8andUp/playlist.xml': {'lines_added': 49, 'lines_deleted': 0, 'lines_changed': 49}, 'test/functional/Java8andUp/testng.xml': {'lines_added': 0, 'lines_deleted': 2, 'lines_changed': 2}, 'test/functional/Java8andUp/testng_thread.xml': {'lines_added': 37, 'lines_deleted': 0, 'lines_changed': 37}, 'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 32, 'lines_deleted': 11, 'lines_changed': 43}}, 'subsystems': {'test'}, 'entropy': 2.040604141211785, 'author_experience': 574, 'recent_experience': 3}
2025-04-10 05:25:39,987 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,988 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,989 - __main__ - INFO - Commit Info 
{'hash': 'dd27fc0d807057d0a1299edc7cabb769bc6c9e01', 'author': 'Julian <zlwang@ca.ibm.com>', 'author_name': 'Julian', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 0, 2, 44), 'committer': 'Julian <zlwang@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 0, 2, 44), 'message': 'Set spin-counts right\nCurrently, they are set according to how many CPUs there are online.\nHowever, it makes more senses to set them according to how many CPUs\n JVM is going to run. Such that, we can take advantages of single-CPU\n scenarios (be it numactl or container).\n', 'parents': ['48f557e42619c18f1282fffe592e5554ae784160'], 'files_changed': ['runtime/vm/vmthread.cpp'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/vm/vmthread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 8, 'recent_experience': 4}
2025-04-10 05:25:39,989 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,990 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,990 - __main__ - INFO - Commit Info 
{'hash': '48f557e42619c18f1282fffe592e5554ae784160', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 52, 41), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 52, 41), 'message': 'Merge pull request #19925 from keithc-ca/executeOnCarrierThread\n\nJDK24 removes JavaLangAccess.executeOnCarrierThread()', 'parents': ['c5b3b0920791dcc4242376fcb6eb007d00d779ea', 'e4bf5c1ef78329fda5282d243fffdc14b6a8566b'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 23}
2025-04-10 05:25:39,990 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,991 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,991 - __main__ - INFO - Commit Info 
{'hash': 'c5b3b0920791dcc4242376fcb6eb007d00d779ea', 'author': 'Rahil Shah <rahil@ca.ibm.com>', 'author_name': 'Rahil Shah', 'author_email': 'rahil@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 46, 35), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 46, 35), 'message': 'Merge pull request #19926 from zl-wang/master\n\nChange to use isOffheapAllocationEnabled query', 'parents': ['d98e1e5c636a4c44f90e0b5b59c506a891b686f9', '8e7895ff8886aa73c7661bc768e40550df8ab67e'], 'files_changed': ['runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/env/VMJ9.cpp', 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 17, 'lines_deleted': 17, 'lines_changed': 34, 'file_stats': {'runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/env/VMJ9.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}, 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 1.775523493673489, 'author_experience': 144, 'recent_experience': 12}
2025-04-10 05:25:39,993 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,993 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,993 - __main__ - INFO - Commit Info 
{'hash': 'd98e1e5c636a4c44f90e0b5b59c506a891b686f9', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 29, 5), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 29, 5), 'message': 'Merge pull request #19805 from fengxue-IS/enhance-profiling\n\nRefactor Continuation cache profiling', 'parents': ['97d0bb706186611d847c7671d991eae9b87bf928', '0076e93ad94783bd40b93434f37293ccf67282d0'], 'files_changed': ['runtime/oti/j9consts.h', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/ContinuationHelpers.cpp', 'runtime/vm/jvminit.c'], 'lines_added': 54, 'lines_deleted': 19, 'lines_changed': 73, 'file_stats': {'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 6, 'lines_deleted': 1, 'lines_changed': 7}, 'runtime/vm/ContinuationHelpers.cpp': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}, 'runtime/vm/jvminit.c': {'lines_added': 43, 'lines_deleted': 14, 'lines_changed': 57}}, 'subsystems': {'runtime'}, 'entropy': 1.0374106511842158, 'author_experience': 675, 'recent_experience': 23}
2025-04-10 05:25:39,993 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,995 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,995 - __main__ - INFO - Commit Info 
{'hash': '97d0bb706186611d847c7671d991eae9b87bf928', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 2, 45), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 2, 45), 'message': 'Merge pull request #19928 from JasonFengJ9/jdk24access\n\nJDK24 removes JavaLangAccess.stringSize(long)', 'parents': ['487b005e140f73368d55b7d4c736f0f96fa9dc60', '4d506fd4f2efd03f88d59dff5dff7e36e6e47361'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 05:25:39,995 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,996 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,996 - __main__ - INFO - Commit Info 
{'hash': '4d506fd4f2efd03f88d59dff5dff7e36e6e47361', 'author': 'Jason Feng <fengj@ca.ibm.com>', 'author_name': 'Jason Feng', 'author_email': 'fengj@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 17, 12, 45), 'committer': 'Jason Feng <fengj@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 29, 17, 12, 45), 'message': 'JDK24 removes JavaLangAccess.stringSize(long x)\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>', 'parents': ['487b005e140f73368d55b7d4c736f0f96fa9dc60'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 641, 'recent_experience': 11}
2025-04-10 05:25:39,997 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,997 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:39,998 - __main__ - INFO - Commit Info 
{'hash': '8e7895ff8886aa73c7661bc768e40550df8ab67e', 'author': 'Julian <zlwang@ca.ibm.com>', 'author_name': 'Julian', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 2, 15, 2), 'committer': 'Julian <zlwang@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 27, 2, 15, 2), 'message': 'Change to use isOffheapAllocationEnabled query\nwherever it is appropriate (and intended), isIndexableDataAddrPresent is changed into isOffheapAllocationEnabled.\n\nSigned-off-by: Julian <zlwang@ca.ibm.com>\n', 'parents': ['d65b5fe5306c24b69066199ee5d61873f79785d6'], 'files_changed': ['runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/env/VMJ9.cpp', 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 17, 'lines_deleted': 17, 'lines_changed': 34, 'file_stats': {'runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/env/VMJ9.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}, 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 1.775523493673489, 'author_experience': 8, 'recent_experience': 4}
2025-04-10 05:25:39,999 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:39,999 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,000 - __main__ - INFO - Commit Info 
{'hash': '01f287ca56688c57bf3f68a62877c6ce67535eae', 'author': 'LongyuZhang <longyu.zhang@ibm.com>', 'author_name': 'LongyuZhang', 'author_email': 'longyu.zhang@ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 21, 13, 32), 'committer': 'LongyuZhang <longyu.zhang@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 27, 2, 9, 4), 'message': 'Extract Thread Test to JDK 22 and under\n- Thread functions are removed for JDK 23, extract test to JDK 22 and under\n\nSigned-off-by: LongyuZhang <longyu.zhang@ibm.com>\n', 'parents': ['200b783f4002902f3ff46d2103f9ee7916f966dc'], 'files_changed': ['test/functional/Java8andUp/build.xml', 'test/functional/Java8andUp/playlist.xml', 'test/functional/Java8andUp/testng.xml', 'test/functional/Java8andUp/testng_thread.xml', 'test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 143, 'lines_deleted': 15, 'lines_changed': 158, 'file_stats': {'test/functional/Java8andUp/build.xml': {'lines_added': 25, 'lines_deleted': 2, 'lines_changed': 27}, 'test/functional/Java8andUp/playlist.xml': {'lines_added': 49, 'lines_deleted': 0, 'lines_changed': 49}, 'test/functional/Java8andUp/testng.xml': {'lines_added': 0, 'lines_deleted': 2, 'lines_changed': 2}, 'test/functional/Java8andUp/testng_thread.xml': {'lines_added': 37, 'lines_deleted': 0, 'lines_changed': 37}, 'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 32, 'lines_deleted': 11, 'lines_changed': 43}}, 'subsystems': {'test'}, 'entropy': 2.040604141211785, 'author_experience': 20, 'recent_experience': 1}
2025-04-10 05:25:40,001 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,001 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,002 - __main__ - INFO - Commit Info 
{'hash': '487b005e140f73368d55b7d4c736f0f96fa9dc60', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 2, 0, 19), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 27, 2, 0, 19), 'message': 'Merge pull request #19924 from joransiu/autocvt-default\n\nUpdate com.ibm.autocvt to default to true unless file.encoding is set', 'parents': ['8805cc2707238c179dbfe11b5d1d4e2909f54632', '5dbfd8760028fcfe60506530cacb9589a4e439a1'], 'files_changed': ['runtime/jcl/common/system.c'], 'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11, 'file_stats': {'runtime/jcl/common/system.c': {'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 05:25:40,003 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,004 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,005 - __main__ - INFO - Commit Info 
{'hash': '5dbfd8760028fcfe60506530cacb9589a4e439a1', 'author': 'Joran Siu <joransiu@ca.ibm.com>', 'author_name': 'Joran Siu', 'author_email': 'joransiu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 23, 2, 7), 'committer': 'Joran Siu <joransiu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 27, 1, 48, 55), 'message': 'Update com.ibm.autocvt to default to true unless file.encoding is set\n\nThe z/OS specific com.ibm.autocvt property should default to true only\nif the file.encoding property is unset. If file.encoding is set to a\nspecific charset or COMPAT, then we disable auto conversion to retain\nthe same behaviour as JDK17 and earlier releases.\n\nSigned-off-by: Joran Siu <joransiu@ca.ibm.com>\n', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4'], 'files_changed': ['runtime/jcl/common/system.c'], 'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11, 'file_stats': {'runtime/jcl/common/system.c': {'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 98, 'recent_experience': 3}
2025-04-10 05:25:40,005 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,006 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,006 - __main__ - INFO - Commit Info 
{'hash': '8805cc2707238c179dbfe11b5d1d4e2909f54632', 'author': 'Aleksandar Micic <amicic@ca.ibm.com>', 'author_name': 'Aleksandar Micic', 'author_email': 'amicic@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 1, 45, 10), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 27, 1, 45, 10), 'message': 'Merge pull request #19919 from zl-wang/master\n\nTreat single CPU as if -Xgc:noConcurrentMark were set', 'parents': ['b6760a1420ac8df465c06bcc21088c2511e5d30b', 'd65b5fe5306c24b69066199ee5d61873f79785d6'], 'files_changed': ['runtime/gc_modron_startup/mminit.cpp'], 'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6, 'file_stats': {'runtime/gc_modron_startup/mminit.cpp': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 374, 'recent_experience': 10}
2025-04-10 05:25:40,006 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,007 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,008 - __main__ - INFO - Commit Info 
{'hash': 'b6760a1420ac8df465c06bcc21088c2511e5d30b', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 0, 22, 17), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 27, 0, 22, 17), 'message': 'Merge pull request #19920 from keithc-ca/throw11\n\nJVM_LoadLibrary: respect throwOnFailure in jdk11', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4', '3f3d51f38c850b1daab989fd034d7420d852dfea'], 'files_changed': ['runtime/j9vm/jvm.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/j9vm/jvm.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 24}
2025-04-10 05:25:40,008 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,010 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,010 - __main__ - INFO - Commit Info 
{'hash': 'e4bf5c1ef78329fda5282d243fffdc14b6a8566b', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 26, 22, 58, 21), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 26, 23, 37, 33), 'message': 'JDK24 removes JavaLangAccess.executeOnCarrierThread()\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 05:25:40,011 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,011 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,012 - __main__ - INFO - Commit Info 
{'hash': '3f3d51f38c850b1daab989fd034d7420d852dfea', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 21, 55, 18), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 26, 3, 28, 28), 'message': 'JVM_LoadLibrary: respect throwOnFailure in jdk11\n\nThis corrects an oversight in #14739.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4'], 'files_changed': ['runtime/j9vm/jvm.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/j9vm/jvm.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 05:25:40,012 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,012 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,012 - __main__ - INFO - Commit Info 
{'hash': '9142f7eb060d4a74d9def47039b06edf7a8c65c4', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 26, 3, 21, 23), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 26, 3, 21, 23), 'message': 'Merge pull request #19861 from JasonFengJ9/aixlib\n\nJDK17+ JVM_LoadLibrary() opens shared library via J9PORT_SLOPEN_DECORATE', 'parents': ['d776a4a40f493f86d9376a6e2d667f9eb68a8935', 'f3d33e83b83231fc5ee020e8a4318d1588207dbb'], 'files_changed': ['runtime/j9vm/j9scar.tdf', 'runtime/j9vm/jvm.c'], 'lines_added': 77, 'lines_deleted': 8, 'lines_changed': 85, 'file_stats': {'runtime/j9vm/j9scar.tdf': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/j9vm/jvm.c': {'lines_added': 73, 'lines_deleted': 8, 'lines_changed': 81}}, 'subsystems': {'runtime'}, 'entropy': 0.27376916868294177, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 05:25:40,012 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,014 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,015 - __main__ - INFO - Commit Info 
{'hash': 'f3d33e83b83231fc5ee020e8a4318d1588207dbb', 'author': 'Jason Feng <fengj@ca.ibm.com>', 'author_name': 'Jason Feng', 'author_email': 'fengj@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 15, 20, 55, 51), 'committer': 'Jason Feng <fengj@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 25, 22, 47, 27), 'message': 'JDK17+ JVM_LoadLibrary() opens shared library via J9PORT_SLOPEN_DECORATE\n\nj9sl_open_shared_library() with the flag J9PORT_SLOPEN_DECORATE expects\nthe incoming library name to be platform independent, i.e., it must not\ncontain any prefix or file extension. A path to the library is\nsupported.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>', 'parents': ['157a0ef24c69eef780776bfabf75e2504e8c9a24'], 'files_changed': ['runtime/j9vm/j9scar.tdf', 'runtime/j9vm/jvm.c'], 'lines_added': 77, 'lines_deleted': 8, 'lines_changed': 85, 'file_stats': {'runtime/j9vm/j9scar.tdf': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/j9vm/jvm.c': {'lines_added': 73, 'lines_deleted': 8, 'lines_changed': 81}}, 'subsystems': {'runtime'}, 'entropy': 0.27376916868294177, 'author_experience': 641, 'recent_experience': 11}
2025-04-10 05:25:40,016 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,016 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,017 - __main__ - INFO - Commit Info 
{'hash': 'd65b5fe5306c24b69066199ee5d61873f79785d6', 'author': 'Julian <zlwang@ca.ibm.com>', 'author_name': 'Julian', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 19, 28, 59), 'committer': 'Julian <zlwang@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 25, 22, 38, 2), 'message': 'Treat single CPU as if -Xgc:noConcurrentMark were set\nThere is little expected benefit with concurrentmark if you are running on a single-CPU machine/environment. On the other hand, you could gain some benefits with noConcurrentMark: 1) no interference from background marking thread; 2) shorter write-barrier path-length: for certain workloads, this provides substantial performance benefits (e.g. Spark TPC-DS q72 in particular).\n\nfix the missing portLib declaration ...\n\nSigned-off-by: Julian <zlwang@ca.ibm.com>\n', 'parents': ['157a0ef24c69eef780776bfabf75e2504e8c9a24'], 'files_changed': ['runtime/gc_modron_startup/mminit.cpp'], 'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6, 'file_stats': {'runtime/gc_modron_startup/mminit.cpp': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 8, 'recent_experience': 4}
2025-04-10 05:25:40,018 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,019 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,019 - __main__ - INFO - Commit Info 
{'hash': 'd776a4a40f493f86d9376a6e2d667f9eb68a8935', 'author': 'Hang Shao <hangshao@ca.ibm.com>', 'author_name': 'Hang Shao', 'author_email': 'hangshao@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 19, 42, 41), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 25, 19, 42, 41), 'message': 'Merge pull request #19915 from theresa-m/unsafe_update\n\nUpdate Unsafe value type comments and Java methods', 'parents': ['876f013cc7d079e97ac84ab151c8e7f1ebabfede', '40c65378d14f4f6fed10eda96f0b6690dd778ec0'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java'], 'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java': {'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 333, 'recent_experience': 32}
2025-04-10 05:25:40,021 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,021 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,022 - __main__ - INFO - Commit Info 
{'hash': '876f013cc7d079e97ac84ab151c8e7f1ebabfede', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 7, 19, 11), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 25, 7, 19, 11), 'message': 'Merge pull request #19877 from theresa-m/fix_19756\n\nError if invokeinterface receiver is reference array', 'parents': ['157a0ef24c69eef780776bfabf75e2504e8c9a24', 'eac4b61c53eac94cf45ae8750cffaab4d7807a0c'], 'files_changed': ['runtime/bcverify/rtverify.c', 'runtime/oti/bytecodewalk.h'], 'lines_added': 11, 'lines_deleted': 10, 'lines_changed': 21, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 7, 'lines_deleted': 6, 'lines_changed': 13}, 'runtime/oti/bytecodewalk.h': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}}, 'subsystems': {'runtime'}, 'entropy': 0.9587118829771317, 'author_experience': 675, 'recent_experience': 24}
2025-04-10 05:25:40,023 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,024 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,024 - __main__ - INFO - Commit Info 
{'hash': '157a0ef24c69eef780776bfabf75e2504e8c9a24', 'author': 'Rahil Shah <rahil@ca.ibm.com>', 'author_name': 'Rahil Shah', 'author_email': 'rahil@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 23, 20, 28), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 24, 23, 20, 28), 'message': 'Merge pull request #19860 from ehsankianifar/Z_RemoveUnusedRegistersFromGenHeapAlloc\n\nZ: remove unused and redundant register from object evaluator', 'parents': ['200b783f4002902f3ff46d2103f9ee7916f966dc', 'b4719f8df39cad0985a5faa9f6ddfa7dc2c812c4'], 'files_changed': ['runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287, 'file_stats': {'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 144, 'recent_experience': 12}
2025-04-10 05:25:40,025 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,025 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,026 - __main__ - INFO - Commit Info 
{'hash': '40c65378d14f4f6fed10eda96f0b6690dd778ec0', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 19, 39, 25), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 19, 46, 40), 'message': 'Update Unsafe value type comments and Java methods\n\n- update comments with primitive references\n- remove stale methods getReferenceVolatile and getReference\n- add methods hasNullMarker and nullMarkerOffset to match RI\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['795fef00b272a217ea634ae50963fc2e780fed37'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java'], 'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java': {'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 366, 'recent_experience': 34}
2025-04-10 05:25:40,026 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,026 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,026 - __main__ - INFO - Commit Info 
{'hash': 'b4719f8df39cad0985a5faa9f6ddfa7dc2c812c4', 'author': 'Ehsan Kiani Far <ehsan.kianifar@gmail.com>', 'author_name': 'Ehsan Kiani Far', 'author_email': 'ehsan.kianifar@gmail.com', 'authored_date': datetime.datetime(2024, 7, 16, 1, 30, 36), 'committer': 'Ehsan Kiani Far <ehsan.kianifar@gmail.com>', 'committed_date': datetime.datetime(2024, 7, 24, 19, 45, 20), 'message': 'Z: reduce the number of registers used in VMnewEvaluator\n\nVMnewEvaluator uses more registers than it needs.\nSome registers like zeroReg are initialized but never used.\nSome registers line dataSizeReg are redundant.\nThis commit uses existing registers as much as possible and\nremoves all the unused or redundant registers.\nIt also uses scratch register manager in genHeapAlloc for\nbetter register allocation.\n\nSigned-off-by: Ehsan Kiani Far <ehsan.kianifar@gmail.com>\n', 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca'], 'files_changed': ['runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287, 'file_stats': {'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 11, 'recent_experience': 4}
2025-04-10 05:25:40,030 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,030 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,030 - __main__ - INFO - Commit Info 
{'hash': 'eac4b61c53eac94cf45ae8750cffaab4d7807a0c', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 20, 38), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 19, 30, 19), 'message': 'Error if invokeinterface receiver is reference array\n\nThrow an error during bytecode verification if the receiver\nof invokeinterface is a reference array\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['015b58ddc90aeb9143258eb419ee2fb1f4110eec'], 'files_changed': ['runtime/bcverify/rtverify.c', 'runtime/oti/bytecodewalk.h'], 'lines_added': 11, 'lines_deleted': 10, 'lines_changed': 21, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 7, 'lines_deleted': 6, 'lines_changed': 13}, 'runtime/oti/bytecodewalk.h': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}}, 'subsystems': {'runtime'}, 'entropy': 0.9587118829771317, 'author_experience': 366, 'recent_experience': 34}
2025-04-10 05:25:40,031 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,031 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,033 - __main__ - INFO - Commit Info 
{'hash': '200b783f4002902f3ff46d2103f9ee7916f966dc', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 18, 34, 18), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 24, 18, 34, 18), 'message': 'Merge pull request #19912 from JasonFengJ9/jdk24access\n\nJDK24 removes JavaLangAccess.stringConcatHelperPrepend()', 'parents': ['9d6010511102076fb18bfcfe2b3609c4fb9c94f6', 'badec667bdf46d05fc2c6171630cf10a5fb290fc'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 70}
2025-04-10 05:25:40,034 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,035 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,036 - __main__ - INFO - Commit Info 
{'hash': 'badec667bdf46d05fc2c6171630cf10a5fb290fc', 'author': 'Jason Feng <fengj@ca.ibm.com>', 'author_name': 'Jason Feng', 'author_email': 'fengj@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 17, 23, 5), 'committer': 'Jason Feng <fengj@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 17, 23, 5), 'message': 'JDK24 removes JavaLangAccess.stringConcatHelperPrepend()\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>', 'parents': ['9d6010511102076fb18bfcfe2b3609c4fb9c94f6'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 641, 'recent_experience': 11}
2025-04-10 05:25:40,036 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,037 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,038 - __main__ - INFO - Commit Info 
{'hash': '9d6010511102076fb18bfcfe2b3609c4fb9c94f6', 'author': 'Julian Wang <zlwang@ca.ibm.com>', 'author_name': 'Julian Wang', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 5, 15, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 24, 5, 15, 51), 'message': 'Merge pull request #17969 from midronij/offheap-unsafe\n\nAdjust arguments to Unsafe array operations while offheap is enabled', 'parents': ['5e3816d311ca2d4daeb315c8687d6d1d87e6234f', '4cffe9c32538f6af3a2c24e5ea0a2a18c1f31ead'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 746, 'lines_deleted': 158, 'lines_changed': 904, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 735, 'lines_deleted': 156, 'lines_changed': 891}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 11, 'lines_deleted': 2, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.10860192578701666, 'author_experience': 62, 'recent_experience': 4}
2025-04-10 05:25:40,039 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,040 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,041 - __main__ - INFO - Commit Info 
{'hash': '0076e93ad94783bd40b93434f37293ccf67282d0', 'author': 'Jack Lu <Jack.S.Lu@ibm.com>', 'author_name': 'Jack Lu', 'author_email': 'Jack.S.Lu@ibm.com', 'authored_date': datetime.datetime(2024, 7, 4, 0, 51, 14), 'committer': 'Jack Lu <Jack.S.Lu@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 1, 0, 11), 'message': 'Refactor Continuation cache profiling\n\n- Add runtime option to JVM for reporting cache usage\n- Report vthread stack size related data\n\nSigned-off-by: Jack Lu <Jack.S.Lu@ibm.com>\n', 'parents': ['5e3816d311ca2d4daeb315c8687d6d1d87e6234f'], 'files_changed': ['runtime/oti/j9consts.h', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/ContinuationHelpers.cpp', 'runtime/vm/jvminit.c'], 'lines_added': 54, 'lines_deleted': 19, 'lines_changed': 73, 'file_stats': {'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 6, 'lines_deleted': 1, 'lines_changed': 7}, 'runtime/vm/ContinuationHelpers.cpp': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}, 'runtime/vm/jvminit.c': {'lines_added': 43, 'lines_deleted': 14, 'lines_changed': 57}}, 'subsystems': {'runtime'}, 'entropy': 1.0374106511842158, 'author_experience': 330, 'recent_experience': 2}
2025-04-10 05:25:40,042 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,043 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,043 - __main__ - INFO - Commit Info 
{'hash': '5e3816d311ca2d4daeb315c8687d6d1d87e6234f', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 23, 30, 30), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 23, 23, 30, 30), 'message': 'Merge pull request #19904 from pshipton/replaceall\n\nString.replaceAll() fast path must check regex is compressed', 'parents': ['015b58ddc90aeb9143258eb419ee2fb1f4110eec', '312c8246ed317f2f551926f322633ae522ae6e41'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/String.java', 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java'], 'lines_added': 56, 'lines_deleted': 8, 'lines_changed': 64, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/String.java': {'lines_added': 42, 'lines_deleted': 8, 'lines_changed': 50}, 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java': {'lines_added': 14, 'lines_deleted': 0, 'lines_changed': 14}}, 'subsystems': {'jcl', 'test'}, 'entropy': 0.7578784625383954, 'author_experience': 2221, 'recent_experience': 72}
2025-04-10 05:25:40,044 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,045 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,045 - __main__ - INFO - Commit Info 
{'hash': '4cffe9c32538f6af3a2c24e5ea0a2a18c1f31ead', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2024, 7, 20, 1, 33, 45), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 25, 53), 'message': 'Update documentation for Unsafe method inlining\n\nAdd comments and update existing documentation/explanations to reflect\nchanges made to inlining of Unsafe.get()/put() and compareAndSwap() to\naccommodate cases where offheap allocation is enabled.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['d1aaa914bdc62a93ff36fcf48522033148b15293'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 168, 'lines_deleted': 104, 'lines_changed': 272, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 166, 'lines_deleted': 102, 'lines_changed': 268}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.11058084476988708, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 05:25:40,046 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,046 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,048 - __main__ - INFO - Commit Info 
{'hash': 'd1aaa914bdc62a93ff36fcf48522033148b15293', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 8, 28, 19, 39, 24), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'For Unsafe.get()/put(), reorder blocks to optimize fallthrough path\n\nWhen offheap is enabled and the type of the object being operated on\nis unknown, there are three possible cases that need to be accounted\nfor regarding the type of the object being operated on for\nUnsafe.get()/put():\n\n1.) array object\n2.) java/lang/Class object\n3.) none of the above\n\nSince case (3) is the most likely, we want the block corresponding to\nthis case (directAccessBlock) to be on the fallthrough path.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['7a309afe720f309d67e3f7ff9ff3271bf9c82869'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 05:25:40,049 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,050 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,051 - __main__ - INFO - Commit Info 
{'hash': '7a309afe720f309d67e3f7ff9ff3271bf9c82869', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 8, 23, 23, 22, 59), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Skip unecessary runtime checks for Unsafe.CAS()\n\nFor Unsafe.compareAndSwap(), do not generate array check IL or adjusted\narray access block if object type is known at compile time.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['313a00c9a2d7aa3eb6c92995ca0487cc2bd81a4b'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 91, 'lines_deleted': 27, 'lines_changed': 118, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 91, 'lines_deleted': 27, 'lines_changed': 118}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 05:25:40,052 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,053 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,053 - __main__ - INFO - Commit Info 
{'hash': '313a00c9a2d7aa3eb6c92995ca0487cc2bd81a4b', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 8, 22, 22, 34, 47), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Skip unecessary runtime checks for Unsafe.get()/put()\n\nWhen the type of the object being passed in to Unsafe.get()/put() is\nknown at compile time, rather than generate runtime type checks, skip\nto determining and generating the appropriate access block. There are\ntwo cases in which we can do this:\n\n1.) If the object is known to be an array, only generate the\n    arrayDirectAccessBlock and directAccessBlock (in case NULLCHK\n    fails).\n2.) If the object is known to be non-array, non-java/lang/Class,\n    and non-java/lang/Object, only generate the directAccessBlock.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['ff51db6a2a5fc7e6dcac0df88c211226c43d3ecd'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 384, 'lines_deleted': 99, 'lines_changed': 483, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 373, 'lines_deleted': 97, 'lines_changed': 470}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 11, 'lines_deleted': 2, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.17867714028218293, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 05:25:40,055 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,055 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,056 - __main__ - INFO - Commit Info 
{'hash': 'ff51db6a2a5fc7e6dcac0df88c211226c43d3ecd', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 7, 18, 23, 42, 50), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Offheap Adjustments for Unsafe.compareAndSwap()\n\nWhen Unsafe.compareAndSwap() is called on an array and offheap changes\nare enabled, adjust arguments so that dataAddr is passed in as\nbase address of object\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['1ed9c082188e07459a169e528bb0c8f67be20f21'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 94, 'lines_deleted': 10, 'lines_changed': 104, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 94, 'lines_deleted': 10, 'lines_changed': 104}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 05:25:40,057 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,058 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,058 - __main__ - INFO - Commit Info 
{'hash': '1ed9c082188e07459a169e528bb0c8f67be20f21', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 6, 30, 12, 46, 46), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Offheap Adjustments for Unsafe.get()/put()\n\nWhen Unsafe.get()/put() is called on an array and offheap changes\nare enabled, adjust arguments so that dataAddr is passed in as\nbase address of object\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['c05e25e984f5a110e1a5a9f344fe84777293d1d0'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 106, 'lines_deleted': 15, 'lines_changed': 121, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 106, 'lines_deleted': 15, 'lines_changed': 121}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 05:25:40,060 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,060 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,061 - __main__ - INFO - Commit Info 
{'hash': '312c8246ed317f2f551926f322633ae522ae6e41', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 18, 16, 59), 'committer': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 21, 34, 56), 'message': 'String.replaceAll() fast path must check regex is compressed\n\nAlso, return the original String in the fast paths when nothing is\nreplaced.\n\nIssue https://github.com/eclipse-openj9/openj9/issues/19903\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>', 'parents': ['015b58ddc90aeb9143258eb419ee2fb1f4110eec'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/String.java', 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java'], 'lines_added': 56, 'lines_deleted': 8, 'lines_changed': 64, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/String.java': {'lines_added': 42, 'lines_deleted': 8, 'lines_changed': 50}, 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java': {'lines_added': 14, 'lines_deleted': 0, 'lines_changed': 14}}, 'subsystems': {'jcl', 'test'}, 'entropy': 0.7578784625383954, 'author_experience': 3908, 'recent_experience': 70}
2025-04-10 05:25:40,062 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,062 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,063 - __main__ - INFO - Commit Info 
{'hash': '015b58ddc90aeb9143258eb419ee2fb1f4110eec', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 0, 19, 33), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 23, 0, 19, 33), 'message': 'Merge pull request #19897 from babsingh/main8\n\nRemove the extra indentation from switch case statements', 'parents': ['7affcea260e9ee7f1fee9ec1f1831c3c16018082', '95a694857ec84ffaf234eea2b87d364f17ab2e6e'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 72}
2025-04-10 05:25:40,064 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,066 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,066 - __main__ - INFO - Commit Info 
{'hash': '7affcea260e9ee7f1fee9ec1f1831c3c16018082', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 23, 47, 13), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 22, 23, 47, 13), 'message': 'Merge pull request #19895 from theresa-m/maxclassname\n\nEnforce maximum name size during class loading', 'parents': ['578e8369908b634cc23e719226ad7545d4cfa173', '323b8b999af9b4be1796bef218c483c22209355a'], 'files_changed': ['runtime/j9vm/j7vmi.c', 'runtime/jcl/common/jcldefine.c', 'runtime/nls/j9vm/j9vm.nls', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/classsupport.c'], 'lines_added': 61, 'lines_deleted': 2, 'lines_changed': 63, 'file_stats': {'runtime/j9vm/j7vmi.c': {'lines_added': 19, 'lines_deleted': 1, 'lines_changed': 20}, 'runtime/jcl/common/jcldefine.c': {'lines_added': 16, 'lines_deleted': 0, 'lines_changed': 16}, 'runtime/nls/j9vm/j9vm.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/vm/classsupport.c': {'lines_added': 15, 'lines_deleted': 1, 'lines_changed': 16}}, 'subsystems': {'runtime'}, 'entropy': 2.134580775053083, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 05:25:40,067 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,068 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,069 - __main__ - INFO - Commit Info 
{'hash': '578e8369908b634cc23e719226ad7545d4cfa173', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 22, 24, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 22, 22, 24, 51), 'message': 'Merge pull request #19896 from babsingh/main1\n\nFix compiler error, unused variable: currentThread', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767', 'c2723578d03d22c18b0607fc9b6ca1deabe2c552'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 05:25:40,070 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,070 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,071 - __main__ - INFO - Commit Info 
{'hash': '95a694857ec84ffaf234eea2b87d364f17ab2e6e', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 21, 32, 17), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 22, 21, 45, 3), 'message': 'Remove the extra indentation from switch case statements\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 05:25:40,072 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,073 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,074 - __main__ - INFO - Commit Info 
{'hash': 'c2723578d03d22c18b0607fc9b6ca1deabe2c552', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 21, 13, 14), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 22, 21, 15, 18), 'message': 'Fix compiler error, unused variable: currentThread\n\nRelated: https://github.com/eclipse-openj9/openj9/pull/19871#discussion_r1686758594\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 05:25:40,075 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,077 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,077 - __main__ - INFO - Commit Info 
{'hash': '323b8b999af9b4be1796bef218c483c22209355a', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 20, 12, 10), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 22, 20, 12, 10), 'message': 'Enforce maximum name size during class loading\n\nClass names are stored as a UTF8 string and length is represented by\n two bytes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767'], 'files_changed': ['runtime/j9vm/j7vmi.c', 'runtime/jcl/common/jcldefine.c', 'runtime/nls/j9vm/j9vm.nls', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/classsupport.c'], 'lines_added': 61, 'lines_deleted': 2, 'lines_changed': 63, 'file_stats': {'runtime/j9vm/j7vmi.c': {'lines_added': 19, 'lines_deleted': 1, 'lines_changed': 20}, 'runtime/jcl/common/jcldefine.c': {'lines_added': 16, 'lines_deleted': 0, 'lines_changed': 16}, 'runtime/nls/j9vm/j9vm.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/vm/classsupport.c': {'lines_added': 15, 'lines_deleted': 1, 'lines_changed': 16}}, 'subsystems': {'runtime'}, 'entropy': 2.134580775053083, 'author_experience': 366, 'recent_experience': 35}
2025-04-10 05:25:40,077 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,077 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,077 - __main__ - INFO - Commit Info 
{'hash': '3be60c0a813efeeeda8e0fbb1f63d921fc404767', 'author': 'Hang Shao <hangshao@ca.ibm.com>', 'author_name': 'Hang Shao', 'author_email': 'hangshao@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 19, 55, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 22, 19, 55, 51), 'message': 'Merge pull request #19871 from babsingh/main1\n\nAdd virtual thread support for JVMTI GetObjectMonitorUsage', 'parents': ['4ce1a43f903d34929bc1613033bf778ed54a24b9', 'aeef1385814973738bdf1732a3fbe5bbec34d212'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 97, 'lines_deleted': 81, 'lines_changed': 178, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 97, 'lines_deleted': 81, 'lines_changed': 178}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 333, 'recent_experience': 33}
2025-04-10 05:25:40,077 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': '4ce1a43f903d34929bc1613033bf778ed54a24b9', 'author': 'Joran Siu <joransiu@ca.ibm.com>', 'author_name': 'Joran Siu', 'author_email': 'joransiu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 20, 22, 9, 20), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 20, 22, 9, 20), 'message': 'Merge pull request #19875 from dchopra001/libFFI_structs_fix\n\n', 'parents': ['08e67ec7900b8a03aa79cdb31fb0de28557d51ed', '5b2a07138fe11cb30c1492b8857c4749f7bf180a'], 'files_changed': ['runtime/libffi/z/sysvz64.s'], 'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21, 'file_stats': {'runtime/libffi/z/sysvz64.s': {'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 98, 'recent_experience': 3}
2025-04-10 05:25:40,084 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': '08e67ec7900b8a03aa79cdb31fb0de28557d51ed', 'author': 'Babneet Singh <babsingh@users.noreply.github.com>', 'author_name': 'Babneet Singh', 'author_email': 'babsingh@users.noreply.github.com', 'authored_date': datetime.datetime(2024, 7, 20, 1, 35, 32), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 20, 1, 35, 32), 'message': 'Merge pull request #19842 from fengxue-IS/vthread-alive-check\n\nUpdate VThread alive check to check continuation state', 'parents': ['881038dfc97ab68cf93dcce94812c48a2f47be3f', 'b14cd71e11ecc5ff469b1cb3be6363107a151b65'], 'files_changed': ['runtime/jvmti/jvmtiHelpers.cpp'], 'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9, 'file_stats': {'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 196, 'recent_experience': 5}
2025-04-10 05:25:40,084 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': '5b2a07138fe11cb30c1492b8857c4749f7bf180a', 'author': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'author_name': 'Dhruv Chopra', 'author_email': 'Dhruv.C.Chopra@ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 6, 33, 55), 'committer': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 40, 46), 'message': "Cap R0's value to 3 when handling complex structs in sysvz64.s\n\nR0's value is used to calculate a branch offset. This value can be\nbetween 0 and 3. Due to the nature of how complex types are passed in\nregisters, it's possible to increment this value beyond 3. This commit adds\nsome support code to cap that value at 3 before any branch offsets are computed.\n", 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca'], 'files_changed': ['runtime/libffi/z/sysvz64.s'], 'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21, 'file_stats': {'runtime/libffi/z/sysvz64.s': {'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 157, 'recent_experience': 1}
2025-04-10 05:25:40,084 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': '881038dfc97ab68cf93dcce94812c48a2f47be3f', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 21, 34, 28), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 34, 28), 'message': 'Merge pull request #19870 from mahdipub/fix_issue_with_non_numeric_sdk_versions\n\nFix error when param SDK_VERSION is not numeric', 'parents': ['865b57546519ff9f1cf4fb9006970cac20f2e292', 'eac681f0cee21af67657f575a366590b937a2a13'], 'files_changed': ['buildenv/jenkins/common/build.groovy'], 'lines_added': 2, 'lines_deleted': 1, 'lines_changed': 3, 'file_stats': {'buildenv/jenkins/common/build.groovy': {'lines_added': 2, 'lines_deleted': 1, 'lines_changed': 3}}, 'subsystems': {'buildenv'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 05:25:40,084 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': 'aeef1385814973738bdf1732a3fbe5bbec34d212', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 6, 19, 19, 38, 28), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 30, 15), 'message': 'Add virtual thread support for JVMTI GetObjectMonitorUsage\n\n- RI has removed support for virtual threads if an object monitor is\nowned by a virtual thread.\n- Support has also been removed for virtual threads that are waiting\nbe notified or own a monitor.\n- Also, new tests show that waiting to be notified threads do not\nrepeat and only appear in one list. This has been corrected in OpenJ9.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['fba3bfe9ef06509646e8f3cd520de51c6a3069c6'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 60, 'lines_deleted': 42, 'lines_changed': 102, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 60, 'lines_deleted': 42, 'lines_changed': 102}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 05:25:40,084 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': '865b57546519ff9f1cf4fb9006970cac20f2e292', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 21, 17, 54), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 17, 54), 'message': 'Merge pull request #19806 from cjjdespres/fix-aotcache-decls\n\nImprove JITServer AOT cache implementation portability', 'parents': ['ab58e586f3a84a6605fae78d0f57fe32827883b2', '4b9cac2d8285c59ab5fba7ef1b93ae9083805cc3'], 'files_changed': ['runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTCache.hpp', 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp'], 'lines_added': 93, 'lines_deleted': 56, 'lines_changed': 149, 'file_stats': {'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 45, 'lines_deleted': 17, 'lines_changed': 62}, 'runtime/compiler/runtime/JITServerAOTCache.hpp': {'lines_added': 46, 'lines_deleted': 37, 'lines_changed': 83}, 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 1.1366957416314165, 'author_experience': 1271, 'recent_experience': 37}
2025-04-10 05:25:40,084 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,084 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,084 - __main__ - INFO - Commit Info 
{'hash': 'ab58e586f3a84a6605fae78d0f57fe32827883b2', 'author': 'Joran Siu <joransiu@ca.ibm.com>', 'author_name': 'Joran Siu', 'author_email': 'joransiu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 20, 19, 9), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 20, 19, 9), 'message': 'Merge pull request #19876 from keithc-ca/ifa\n\n', 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca', '8ef7ddb4e88557452f909b76b8121945f0470caf'], 'files_changed': ['test/functional/NativeTest/nativeTestSettings.mk'], 'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66, 'file_stats': {'test/functional/NativeTest/nativeTestSettings.mk': {'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 98, 'recent_experience': 3}
2025-04-10 05:25:40,099 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,100 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,100 - __main__ - INFO - Commit Info 
{'hash': '8ef7ddb4e88557452f909b76b8121945f0470caf', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 18, 6, 25), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 18, 6, 25), 'message': 'Correct path to libj9ifa29.so for Java 11+\n\nSince the switch to using "mixed references", there no longer\nis a "compressedrefs" folder.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca'], 'files_changed': ['test/functional/NativeTest/nativeTestSettings.mk'], 'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66, 'file_stats': {'test/functional/NativeTest/nativeTestSettings.mk': {'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 05:25:40,101 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,102 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,102 - __main__ - INFO - Commit Info 
{'hash': 'b14cd71e11ecc5ff469b1cb3be6363107a151b65', 'author': 'Jack Lu <Jack.S.Lu@ibm.com>', 'author_name': 'Jack Lu', 'author_email': 'Jack.S.Lu@ibm.com', 'authored_date': datetime.datetime(2024, 7, 10, 23, 26, 25), 'committer': 'Jack Lu <Jack.S.Lu@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 3, 10, 22), 'message': 'Update VThread alive check to check continuation state\n\nCheck if the continuation is finished to determine more accurately\nif a virtual thread is alive.\n\nRelated: https://github.com/eclipse-openj9/openj9/issues/18738#issuecomment-2218824062\n\nSigned-off-by: Jack Lu <Jack.S.Lu@ibm.com>\n', 'parents': ['cc3ddb896c24d2e3931b1e833badf74050bcd939'], 'files_changed': ['runtime/jvmti/jvmtiHelpers.cpp'], 'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9, 'file_stats': {'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 330, 'recent_experience': 2}
2025-04-10 05:25:40,103 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,104 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,104 - __main__ - INFO - Commit Info 
{'hash': 'b2674c2d74382482f98a3445e32655a27ca5d6ca', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 2, 24, 8), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 2, 24, 8), 'message': 'Merge pull request #19866 from keithc-ca/jfr_new_delete\n\nInline VM_JFRConstantPoolTypes into VM_JFRChunkWriter', 'parents': ['79f9d1c662d87a56003af6b9fdcb0583bd292c78', '2a1ae31e90942ff083a781f3d0aaf32e375f7851'], 'files_changed': ['runtime/vm/BufferWriter.hpp', 'runtime/vm/JFRChunkWriter.cpp', 'runtime/vm/JFRChunkWriter.hpp'], 'lines_added': 175, 'lines_deleted': 174, 'lines_changed': 349, 'file_stats': {'runtime/vm/BufferWriter.hpp': {'lines_added': 28, 'lines_deleted': 31, 'lines_changed': 59}, 'runtime/vm/JFRChunkWriter.cpp': {'lines_added': 61, 'lines_deleted': 61, 'lines_changed': 122}, 'runtime/vm/JFRChunkWriter.hpp': {'lines_added': 86, 'lines_deleted': 82, 'lines_changed': 168}}, 'subsystems': {'runtime'}, 'entropy': 1.4713376040840003, 'author_experience': 675, 'recent_experience': 24}
2025-04-10 05:25:40,105 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,106 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,107 - __main__ - INFO - Commit Info 
{'hash': '79f9d1c662d87a56003af6b9fdcb0583bd292c78', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 1, 29, 28), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 1, 29, 28), 'message': 'Merge pull request #19826 from Deigue/test-nojvmtiexport\n\nAdd Open XL equivalent for EXPORTALL in jvmtitests', 'parents': ['ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535', '0ba67381545ba81b41bfaa04b3677d2b8b00901f'], 'files_changed': ['runtime/tests/jvmtitests/agent/CMakeLists.txt', 'runtime/tests/jvmtitests/src/CMakeLists.txt'], 'lines_added': 10, 'lines_deleted': 3, 'lines_changed': 13, 'file_stats': {'runtime/tests/jvmtitests/agent/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 2, 'lines_changed': 7}, 'runtime/tests/jvmtitests/src/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.9957274520849256, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 05:25:40,107 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,108 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,109 - __main__ - INFO - Commit Info 
{'hash': 'fba3bfe9ef06509646e8f3cd520de51c6a3069c6', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 6, 19, 8, 14, 4), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 0, 25, 17), 'message': 'Update formatting in jvmtiObject.c to follow coding standards\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 46, 'lines_deleted': 48, 'lines_changed': 94, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 46, 'lines_deleted': 48, 'lines_changed': 94}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 05:25:40,110 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,110 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,110 - __main__ - INFO - Commit Info 
{'hash': 'ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535', 'author': 'Babneet Singh <babsingh@users.noreply.github.com>', 'author_name': 'Babneet Singh', 'author_email': 'babsingh@users.noreply.github.com', 'authored_date': datetime.datetime(2024, 7, 18, 23, 49, 4), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 23, 49, 4), 'message': 'Merge pull request #19873 from keithc-ca/jvmti\n\nMove new messages to the end of jvmti.nls', 'parents': ['679e18300d742b857dfead7a6f86650ab4ed1a06', 'b20800d7deacf77a1604ebe5456db0a09bea802d'], 'files_changed': ['runtime/nls/j9ti/jvmti.nls'], 'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14, 'file_stats': {'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 196, 'recent_experience': 6}
2025-04-10 05:25:40,110 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,110 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,110 - __main__ - INFO - Commit Info 
{'hash': '679e18300d742b857dfead7a6f86650ab4ed1a06', 'author': 'Henry Zongaro <zongaro@ca.ibm.com>', 'author_name': 'Henry Zongaro', 'author_email': 'zongaro@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 23, 3, 34), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 23, 3, 34), 'message': 'Merge pull request #19856 from cjjdespres/fix-j9node-assert\n\nUpdate _unionPropertyA assert', 'parents': ['129082feb8707adf77052326e45a89a572aedd81', '04930aa4a131fe0488464402e2256406de036cfe'], 'files_changed': ['runtime/compiler/il/J9Node.cpp'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/compiler/il/J9Node.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 273, 'recent_experience': 14}
2025-04-10 05:25:40,110 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,110 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,116 - __main__ - INFO - Commit Info 
{'hash': '129082feb8707adf77052326e45a89a572aedd81', 'author': "Irwin D'Souza <dsouzai.gh@gmail.com>", 'author_name': "Irwin D'Souza", 'author_email': 'dsouzai.gh@gmail.com', 'authored_date': datetime.datetime(2024, 7, 18, 22, 36, 32), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 22, 36, 32), 'message': 'Merge pull request #19863 from mpirvu/gcr\n\nDo not look at JIT startup state for turning GCR on/off', 'parents': ['c0c18a98615075600562d3b3ec88d04dcc8c7d6e', '2e4a07017417b887c5dfb6530305a41ba27199b8'], 'files_changed': ['runtime/compiler/control/HookedByTheJit.cpp'], 'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26, 'file_stats': {'runtime/compiler/control/HookedByTheJit.cpp': {'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 730, 'recent_experience': 18}
2025-04-10 05:25:40,117 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,117 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,117 - __main__ - INFO - Commit Info 
{'hash': 'c0c18a98615075600562d3b3ec88d04dcc8c7d6e', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 22, 26, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 22, 26, 51), 'message': 'Merge pull request #19847 from cjjdespres/send-cached-hash\n\nSend cached J9ROMClass hashes to JITServer', 'parents': ['c70cb5d2ded6cc888e8ae6b0c3534966c20b6c37', '3a50aeb25d3cd5fa9dfc7a9f9682e6d35d870fb1'], 'files_changed': ['runtime/compiler/control/JITServerCompilationThread.cpp', 'runtime/compiler/control/JITServerHelpers.cpp', 'runtime/compiler/control/JITServerHelpers.hpp', 'runtime/compiler/net/CommunicationStream.hpp', 'runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp'], 'lines_added': 88, 'lines_deleted': 41, 'lines_changed': 129, 'file_stats': {'runtime/compiler/control/JITServerCompilationThread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/control/JITServerHelpers.cpp': {'lines_added': 17, 'lines_deleted': 8, 'lines_changed': 25}, 'runtime/compiler/control/JITServerHelpers.hpp': {'lines_added': 3, 'lines_deleted': 2, 'lines_changed': 5}, 'runtime/compiler/net/CommunicationStream.hpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 38, 'lines_deleted': 26, 'lines_changed': 64}, 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp': {'lines_added': 21, 'lines_deleted': 0, 'lines_changed': 21}, 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp': {'lines_added': 3, 'lines_deleted': 1, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 2.1589426732747357, 'author_experience': 1271, 'recent_experience': 37}
2025-04-10 05:25:40,117 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,117 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,117 - __main__ - INFO - Commit Info 
{'hash': 'b20800d7deacf77a1604ebe5456db0a09bea802d', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 21, 55, 48), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 21, 55, 48), 'message': 'Move new messages to the end of jvmti.nls\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['c70cb5d2ded6cc888e8ae6b0c3534966c20b6c37'], 'files_changed': ['runtime/nls/j9ti/jvmti.nls'], 'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14, 'file_stats': {'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 05:25:40,117 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,117 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,117 - __main__ - INFO - Commit Info 
{'hash': '4b9cac2d8285c59ab5fba7ef1b93ae9083805cc3', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 6, 26, 20, 24, 34), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 20, 39, 23), 'message': 'Increase portability in AOT cache records\n\nInstead of having an AOTCacheListRecord class from which the\nAOTCacheClassChainRecord and AOTCacheWellKnownClassesRecord classes are\nderived, those classes now derive from the base AOTCacheRecord class and\ndeclare their own methods separately.\n\nThe previous class inheritance structure was not portable; both clang\nand gcc support the non-standard flexible array member extension, but\nonly gcc supports deriving from classes with a flexible array\nmember (under certain circumstances).\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n', 'parents': ['deb57b937e63263db6146720ef87ce7a12e29e57'], 'files_changed': ['runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTCache.hpp', 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp'], 'lines_added': 92, 'lines_deleted': 55, 'lines_changed': 147, 'file_stats': {'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 45, 'lines_deleted': 17, 'lines_changed': 62}, 'runtime/compiler/runtime/JITServerAOTCache.hpp': {'lines_added': 45, 'lines_deleted': 36, 'lines_changed': 81}, 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 1.1405701579136374, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 05:25:40,117 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,117 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,117 - __main__ - INFO - Commit Info 
{'hash': 'deb57b937e63263db6146720ef87ce7a12e29e57', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 6, 27, 2, 3, 29), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 20, 11), 'message': "Make AOTCacheRecord::setSubrecordPointers protected\n\nThis works around a bug in clang. Without this, the invocation of\nsetSubrecordPointers in the AOTCacheRecord::readRecord<> template method\nfails; clang complains that setSubrecordPointers is a private method of\nAOTCacheRecord. This shouldn't matter at all, as a method of\nAOTCacheRecord ought to be able to call the private methods of the\nAOTCacheRecord class itself, but clang issues an erroneous access error\nanyway.\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n", 'parents': ['d2b02cf3c7ae4a88c0d8a73e0bf7d7cb3418f954'], 'files_changed': ['runtime/compiler/runtime/JITServerAOTCache.hpp'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/compiler/runtime/JITServerAOTCache.hpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 05:25:40,117 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,117 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,117 - __main__ - INFO - Commit Info 
{'hash': 'c70cb5d2ded6cc888e8ae6b0c3534966c20b6c37', 'author': 'Babneet Singh <babsingh@users.noreply.github.com>', 'author_name': 'Babneet Singh', 'author_email': 'babsingh@users.noreply.github.com', 'authored_date': datetime.datetime(2024, 7, 18, 19, 43), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 19, 43), 'message': 'Merge pull request #19855 from thallium/clear-tls-after-callback\n\nDestroy virtual thread data after VirtualThreadEnd callback', 'parents': ['0e944e75c874f243f8f14c402ea8f268bf5e78b7', '73fd01800e1ad42629d72122561d512b2ab0a939'], 'files_changed': ['runtime/include/ibmjvmti.h', 'runtime/j9vm/javanextvmi.cpp', 'runtime/jvmti/jvmtiExtensionMechanism.c', 'runtime/jvmti/jvmtiHelpers.cpp', 'runtime/jvmti/jvmtiHook.c', 'runtime/nls/j9ti/jvmti.nls', 'runtime/oti/j9consts.h', 'runtime/oti/j9vm.hdf', 'runtime/oti/jvmtiInternal.h'], 'lines_added': 36, 'lines_deleted': 3, 'lines_changed': 39, 'file_stats': {'runtime/include/ibmjvmti.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/j9vm/javanextvmi.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiExtensionMechanism.c': {'lines_added': 12, 'lines_deleted': 0, 'lines_changed': 12}, 'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiHook.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/oti/j9vm.hdf': {'lines_added': 10, 'lines_deleted': 0, 'lines_changed': 10}, 'runtime/oti/jvmtiInternal.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 2.5702659262486396, 'author_experience': 196, 'recent_experience': 6}
2025-04-10 05:25:40,117 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,117 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,117 - __main__ - INFO - Commit Info 
{'hash': '3a50aeb25d3cd5fa9dfc7a9f9682e6d35d870fb1', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 7, 11, 0, 1, 10), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 0, 31, 9), 'message': 'Send cached J9ROMClass hashes to JITServer\n\nIf a JITServer client has a cached hash for a ROMClass, it may now send\nthis hash to the server to avoid the server having to re-hash (and\npossibly re-pack) the ROMClass received from the client. The server will\nstore this cached hash in its shared ROMClass cache. Currently, only the\nstored hashes of generated classes are sent to the server.\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n', 'parents': ['d2b02cf3c7ae4a88c0d8a73e0bf7d7cb3418f954'], 'files_changed': ['runtime/compiler/control/JITServerCompilationThread.cpp', 'runtime/compiler/control/JITServerHelpers.cpp', 'runtime/compiler/control/JITServerHelpers.hpp', 'runtime/compiler/net/CommunicationStream.hpp', 'runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp'], 'lines_added': 88, 'lines_deleted': 41, 'lines_changed': 129, 'file_stats': {'runtime/compiler/control/JITServerCompilationThread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/control/JITServerHelpers.cpp': {'lines_added': 17, 'lines_deleted': 8, 'lines_changed': 25}, 'runtime/compiler/control/JITServerHelpers.hpp': {'lines_added': 3, 'lines_deleted': 2, 'lines_changed': 5}, 'runtime/compiler/net/CommunicationStream.hpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 38, 'lines_deleted': 26, 'lines_changed': 64}, 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp': {'lines_added': 21, 'lines_deleted': 0, 'lines_changed': 21}, 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp': {'lines_added': 3, 'lines_deleted': 1, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 2.1589426732747357, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 05:25:40,133 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,133 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,133 - __main__ - INFO - Commit Info 
{'hash': '04930aa4a131fe0488464402e2256406de036cfe', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 7, 11, 20, 54, 53), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 0, 1, 20), 'message': "Update _unionPropertyA assert\n\nIf hasPinningArrayPointer() is true for the Node, but the Node is using\nthe node extension to record the array pointer\n(supportsPinningArrayPointerInNodeExtension() is true), then it's not\nusing the UnionPropertyA field to record that information. In that case,\nit's not a potentially conflicting use of the _unionPropertyA field.\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n", 'parents': ['d2b02cf3c7ae4a88c0d8a73e0bf7d7cb3418f954'], 'files_changed': ['runtime/compiler/il/J9Node.cpp'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/compiler/il/J9Node.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 05:25:40,133 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,133 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,133 - __main__ - INFO - Commit Info 
{'hash': '73fd01800e1ad42629d72122561d512b2ab0a939', 'author': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'author_name': 'Gengchen Tuo', 'author_email': 'gengchen.tuo@ibm.com', 'authored_date': datetime.datetime(2024, 7, 16, 19, 12, 45), 'committer': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 17, 23, 53, 21), 'message': 'Add JVMTI VirtualThreadDestroy Event\n\nCurrently destroyThreadData() is hooked onto the VirtualThreadEnd event\nwhich is called before the event callback. In JDWP, the agent uses TLS\nto associate nodes in the running thread list. Clearing TLS before\nthe event callback makes the agent lose track of the node thus failed to\nremove existed virtual threads from the list. This commit adds JVMTI\nVirtualThreadDestroy event which is triggered after VirtualThreadEnd and\njvmtiHookVirtualThreadDestroy() is hooked onto VirtualThreadDestroy\nevent.\n\nFixes:\nhttps://github.com/ibmruntimes/Semeru-Runtimes/issues/80\nhttps://github.com/eclipse-openj9/openj9/issues/19759\n\nSigned-off-by: Gengchen Tuo <gengchen.tuo@ibm.com>\n', 'parents': ['0e944e75c874f243f8f14c402ea8f268bf5e78b7'], 'files_changed': ['runtime/include/ibmjvmti.h', 'runtime/j9vm/javanextvmi.cpp', 'runtime/jvmti/jvmtiExtensionMechanism.c', 'runtime/jvmti/jvmtiHelpers.cpp', 'runtime/jvmti/jvmtiHook.c', 'runtime/nls/j9ti/jvmti.nls', 'runtime/oti/j9consts.h', 'runtime/oti/j9vm.hdf', 'runtime/oti/jvmtiInternal.h'], 'lines_added': 36, 'lines_deleted': 3, 'lines_changed': 39, 'file_stats': {'runtime/include/ibmjvmti.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/j9vm/javanextvmi.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiExtensionMechanism.c': {'lines_added': 12, 'lines_deleted': 0, 'lines_changed': 12}, 'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiHook.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/oti/j9vm.hdf': {'lines_added': 10, 'lines_deleted': 0, 'lines_changed': 10}, 'runtime/oti/jvmtiInternal.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 2.5702659262486396, 'author_experience': 86, 'recent_experience': 0}
2025-04-10 05:25:40,133 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,133 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,133 - __main__ - INFO - Commit Info 
{'hash': '2a1ae31e90942ff083a781f3d0aaf32e375f7851', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 12, 3, 0, 16), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 17, 22, 11, 38), 'message': 'Inline VM_JFRConstantPoolTypes into VM_JFRChunkWriter\n\n* avoid using new/delete so libstdc++.so is not needed at runtime\n\n* tidy up\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['bb41a039ea15b5b862416d39fac00365642cbffd'], 'files_changed': ['runtime/vm/BufferWriter.hpp', 'runtime/vm/JFRChunkWriter.cpp', 'runtime/vm/JFRChunkWriter.hpp'], 'lines_added': 175, 'lines_deleted': 174, 'lines_changed': 349, 'file_stats': {'runtime/vm/BufferWriter.hpp': {'lines_added': 28, 'lines_deleted': 31, 'lines_changed': 59}, 'runtime/vm/JFRChunkWriter.cpp': {'lines_added': 61, 'lines_deleted': 61, 'lines_changed': 122}, 'runtime/vm/JFRChunkWriter.hpp': {'lines_added': 86, 'lines_deleted': 82, 'lines_changed': 168}}, 'subsystems': {'runtime'}, 'entropy': 1.4713376040840003, 'author_experience': 2221, 'recent_experience': 74}
2025-04-10 05:25:40,133 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,133 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,133 - __main__ - INFO - Commit Info 
{'hash': '2e4a07017417b887c5dfb6530305a41ba27199b8', 'author': 'Marius <mpirvu@ca.ibm.com>', 'author_name': 'Marius', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 16, 21, 27, 21), 'committer': 'Marius <mpirvu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 16, 21, 41, 38), 'message': 'Do not look at JIT startup state for turning GCR on/off\n\nIf the JVM is in JITServer client mode, GCR counting will be\nenabled even during JIT startup phases (but not during JVM startup\nphase which only happens once). This allows GCR recompilations\nto happen sooner, improving rampup. In client mode there is a\nlesser risk that GCR recompilation overhead will impact the\nthroughput of the JVM.\nThis change can be overridden by using the following environment\nvariable:\nexport TR_LookAtJitStateForGCREnablement=1\n\nSigned-off-by: Marius <mpirvu@ca.ibm.com>\n', 'parents': ['f98185a57363e5d3c7768a0612f2a4b388bc76fc'], 'files_changed': ['runtime/compiler/control/HookedByTheJit.cpp'], 'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26, 'file_stats': {'runtime/compiler/control/HookedByTheJit.cpp': {'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 14, 'recent_experience': 38}
2025-04-10 05:25:40,133 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 05:25:40,133 - __main__ - WARNING - This will result in empty report details
2025-04-10 05:25:40,133 - __main__ - INFO - Commit Info 
{'hash': '0ba67381545ba81b41bfaa04b3677d2b8b00901f', 'author': 'Gaurav Chaudhari <gaurav.chaudhari@ibm.com>', 'author_name': 'Gaurav Chaudhari', 'author_email': 'gaurav.chaudhari@ibm.com', 'authored_date': datetime.datetime(2024, 7, 5, 20, 46, 6), 'committer': 'Gaurav Chaudhari <gaurav.chaudhari@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 11, 21, 34, 14), 'message': 'Add Open XL equivalent for EXPORTALL in jvmtitests\n\nHaving confirmed that exporting symbols is required for jvmtitests,\nthis change adds an Open XL conditional for the flag EXPORTALL\n(-fvisibility=default).\n\nSigned-off-by: Gaurav Chaudhari <gaurav.chaudhari@ibm.com>\n', 'parents': ['dd108dba6ae99ce85411f98ae652a306603a2011'], 'files_changed': ['runtime/tests/jvmtitests/agent/CMakeLists.txt', 'runtime/tests/jvmtitests/src/CMakeLists.txt'], 'lines_added': 10, 'lines_deleted': 3, 'lines_changed': 13, 'file_stats': {'runtime/tests/jvmtitests/agent/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 2, 'lines_changed': 7}, 'runtime/tests/jvmtitests/src/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.9957274520849256, 'author_experience': 12, 'recent_experience': 2}
2025-04-10 05:25:40,149 - main - INFO - Results written to ./reports/openj9_results.html
2025-04-10 05:25:40,150 - main - INFO - CommitHunter completed successfully
2025-04-10 06:02:42,539 - root - INFO - Logging system initialized
2025-04-10 06:02:42,539 - main - INFO - Starting CommitHunter
2025-04-10 06:02:42,539 - main - INFO - Repository: https://github.com/eclipse/openj9
2025-04-10 06:02:42,539 - main - INFO - Good commit: 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:02:42,539 - main - INFO - Bad commit: eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 06:02:42,539 - main - INFO - No test results directory specified, creating sample test results
2025-04-10 06:02:43,692 - collectors.test_collector - INFO - Test collector initialized for test-results
2025-04-10 06:02:43,696 - analyzers.string_matcher - INFO - String matcher initialized with 23 suspicious patterns
2025-04-10 06:02:43,696 - analyzers.perf_analyzer - INFO - Performance analyzer initialized
2025-04-10 06:02:43,696 - main - INFO - Testing test result extraction
2025-04-10 06:02:43,696 - collectors.test_collector - INFO - Getting test results for all tests
2025-04-10 06:02:43,696 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 06:02:43,700 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 06:02:43,700 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 06:02:43,701 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 06:02:43,702 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 06:02:43,703 - collectors.test_collector - INFO - Parsing JUnit XML file: test-results\junit-results.xml
2025-04-10 06:02:43,704 - collectors.test_collector - INFO - Extracted error: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Extracted failure: Expected value was 42 but got null
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 06:02:43,705 - main - INFO - Found test results: {
  "test_name": "unknown",
  "status": "failed",
  "error_message": "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
  "error_type": "",
  "stack_trace": "",
  "failure_summary": {
    "exceptions": [],
    "assertion_failures": [],
    "error_messages": [
      "Cannot invoke \"org.openj9.IProfiler.getResult()\" because \"profiler\" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)",
      "Expected value was 42 but got null: at com.example.TestClass.testFailure(TestClass.java:123)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)"
    ],
    "stack_traces": [],
    "file_references": [],
    "components": [],
    "most_common_errors": {}
  },
  "file_references": [],
  "components": [],
  "timestamp": "2025-04-10T06:02:43.705114"
}
2025-04-10 06:02:43,705 - main - INFO - Extracted error message: Cannot invoke "org.openj9.IProfiler.getResult()" because "profiler" is null: at org.openj9.TestProfiler.testMethod(TestProfiler.java:45)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
2025-04-10 06:02:43,705 - main - INFO - Using OpenJ9-specific analysis
2025-04-10 06:02:43,705 - __main__ - INFO - Processing OpenJ9 issue between 96ef5c5b and eac681f0
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Processing OpenJ9 issue #12345 between 96ef5c5b and eac681f0
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Looking for test result files in test-results
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Found 1 files matching pattern **/*.xml
2025-04-10 06:02:43,705 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.json
2025-04-10 06:02:43,710 - collectors.test_collector - INFO - Found 0 files matching pattern **/*.txt
2025-04-10 06:02:43,710 - collectors.test_collector - INFO - Found test result file: test-results\junit-results.xml
2025-04-10 06:02:43,711 - collectors.test_collector - INFO - Parsed test result: junit-results.xml with 0 tests
2025-04-10 06:02:43,712 - collectors.test_collector - INFO - Collected 1 test result sets in 0.01 seconds
2025-04-10 06:02:43,712 - collectors.test_collector - INFO - Analyzing OpenJ9 test failure: unknown
2025-04-10 06:02:43,713 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 06:02:43,880 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:02:57,358 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 06:02:57,461 - collectors.test_collector - INFO - Classifying commit 96ef5c5b for test failure
2025-04-10 06:02:57,556 - collectors.test_collector - INFO - Classifying commit 7c8005e1 for test failure
2025-04-10 06:02:57,667 - collectors.test_collector - INFO - Classifying commit 8d929fec for test failure
2025-04-10 06:02:57,777 - collectors.test_collector - INFO - Classifying commit 2845176f for test failure
2025-04-10 06:02:57,885 - collectors.test_collector - INFO - Classifying commit a0b34799 for test failure
2025-04-10 06:02:57,999 - collectors.test_collector - INFO - Classifying commit 27dac39d for test failure
2025-04-10 06:02:58,221 - collectors.test_collector - INFO - Classifying commit def4a30a for test failure
2025-04-10 06:02:58,334 - collectors.test_collector - INFO - Classifying commit c2af1fed for test failure
2025-04-10 06:02:58,457 - collectors.test_collector - INFO - Classifying commit 18c16409 for test failure
2025-04-10 06:02:58,583 - collectors.test_collector - INFO - Classifying commit 00d08779 for test failure
2025-04-10 06:02:58,700 - collectors.test_collector - INFO - Classifying commit 51128c1d for test failure
2025-04-10 06:02:58,822 - collectors.test_collector - INFO - Classifying commit 4fc9a456 for test failure
2025-04-10 06:02:58,929 - collectors.test_collector - INFO - Classifying commit a6363210 for test failure
2025-04-10 06:02:59,030 - collectors.test_collector - INFO - Classifying commit 5b6168a9 for test failure
2025-04-10 06:02:59,132 - collectors.test_collector - INFO - Classifying commit 0b32a259 for test failure
2025-04-10 06:02:59,347 - collectors.test_collector - INFO - Classifying commit 9a15c735 for test failure
2025-04-10 06:02:59,450 - collectors.test_collector - INFO - Classifying commit 07797d6f for test failure
2025-04-10 06:02:59,558 - collectors.test_collector - INFO - Classifying commit 90ac2bf1 for test failure
2025-04-10 06:02:59,659 - collectors.test_collector - INFO - Classifying commit abdb2aa8 for test failure
2025-04-10 06:02:59,768 - collectors.test_collector - INFO - Classifying commit a5c3757b for test failure
2025-04-10 06:02:59,868 - collectors.test_collector - INFO - Classifying commit 9574f689 for test failure
2025-04-10 06:02:59,984 - collectors.test_collector - INFO - Classifying commit 2cfd7244 for test failure
2025-04-10 06:03:00,098 - collectors.test_collector - INFO - Classifying commit 6c5f2b35 for test failure
2025-04-10 06:03:00,328 - collectors.test_collector - INFO - Classifying commit ad9620c3 for test failure
2025-04-10 06:03:00,451 - collectors.test_collector - INFO - Classifying commit c792e991 for test failure
2025-04-10 06:03:00,584 - collectors.test_collector - INFO - Classifying commit ae0b2371 for test failure
2025-04-10 06:03:00,728 - collectors.test_collector - INFO - Classifying commit 71f9ccfc for test failure
2025-04-10 06:03:00,865 - collectors.test_collector - INFO - Classifying commit a3a09742 for test failure
2025-04-10 06:03:01,098 - collectors.test_collector - INFO - Classifying commit 860fd146 for test failure
2025-04-10 06:03:01,208 - collectors.test_collector - INFO - Classifying commit 70aac1f2 for test failure
2025-04-10 06:03:01,308 - collectors.test_collector - INFO - Classifying commit bd018c01 for test failure
2025-04-10 06:03:01,426 - collectors.test_collector - INFO - Classifying commit 3b3874e2 for test failure
2025-04-10 06:03:01,566 - collectors.test_collector - INFO - Classifying commit 17894a56 for test failure
2025-04-10 06:03:01,784 - collectors.test_collector - INFO - Classifying commit 3f48ea98 for test failure
2025-04-10 06:03:01,933 - collectors.test_collector - INFO - Classifying commit 0362cb32 for test failure
2025-04-10 06:03:02,041 - collectors.test_collector - INFO - Classifying commit dd27fc0d for test failure
2025-04-10 06:03:02,151 - collectors.test_collector - INFO - Classifying commit 48f557e4 for test failure
2025-04-10 06:03:02,409 - collectors.test_collector - INFO - Classifying commit c5b3b092 for test failure
2025-04-10 06:03:02,523 - collectors.test_collector - INFO - Classifying commit d98e1e5c for test failure
2025-04-10 06:03:02,621 - collectors.test_collector - INFO - Classifying commit 97d0bb70 for test failure
2025-04-10 06:03:02,734 - collectors.test_collector - INFO - Classifying commit 4d506fd4 for test failure
2025-04-10 06:03:02,882 - collectors.test_collector - INFO - Classifying commit 8e7895ff for test failure
2025-04-10 06:03:03,019 - collectors.test_collector - INFO - Classifying commit 01f287ca for test failure
2025-04-10 06:03:03,245 - collectors.test_collector - INFO - Classifying commit 487b005e for test failure
2025-04-10 06:03:03,349 - collectors.test_collector - INFO - Classifying commit 5dbfd876 for test failure
2025-04-10 06:03:03,450 - collectors.test_collector - INFO - Classifying commit 8805cc27 for test failure
2025-04-10 06:03:03,568 - collectors.test_collector - INFO - Classifying commit b6760a14 for test failure
2025-04-10 06:03:03,683 - collectors.test_collector - INFO - Classifying commit e4bf5c1e for test failure
2025-04-10 06:03:03,801 - collectors.test_collector - INFO - Classifying commit 3f3d51f3 for test failure
2025-04-10 06:03:03,914 - collectors.test_collector - INFO - Classifying commit 9142f7eb for test failure
2025-04-10 06:03:04,019 - collectors.test_collector - INFO - Classifying commit f3d33e83 for test failure
2025-04-10 06:03:04,135 - collectors.test_collector - INFO - Classifying commit d65b5fe5 for test failure
2025-04-10 06:03:04,377 - collectors.test_collector - INFO - Classifying commit d776a4a4 for test failure
2025-04-10 06:03:04,485 - collectors.test_collector - INFO - Classifying commit 876f013c for test failure
2025-04-10 06:03:04,600 - collectors.test_collector - INFO - Classifying commit 157a0ef2 for test failure
2025-04-10 06:03:04,719 - collectors.test_collector - INFO - Classifying commit 40c65378 for test failure
2025-04-10 06:03:04,834 - collectors.test_collector - INFO - Classifying commit b4719f8d for test failure
2025-04-10 06:03:05,030 - collectors.test_collector - INFO - Classifying commit eac4b61c for test failure
2025-04-10 06:03:05,193 - collectors.test_collector - INFO - Classifying commit 200b783f for test failure
2025-04-10 06:03:05,301 - collectors.test_collector - INFO - Classifying commit badec667 for test failure
2025-04-10 06:03:05,411 - collectors.test_collector - INFO - Classifying commit 9d601051 for test failure
2025-04-10 06:03:05,517 - collectors.test_collector - INFO - Classifying commit 0076e93a for test failure
2025-04-10 06:03:05,635 - collectors.test_collector - INFO - Classifying commit 5e3816d3 for test failure
2025-04-10 06:03:05,768 - collectors.test_collector - INFO - Classifying commit 4cffe9c3 for test failure
2025-04-10 06:03:05,884 - collectors.test_collector - INFO - Classifying commit d1aaa914 for test failure
2025-04-10 06:03:06,020 - collectors.test_collector - INFO - Classifying commit 7a309afe for test failure
2025-04-10 06:03:06,140 - collectors.test_collector - INFO - Classifying commit 313a00c9 for test failure
2025-04-10 06:03:06,393 - collectors.test_collector - INFO - Classifying commit ff51db6a for test failure
2025-04-10 06:03:06,508 - collectors.test_collector - INFO - Classifying commit 1ed9c082 for test failure
2025-04-10 06:03:06,617 - collectors.test_collector - INFO - Classifying commit 312c8246 for test failure
2025-04-10 06:03:06,734 - collectors.test_collector - INFO - Classifying commit 015b58dd for test failure
2025-04-10 06:03:06,868 - collectors.test_collector - INFO - Classifying commit 7affcea2 for test failure
2025-04-10 06:03:06,983 - collectors.test_collector - INFO - Classifying commit 578e8369 for test failure
2025-04-10 06:03:07,084 - collectors.test_collector - INFO - Classifying commit 95a69485 for test failure
2025-04-10 06:03:07,206 - collectors.test_collector - INFO - Classifying commit c2723578 for test failure
2025-04-10 06:03:07,331 - collectors.test_collector - INFO - Classifying commit 323b8b99 for test failure
2025-04-10 06:03:07,480 - collectors.test_collector - INFO - Classifying commit 3be60c0a for test failure
2025-04-10 06:03:07,758 - collectors.test_collector - INFO - Classifying commit 4ce1a43f for test failure
2025-04-10 06:03:07,900 - collectors.test_collector - INFO - Classifying commit 08e67ec7 for test failure
2025-04-10 06:03:08,024 - collectors.test_collector - INFO - Classifying commit 5b2a0713 for test failure
2025-04-10 06:03:08,131 - collectors.test_collector - INFO - Classifying commit 881038df for test failure
2025-04-10 06:03:08,239 - collectors.test_collector - INFO - Classifying commit aeef1385 for test failure
2025-04-10 06:03:08,477 - collectors.test_collector - INFO - Classifying commit 865b5754 for test failure
2025-04-10 06:03:08,585 - collectors.test_collector - INFO - Classifying commit ab58e586 for test failure
2025-04-10 06:03:08,684 - collectors.test_collector - INFO - Classifying commit 8ef7ddb4 for test failure
2025-04-10 06:03:08,791 - collectors.test_collector - INFO - Classifying commit b14cd71e for test failure
2025-04-10 06:03:08,901 - collectors.test_collector - INFO - Classifying commit b2674c2d for test failure
2025-04-10 06:03:09,000 - collectors.test_collector - INFO - Classifying commit 79f9d1c6 for test failure
2025-04-10 06:03:09,108 - collectors.test_collector - INFO - Classifying commit fba3bfe9 for test failure
2025-04-10 06:03:09,215 - collectors.test_collector - INFO - Classifying commit ab1ec9a1 for test failure
2025-04-10 06:03:09,321 - collectors.test_collector - INFO - Classifying commit 679e1830 for test failure
2025-04-10 06:03:09,437 - collectors.test_collector - INFO - Classifying commit 129082fe for test failure
2025-04-10 06:03:09,549 - collectors.test_collector - INFO - Classifying commit c0c18a98 for test failure
2025-04-10 06:03:09,685 - collectors.test_collector - INFO - Classifying commit b20800d7 for test failure
2025-04-10 06:03:09,932 - collectors.test_collector - INFO - Classifying commit 4b9cac2d for test failure
2025-04-10 06:03:10,033 - collectors.test_collector - INFO - Classifying commit deb57b93 for test failure
2025-04-10 06:03:10,144 - collectors.test_collector - INFO - Classifying commit c70cb5d2 for test failure
2025-04-10 06:03:10,245 - collectors.test_collector - INFO - Classifying commit 3a50aeb2 for test failure
2025-04-10 06:03:10,371 - collectors.test_collector - INFO - Classifying commit 04930aa4 for test failure
2025-04-10 06:03:10,481 - collectors.test_collector - INFO - Classifying commit 73fd0180 for test failure
2025-04-10 06:03:10,595 - collectors.test_collector - INFO - Classifying commit 2a1ae31e for test failure
2025-04-10 06:03:10,699 - collectors.test_collector - INFO - Classifying commit 2e4a0701 for test failure
2025-04-10 06:03:10,817 - collectors.test_collector - INFO - Classifying commit 0ba67381 for test failure
2025-04-10 06:03:10,817 - __main__ - INFO - Running binary search for test 'org.openj9.test.jit.Test_Arithmetics'
2025-04-10 06:03:10,817 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 06:03:10,901 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:03:25,174 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 06:03:25,174 - collectors.git_collector - INFO - Checking out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:03:26,261 - collectors.git_collector - INFO - Successfully checked out commit 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:03:26,261 - collectors.test_collector - INFO - Running test 'org.openj9.test.jit.Test_Arithmetics' in full mode
2025-04-10 06:03:26,261 - collectors.test_collector - WARNING - Could not determine test command for 'org.openj9.test.jit.Test_Arithmetics'
2025-04-10 06:03:26,261 - collectors.test_collector - WARNING - Could not determine how to run test 'org.openj9.test.jit.Test_Arithmetics'
2025-04-10 06:03:26,261 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 06:03:26,373 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:03:40,775 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 06:03:40,775 - collectors.git_collector - INFO - Getting commits between 96ef5c5b4026552ec5d6f0413d034cf09ba7103f and eac681f0cee21af67657f575a366590b937a2a13
2025-04-10 06:03:40,855 - collectors.git_collector - INFO - Analyzing commits from eac681f0cee21af67657f575a366590b937a2a13 to 96ef5c5b4026552ec5d6f0413d034cf09ba7103f
2025-04-10 06:03:54,639 - collectors.git_collector - INFO - Found 103 commits
2025-04-10 06:03:54,639 - __main__ - INFO - Retrieved 103 commits between 96ef5c5b and eac681f0
2025-04-10 06:03:54,639 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,639 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,639 - __main__ - INFO - Commit Info 
{'hash': '96ef5c5b4026552ec5d6f0413d034cf09ba7103f', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 7, 22, 42, 10), 'committer': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 8, 9, 23, 38, 57), 'message': 'Changes for new/delete used by IProfiler\n\nThis commit implements the following changes:\n- `operator new` was defined in every class derived from TR_IPBytecodeHashTableEntry\n   After this commit there will be only one definition of `operator new`\n   provided by the base class TR_IPBytecodeHashTableEntry and all derived\n   classes will use the same definition. The same applies for\n   `operator delete`\n- `operator delete` used to do nothing. After this commit `operator delete`\n   will use the IProfiler persistent memory deallocator to free memory.\n   Note that freed memory goes into a pool, to be reused later.\n- For 64-bit environments, `operator new` used to ensure aligned\n   allocations by adding four bytes the size needed and then rounding up\n   on a 8 byte boundary. This is not needed, because the persistent allocator\n   already makes sure that allocations are 8 byte aligned, so the operator\n   was just wasting memory.\n- TR_IProfiler::findOrCreateEntry() contains a race condition which may\n   lead to a small (and bounded) memory leak. This commit frees the entry\n   that is allocated but later found that is not needed.\n\nSigned-off-by: Marius Pirvu <mpirvu@ca.ibm.com>\n', 'parents': ['7c8005e1ff6614029ce973728ac057cd2fb26abf'], 'files_changed': ['runtime/compiler/runtime/IProfiler.cpp', 'runtime/compiler/runtime/IProfiler.hpp'], 'lines_added': 15, 'lines_deleted': 54, 'lines_changed': 69, 'file_stats': {'runtime/compiler/runtime/IProfiler.cpp': {'lines_added': 9, 'lines_deleted': 38, 'lines_changed': 47}, 'runtime/compiler/runtime/IProfiler.hpp': {'lines_added': 6, 'lines_deleted': 16, 'lines_changed': 22}}, 'subsystems': {'runtime'}, 'entropy': 0.9031161721568719, 'author_experience': 1271, 'recent_experience': 28}
2025-04-10 06:03:54,639 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,639 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,639 - __main__ - INFO - Commit Info 
{'hash': '7c8005e1ff6614029ce973728ac057cd2fb26abf', 'author': 'Rahil Shah <rahil@ca.ibm.com>', 'author_name': 'Rahil Shah', 'author_email': 'rahil@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 7, 22, 14, 30), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 7, 22, 14, 30), 'message': 'Merge pull request #19937 from dchopra001/ffi_zos_structs\n\nAdd support for structs in FFI Upcall on z/OS', 'parents': ['8d929fecab76405ac018de0d4596f229bb012220', '2845176fee827f42115afd4df0f5b9286fa87d4d'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java', 'runtime/oti/FFIUpcallThunkGenHelpers.hpp', 'runtime/vm/mz64/UpcallThunkGen.cpp', 'runtime/vm/xz64/UpcallThunkGen.cpp'], 'lines_added': 635, 'lines_deleted': 322, 'lines_changed': 957, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java': {'lines_added': 0, 'lines_deleted': 4, 'lines_changed': 4}, 'runtime/oti/FFIUpcallThunkGenHelpers.hpp': {'lines_added': 184, 'lines_deleted': 48, 'lines_changed': 232}, 'runtime/vm/mz64/UpcallThunkGen.cpp': {'lines_added': 451, 'lines_deleted': 181, 'lines_changed': 632}, 'runtime/vm/xz64/UpcallThunkGen.cpp': {'lines_added': 0, 'lines_deleted': 89, 'lines_changed': 89}}, 'subsystems': {'jcl', 'runtime'}, 'entropy': 1.2426245407414747, 'author_experience': 144, 'recent_experience': 11}
2025-04-10 06:03:54,655 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,655 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,655 - __main__ - INFO - Commit Info 
{'hash': '8d929fecab76405ac018de0d4596f229bb012220', 'author': "Irwin D'Souza <dsouzai.gh@gmail.com>", 'author_name': "Irwin D'Souza", 'author_email': 'dsouzai.gh@gmail.com', 'authored_date': datetime.datetime(2024, 8, 7, 21, 18, 6), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 7, 21, 18, 6), 'message': 'Merge pull request #19967 from mpirvu/iprofiler_race\n\nMake IProfiler race conditon less likely', 'parents': ['27dac39d2c5b8ea2df7c7e005a5ac0d9eb1f5b9c', 'a0b34799e5b3b9a6a5eccfd1ca394b9a9d80240a'], 'files_changed': ['runtime/compiler/runtime/IProfiler.cpp'], 'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11, 'file_stats': {'runtime/compiler/runtime/IProfiler.cpp': {'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 730, 'recent_experience': 17}
2025-04-10 06:03:54,655 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,658 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,658 - __main__ - INFO - Commit Info 
{'hash': '2845176fee827f42115afd4df0f5b9286fa87d4d', 'author': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'author_name': 'Dhruv Chopra', 'author_email': 'Dhruv.C.Chopra@ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 58, 25), 'committer': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'committed_date': datetime.datetime(2024, 8, 5, 9, 10, 45), 'message': 'Add support for structs in FFI Upcall on z/OS\n\nThis commit completes FFI Upcall functionality support\non z/OS by adding support to handle structs as parameters\nand return types.\n\nSigned-off-by: Dhruv Chopra <Dhruv.C.Chopra@ibm.com>\n', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java', 'runtime/oti/FFIUpcallThunkGenHelpers.hpp', 'runtime/vm/mz64/UpcallThunkGen.cpp', 'runtime/vm/xz64/UpcallThunkGen.cpp'], 'lines_added': 635, 'lines_deleted': 322, 'lines_changed': 957, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/foreign/abi/UpcallLinker.java': {'lines_added': 0, 'lines_deleted': 4, 'lines_changed': 4}, 'runtime/oti/FFIUpcallThunkGenHelpers.hpp': {'lines_added': 184, 'lines_deleted': 48, 'lines_changed': 232}, 'runtime/vm/mz64/UpcallThunkGen.cpp': {'lines_added': 451, 'lines_deleted': 181, 'lines_changed': 632}, 'runtime/vm/xz64/UpcallThunkGen.cpp': {'lines_added': 0, 'lines_deleted': 89, 'lines_changed': 89}}, 'subsystems': {'jcl', 'runtime'}, 'entropy': 1.2426245407414747, 'author_experience': 157, 'recent_experience': 1}
2025-04-10 06:03:54,659 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,660 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,661 - __main__ - INFO - Commit Info 
{'hash': 'a0b34799e5b3b9a6a5eccfd1ca394b9a9d80240a', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 4, 3, 2, 7), 'committer': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 8, 5, 5, 24, 35), 'message': 'Make IProfiler race conditon less likely\n\nInterpreter profiling is uses lockless mechanisms that\nallow for some races to occur. The outcome of these races\nis some small memory leak.\nWhen adding new profiling info to the IProfiler hashtable, we\nfirst determine if an entry with the same pc exists (pc is the key)\nand if not, we allocate memory for a new entry and then add the\nentry to the head of the linked list of the corresponding bucket\nof the IP hashtable. It turns out that allocating memory for a\nnew entry is relatively expensive, and in this window of time\nanother thread could perform the same check, deciding to add\na new entry with the same pc.\nThis commit performs another check just before adding to the\nlinked list of the bucket. This reduces the likelihood of\ntwo threads adding entries with the same pc.\n\nSigned-off-by: Marius Pirvu <mpirvu@ca.ibm.com>\n', 'parents': ['27dac39d2c5b8ea2df7c7e005a5ac0d9eb1f5b9c'], 'files_changed': ['runtime/compiler/runtime/IProfiler.cpp'], 'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11, 'file_stats': {'runtime/compiler/runtime/IProfiler.cpp': {'lines_added': 11, 'lines_deleted': 0, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 1271, 'recent_experience': 32}
2025-04-10 06:03:54,661 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,662 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,662 - __main__ - INFO - Commit Info 
{'hash': '27dac39d2c5b8ea2df7c7e005a5ac0d9eb1f5b9c', 'author': 'Graham Chapman <graham_chapman@ca.ibm.com>', 'author_name': 'Graham Chapman', 'author_email': 'graham_chapman@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 19, 23, 14), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 19, 23, 14), 'message': 'Merge pull request #19949 from IBMJimmyk/FSDfix\n\nAdds FSD check to jitClassRedefineEvent', 'parents': ['def4a30a460112e5d78ce398a0eab65cbf334752', 'ad9620c3405492824867184bd8c7f95c457e06f4'], 'files_changed': ['runtime/util/hshelp.c'], 'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12, 'file_stats': {'runtime/util/hshelp.c': {'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 1029, 'recent_experience': 11}
2025-04-10 06:03:54,662 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,663 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,663 - __main__ - INFO - Commit Info 
{'hash': 'def4a30a460112e5d78ce398a0eab65cbf334752', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 5, 28, 29), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 5, 28, 29), 'message': 'Merge pull request #19957 from thallium/jfr-test-fix\n\nFix cmdLineTester_jfr', 'parents': ['c2af1fedb6e87bf43fc01355c0358616fe7d8a65', '4fc9a45639f11e9c4211ffd86902b560d0ea02c6'], 'files_changed': ['test/functional/cmdLineTests/jfr/build.xml'], 'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5, 'file_stats': {'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 60}
2025-04-10 06:03:54,664 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,665 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,665 - __main__ - INFO - Commit Info 
{'hash': 'c2af1fedb6e87bf43fc01355c0358616fe7d8a65', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 3, 26, 55), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 3, 26, 55), 'message': 'Merge pull request #19958 from eclipse-openj9/revert-17969-offheap-unsafe\n\nRevert "Adjust arguments to Unsafe array operations while offheap is enabled"', 'parents': ['18c16409f772ee7902fa4dc34ff285fc82065c33', '00d08779e99f056ce8502b4d693f498f4e99395a'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 158, 'lines_deleted': 746, 'lines_changed': 904, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 156, 'lines_deleted': 735, 'lines_changed': 891}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 2, 'lines_deleted': 11, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.10860192578701666, 'author_experience': 3908, 'recent_experience': 57}
2025-04-10 06:03:54,666 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,667 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,667 - __main__ - INFO - Commit Info 
{'hash': '18c16409f772ee7902fa4dc34ff285fc82065c33', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 3, 11, 38), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 3, 11, 38), 'message': 'Merge pull request #19938 from theresa-m/invokeinterfacearray\n\nVerification check for invokeinterface receiver', 'parents': ['51128c1de454ed435b74529cf9ae30a5ab1afd98', '9a15c7357f01ea6a78bfd38d5a1d952107d896ac'], 'files_changed': ['runtime/bcverify/rtverify.c'], 'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 21}
2025-04-10 06:03:54,669 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,669 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,669 - __main__ - INFO - Commit Info 
{'hash': '00d08779e99f056ce8502b4d693f498f4e99395a', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 2, 6, 32), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 2, 6, 32), 'message': 'Revert "Adjust arguments to Unsafe array operations while offheap is enabled"\n', 'parents': ['51128c1de454ed435b74529cf9ae30a5ab1afd98'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 158, 'lines_deleted': 746, 'lines_changed': 904, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 156, 'lines_deleted': 735, 'lines_changed': 891}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 2, 'lines_deleted': 11, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.10860192578701666, 'author_experience': 3908, 'recent_experience': 57}
2025-04-10 06:03:54,671 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,671 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,672 - __main__ - INFO - Commit Info 
{'hash': '51128c1de454ed435b74529cf9ae30a5ab1afd98', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 2, 0, 26, 16), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 2, 0, 26, 16), 'message': 'Merge pull request #19956 from keithc-ca/maint\n\nUpdate java.specification.maintenance.version', 'parents': ['5b6168a97a22ae306fab172797749271e36dadfd', 'a6363210964017d960adc0c68ce24487cf3376d2'], 'files_changed': ['runtime/vm/vmprops.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/vm/vmprops.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 3908, 'recent_experience': 57}
2025-04-10 06:03:54,672 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,674 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,674 - __main__ - INFO - Commit Info 
{'hash': '4fc9a45639f11e9c4211ffd86902b560d0ea02c6', 'author': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'author_name': 'Gengchen Tuo', 'author_email': 'gengchen.tuo@ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 23, 14, 27), 'committer': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'committed_date': datetime.datetime(2024, 8, 2, 0, 22, 31), 'message': 'Fix cmdLineTester_jfr\n\nUse include tag instead of filename tag.\nRemove *.mk selector since it does not match any file.\n\nFix: https://github.com/eclipse-openj9/openj9/issues/19950\n\nSigned-off-by: Gengchen Tuo <gengchen.tuo@ibm.com>\n', 'parents': ['5b6168a97a22ae306fab172797749271e36dadfd'], 'files_changed': ['test/functional/cmdLineTests/jfr/build.xml'], 'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5, 'file_stats': {'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 2, 'lines_deleted': 3, 'lines_changed': 5}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 86, 'recent_experience': 0}
2025-04-10 06:03:54,674 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,675 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,675 - __main__ - INFO - Commit Info 
{'hash': 'a6363210964017d960adc0c68ce24487cf3376d2', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 18, 58, 29), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 8, 1, 20, 5, 1), 'message': 'Update java.specification.maintenance.version\n\nTo match the reference implementations.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['07797d6fa2534a2303a73b4781783160a483dee7'], 'files_changed': ['runtime/vm/vmprops.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/vm/vmprops.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 61}
2025-04-10 06:03:54,676 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,676 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,676 - __main__ - INFO - Commit Info 
{'hash': '5b6168a97a22ae306fab172797749271e36dadfd', 'author': 'Lan Xia <Lan_Xia@ca.ibm.com>', 'author_name': 'Lan Xia', 'author_email': 'Lan_Xia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 19, 29, 49), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 1, 19, 29, 49), 'message': 'Merge pull request #19945 from keithc-ca/yield\n\nUpdate number of frames for test_YieldedVirtualThreadGetStackTrace', 'parents': ['0b32a2599670dd77b6bc5ca9d531c9a48d3d786a', '6c5f2b357ff854850a8993a33668cc6ede24a089'], 'files_changed': ['test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java'], 'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52, 'file_stats': {'test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java': {'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 574, 'recent_experience': 2}
2025-04-10 06:03:54,676 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,676 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,679 - __main__ - INFO - Commit Info 
{'hash': '0b32a2599670dd77b6bc5ca9d531c9a48d3d786a', 'author': 'Lan Xia <Lan_Xia@ca.ibm.com>', 'author_name': 'Lan Xia', 'author_email': 'Lan_Xia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 8, 1, 19, 28, 3), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 8, 1, 19, 28, 3), 'message': 'Merge pull request #19943 from keithc-ca/runner\n\nAdd support for aarch64 to j9vm.runner.Runner', 'parents': ['07797d6fa2534a2303a73b4781783160a483dee7', '2cfd72440387d4e231c7c44b3c0c6113eb637c24'], 'files_changed': ['test/functional/VM_Test/src/j9vm/runner/Runner.java', 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java'], 'lines_added': 155, 'lines_deleted': 133, 'lines_changed': 288, 'file_stats': {'test/functional/VM_Test/src/j9vm/runner/Runner.java': {'lines_added': 126, 'lines_deleted': 104, 'lines_changed': 230}, 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java': {'lines_added': 29, 'lines_deleted': 29, 'lines_changed': 58}}, 'subsystems': {'test'}, 'entropy': 0.7246971909054878, 'author_experience': 574, 'recent_experience': 2}
2025-04-10 06:03:54,680 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,680 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,681 - __main__ - INFO - Commit Info 
{'hash': '9a15c7357f01ea6a78bfd38d5a1d952107d896ac', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 35, 55), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 8, 1, 19, 15, 17), 'message': 'Verification check for invokeinterface receiver\n\nArrays should be rejected as a receiver for invokeinterface\nunless it is being assigned to Serializeable or Cloneable.\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['runtime/bcverify/rtverify.c'], 'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 13, 'lines_deleted': 18, 'lines_changed': 31}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 366, 'recent_experience': 34}
2025-04-10 06:03:54,681 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,682 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,682 - __main__ - INFO - Commit Info 
{'hash': '07797d6fa2534a2303a73b4781783160a483dee7', 'author': 'Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'author_name': 'Dmitri Pivkine', 'author_email': 'Dmitri_Pivkine@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 23, 49, 48), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 23, 49, 48), 'message': 'Merge pull request #19936 from amicic/maxTLH_noBatchClear\n\nIncrease max TLH for non-batch clear platforms', 'parents': ['90ac2bf1870aef94692fb25618b524c4bfdbbc6c', '9574f6897aaf4b0b69f673c851f1be65576f8f5c'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/gc_base/GCExtensions.hpp', 'runtime/gc_modron_startup/mmhelpers.cpp', 'runtime/gc_modron_startup/mmparseXgc.cpp'], 'lines_added': 24, 'lines_deleted': 1, 'lines_changed': 25, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/gc_base/GCExtensions.hpp': {'lines_added': 9, 'lines_deleted': 0, 'lines_changed': 9}, 'runtime/gc_modron_startup/mmhelpers.cpp': {'lines_added': 10, 'lines_deleted': 1, 'lines_changed': 11}, 'runtime/gc_modron_startup/mmparseXgc.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 1.6605332770550814, 'author_experience': 337, 'recent_experience': 4}
2025-04-10 06:03:54,683 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,684 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,684 - __main__ - INFO - Commit Info 
{'hash': '90ac2bf1870aef94692fb25618b524c4bfdbbc6c', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 21, 10, 3), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 21, 10, 3), 'message': 'Merge pull request #19944 from Sreekala-Gopakumar/46RelNote\n\nUpdate 0.46.0 release note', 'parents': ['abdb2aa87b34c0e2153ae6a6f53c67e5f34819b2', 'a5c3757b9cc0e96acd1eee0ee30f55da62f77c51'], 'files_changed': ['doc/release-notes/0.46/0.46.md'], 'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148, 'file_stats': {'doc/release-notes/0.46/0.46.md': {'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148}}, 'subsystems': {'doc'}, 'entropy': 0.0, 'author_experience': 3908, 'recent_experience': 60}
2025-04-10 06:03:54,684 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,684 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,684 - __main__ - INFO - Commit Info 
{'hash': 'abdb2aa87b34c0e2153ae6a6f53c67e5f34819b2', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 19, 9, 49), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 19, 9, 49), 'message': 'Merge pull request #19935 from keithc-ca/emv\n\nCorrect spelling of METADATA_BLOB_FILE_ENVVAR', 'parents': ['c792e991bf132e8dceadf99904dff2bfa879982e', '70aac1f21716023e185a8663dc740659c2a94623'], 'files_changed': ['runtime/vm/JFRWriter.hpp'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'runtime/vm/JFRWriter.hpp': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 22}
2025-04-10 06:03:54,684 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,684 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,684 - __main__ - INFO - Commit Info 
{'hash': 'a5c3757b9cc0e96acd1eee0ee30f55da62f77c51', 'author': 'Sreekala Gopakumar <Sreekala.Gopakumar@ibm.com>', 'author_name': 'Sreekala Gopakumar', 'author_email': 'Sreekala.Gopakumar@ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 32, 24), 'committer': 'Sreekala Gopakumar <Sreekala.Gopakumar@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 11, 44, 37), 'message': 'Update 0.46.0 release note\n\nhttps://github.com/eclipse-openj9/openj9-docs/issues/1330\n\nUpdated the draft release note that includes the known issues related to -XX:+ShareOrphans\n\n[skip ci]\nSigned-off-by: Sreekala Gopakumar sreekala.gopakumar@ibm.com\n', 'parents': ['6fae8827bc5a2a2a4b1e6fb73517dd0881bca2d0'], 'files_changed': ['doc/release-notes/0.46/0.46.md'], 'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148, 'file_stats': {'doc/release-notes/0.46/0.46.md': {'lines_added': 148, 'lines_deleted': 0, 'lines_changed': 148}}, 'subsystems': {'doc'}, 'entropy': 0.0, 'author_experience': 43, 'recent_experience': 2}
2025-04-10 06:03:54,684 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,684 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,690 - __main__ - INFO - Commit Info 
{'hash': '9574f6897aaf4b0b69f673c851f1be65576f8f5c', 'author': 'Aleksandar Micic <Aleksandar_Micic@ca.ibm.com>', 'author_name': 'Aleksandar Micic', 'author_email': 'Aleksandar_Micic@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 1, 32, 55), 'committer': 'Aleksandar Micic <Aleksandar_Micic@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 5, 24, 39), 'message': 'Increase max TLH for non-batch clear platforms\n\nFor non-batch TLH clear platform (currently only those based on X h/w)\nthe maximum size is increased to 1MB (from 128K default set by OMR).\nThis allows better scaling on high allocating/high CPU count\nconfigurations.\n\nBatch clearing platforms stays at 128K max, since clearing too much in a\nbatch may flush useful data from CPU data caches.\n\nSigned-off-by: Aleksandar Micic <Aleksandar_Micic@ca.ibm.com>', 'parents': ['c792e991bf132e8dceadf99904dff2bfa879982e'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/gc_base/GCExtensions.hpp', 'runtime/gc_modron_startup/mmhelpers.cpp', 'runtime/gc_modron_startup/mmparseXgc.cpp'], 'lines_added': 24, 'lines_deleted': 1, 'lines_changed': 25, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/gc_base/GCExtensions.hpp': {'lines_added': 9, 'lines_deleted': 0, 'lines_changed': 9}, 'runtime/gc_modron_startup/mmhelpers.cpp': {'lines_added': 10, 'lines_deleted': 1, 'lines_changed': 11}, 'runtime/gc_modron_startup/mmparseXgc.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 1.6605332770550814, 'author_experience': 44, 'recent_experience': 1}
2025-04-10 06:03:54,691 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,691 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,692 - __main__ - INFO - Commit Info 
{'hash': '2cfd72440387d4e231c7c44b3c0c6113eb637c24', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 2, 23, 36), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 5, 2, 56), 'message': 'Add support for aarch64 to j9vm.runner.Runner\n\nAlso reorganize and tidy up.\n\nFixed JavaHomeTestRunner which assumed that getCommandLine()\nreturns a string that ends with a space.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['ae0b2371ed3037a326392a9403ff3fda168ef23e'], 'files_changed': ['test/functional/VM_Test/src/j9vm/runner/Runner.java', 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java'], 'lines_added': 155, 'lines_deleted': 133, 'lines_changed': 288, 'file_stats': {'test/functional/VM_Test/src/j9vm/runner/Runner.java': {'lines_added': 126, 'lines_deleted': 104, 'lines_changed': 230}, 'test/functional/VM_Test/src/j9vm/test/javahome/JavaHomeTestRunner.java': {'lines_added': 29, 'lines_deleted': 29, 'lines_changed': 58}}, 'subsystems': {'test'}, 'entropy': 0.7246971909054878, 'author_experience': 2221, 'recent_experience': 63}
2025-04-10 06:03:54,692 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,693 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,694 - __main__ - INFO - Commit Info 
{'hash': '6c5f2b357ff854850a8993a33668cc6ede24a089', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 1, 28, 22), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 2, 33, 27), 'message': 'Update number of frames for test_YieldedVirtualThreadGetStackTrace\n\nJDK24 removed VirtualThreads.park() from the stack trace.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['c792e991bf132e8dceadf99904dff2bfa879982e'], 'files_changed': ['test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java'], 'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52, 'file_stats': {'test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java': {'lines_added': 30, 'lines_deleted': 22, 'lines_changed': 52}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 63}
2025-04-10 06:03:54,694 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,694 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,694 - __main__ - INFO - Commit Info 
{'hash': 'ad9620c3405492824867184bd8c7f95c457e06f4', 'author': 'jimmyk <jimmyk@ca.ibm.com>', 'author_name': 'jimmyk', 'author_email': 'jimmyk@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 58, 15), 'committer': 'jimmyk <jimmyk@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 31, 1, 0, 43), 'message': 'Adds FSD check to jitClassRedefineEvent\n\njitClassRedefineEvent is updated to include an explicit check for FSD being\nenabled.\n\nThe result of this is the code cache is tossed out if either HCR extensions\nare enabled or FSD mode is enabled.\n\nSigned-off-by: jimmyk <jimmyk@ca.ibm.com>\n', 'parents': ['d776a4a40f493f86d9376a6e2d667f9eb68a8935'], 'files_changed': ['runtime/util/hshelp.c'], 'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12, 'file_stats': {'runtime/util/hshelp.c': {'lines_added': 6, 'lines_deleted': 6, 'lines_changed': 12}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 52, 'recent_experience': 2}
2025-04-10 06:03:54,694 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,694 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,694 - __main__ - INFO - Commit Info 
{'hash': 'c792e991bf132e8dceadf99904dff2bfa879982e', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 31, 0, 10, 26), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 31, 0, 10, 26), 'message': 'Merge pull request #19939 from dmitripivkine/master\n\nRemove unused J9GCVMInfo and J9GCThreadInfo', 'parents': ['ae0b2371ed3037a326392a9403ff3fda168ef23e', '860fd1468ae695d38e5c8ca610f1afef4355da94'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/oti/j9nonbuilder.h'], 'lines_added': 0, 'lines_deleted': 15, 'lines_changed': 15, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 0, 'lines_deleted': 5, 'lines_changed': 5}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 0, 'lines_deleted': 10, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.9182958340544896, 'author_experience': 3908, 'recent_experience': 60}
2025-04-10 06:03:54,694 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,694 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,694 - __main__ - INFO - Commit Info 
{'hash': 'ae0b2371ed3037a326392a9403ff3fda168ef23e', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 23, 23, 15), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 23, 23, 15), 'message': 'Merge pull request #19940 from LongyuZhang/thread2\n\nRemove duplicate exclude in jvmtitests', 'parents': ['a3a097424aa462bd610ba3ed4c5db1ee44e54b88', '71f9ccfcde0fd0253f106ee6d821524c956ac229'], 'files_changed': ['test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1, 'file_stats': {'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 06:03:54,700 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,700 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,701 - __main__ - INFO - Commit Info 
{'hash': '71f9ccfcde0fd0253f106ee6d821524c956ac229', 'author': 'LongyuZhang <longyu.zhang@ibm.com>', 'author_name': 'LongyuZhang', 'author_email': 'longyu.zhang@ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 21, 39, 27), 'committer': 'LongyuZhang <longyu.zhang@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 23, 15, 37), 'message': 'Remove duplicate exclude in jvmtitests\n\nRemove the duplicate exclude for GetThreadListStackTracesExtendedTest.\n\nIssue: https://github.com/eclipse-openj9/openj9/pull/19918#discussion_r1697151877\n\nSigned-off-by: LongyuZhang <longyu.zhang@ibm.com>\n', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1, 'file_stats': {'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 0, 'lines_deleted': 1, 'lines_changed': 1}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 20, 'recent_experience': 1}
2025-04-10 06:03:54,701 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,701 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,705 - __main__ - INFO - Commit Info 
{'hash': 'a3a097424aa462bd610ba3ed4c5db1ee44e54b88', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 22, 52, 23), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 22, 52, 23), 'message': 'Merge pull request #19917 from thallium/jfr-cpp-flag\n\nAdd triggerExecutionSample native', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4', '3f48ea98f397c774df7dabe3d2e47b0b7ba614cc'], 'files_changed': ['.gitattributes', 'jcl/jpp_configuration.xml', 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java', 'jcl/src/java.base/share/classes/java/lang/System.java', 'runtime/jcl/CMakeLists.txt', 'runtime/jcl/common/com_ibm_oti_vm_VM.c', 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp', 'runtime/jcl/exports.cmake', 'runtime/jcl/module.xml', 'runtime/jcl/uma/jfr_exports.xml', 'runtime/oti/j9nonbuilder.h', 'runtime/oti/jclprots.h', 'runtime/vm/intfunc.c', 'test/functional/cmdLineTests/jfr/build.xml', 'test/functional/cmdLineTests/jfr/jfr.xml', 'test/functional/cmdLineTests/jfr/metadata.blob', 'test/functional/cmdLineTests/jfr/playlist.xml', 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java'], 'lines_added': 2673, 'lines_deleted': 198, 'lines_changed': 2871, 'file_stats': {'.gitattributes': {'lines_added': 5, 'lines_deleted': 4, 'lines_changed': 9}, 'jcl/jpp_configuration.xml': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'jcl/src/java.base/share/classes/java/lang/System.java': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/CMakeLists.txt': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/jcl/common/com_ibm_oti_vm_VM.c': {'lines_added': 0, 'lines_deleted': 192, 'lines_changed': 192}, 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp': {'lines_added': 221, 'lines_deleted': 0, 'lines_changed': 221}, 'runtime/jcl/exports.cmake': {'lines_added': 6, 'lines_deleted': 0, 'lines_changed': 6}, 'runtime/jcl/module.xml': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/uma/jfr_exports.xml': {'lines_added': 24, 'lines_deleted': 0, 'lines_changed': 24}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 3, 'lines_deleted': 0, 'lines_changed': 3}, 'runtime/oti/jclprots.h': {'lines_added': 5, 'lines_deleted': 0, 'lines_changed': 5}, 'runtime/vm/intfunc.c': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 87, 'lines_deleted': 0, 'lines_changed': 87}, 'test/functional/cmdLineTests/jfr/jfr.xml': {'lines_added': 33, 'lines_deleted': 0, 'lines_changed': 33}, 'test/functional/cmdLineTests/jfr/metadata.blob': {'lines_added': 2180, 'lines_deleted': 0, 'lines_changed': 2180}, 'test/functional/cmdLineTests/jfr/playlist.xml': {'lines_added': 57, 'lines_deleted': 0, 'lines_changed': 57}, 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java': {'lines_added': 31, 'lines_deleted': 0, 'lines_changed': 31}}, 'subsystems': {'root', 'jcl', 'test', 'runtime'}, 'entropy': 1.4612023105729814, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 06:03:54,705 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,705 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,705 - __main__ - INFO - Commit Info 
{'hash': '860fd1468ae695d38e5c8ca610f1afef4355da94', 'author': 'Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'author_name': 'Dmitri Pivkine', 'author_email': 'Dmitri_Pivkine@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 45, 15), 'committer': 'Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 45, 15), 'message': 'Remove unused J9GCVMInfo and J9GCThreadInfo\n\nLooks like J9JavaVM->gcInfo field and J9GCVMInfo, J9GCThreadInfo structs\nare not used and can be deleted.\n\nSigned-off-by: Dmitri Pivkine <Dmitri_Pivkine@ca.ibm.com>', 'parents': ['bd018c01d21f1c6ab9499449b8e2af71eb03a6a4'], 'files_changed': ['runtime/gc_base/GCExtensions.cpp', 'runtime/oti/j9nonbuilder.h'], 'lines_added': 0, 'lines_deleted': 15, 'lines_changed': 15, 'file_stats': {'runtime/gc_base/GCExtensions.cpp': {'lines_added': 0, 'lines_deleted': 5, 'lines_changed': 5}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 0, 'lines_deleted': 10, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.9182958340544896, 'author_experience': 337, 'recent_experience': 4}
2025-04-10 06:03:54,705 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,705 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,705 - __main__ - INFO - Commit Info 
{'hash': '70aac1f21716023e185a8663dc740659c2a94623', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 26, 51), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 27, 12), 'message': 'Correct spelling of METADATA_BLOB_FILE_ENVVAR\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['0362cb326d8137effe1e16c1f10661a99c0a0691'], 'files_changed': ['runtime/vm/JFRWriter.hpp'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'runtime/vm/JFRWriter.hpp': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 06:03:54,705 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,705 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,705 - __main__ - INFO - Commit Info 
{'hash': 'bd018c01d21f1c6ab9499449b8e2af71eb03a6a4', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 9, 42), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 9, 42), 'message': 'Merge pull request #19929 from zl-wang/master\n\nSet spin-counts right', 'parents': ['3b3874e25ade7739155be3800e762f3ba6580fea', 'dd27fc0d807057d0a1299edc7cabb769bc6c9e01'], 'files_changed': ['runtime/vm/vmthread.cpp'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/vm/vmthread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 23}
2025-04-10 06:03:54,705 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,705 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,713 - __main__ - INFO - Commit Info 
{'hash': '3b3874e25ade7739155be3800e762f3ba6580fea', 'author': 'AdamBrousseau <adam.brousseau88@gmail.com>', 'author_name': 'AdamBrousseau', 'author_email': 'adam.brousseau88@gmail.com', 'authored_date': datetime.datetime(2024, 7, 30, 20, 0, 46), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 20, 0, 46), 'message': 'Merge pull request #19933 from mahdipub/sets_cuda_to_default_for_all\n\nSets cuda_default for p Linux and removes cuda_9', 'parents': ['0362cb326d8137effe1e16c1f10661a99c0a0691', '17894a56b62b128d056b630b350c9915b0fbe0ba'], 'files_changed': ['buildenv/jenkins/variables/defaults.yml'], 'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8, 'file_stats': {'buildenv/jenkins/variables/defaults.yml': {'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8}}, 'subsystems': {'buildenv'}, 'entropy': 0.0, 'author_experience': 71, 'recent_experience': 6}
2025-04-10 06:03:54,714 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,714 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,715 - __main__ - INFO - Commit Info 
{'hash': '17894a56b62b128d056b630b350c9915b0fbe0ba', 'author': 'Mahdi Ardekanian <mahdi@ibm.com>', 'author_name': 'Mahdi Ardekanian', 'author_email': 'mahdi@ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 19, 36, 46), 'committer': 'Mahdi Ardekanian <mahdi@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 19, 58, 54), 'message': 'Sets cuda_default for p Linux and removes cuda_9\n\nNow that plinux build moved to docker, we can set cuda level to `cuda_default` as we use for others like xlinux. With that we can also remove `cuda_9` which only plinux is using.\n\nSigned-off-by: mahdi@ibm.com\n', 'parents': ['0362cb326d8137effe1e16c1f10661a99c0a0691'], 'files_changed': ['buildenv/jenkins/variables/defaults.yml'], 'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8, 'file_stats': {'buildenv/jenkins/variables/defaults.yml': {'lines_added': 1, 'lines_deleted': 7, 'lines_changed': 8}}, 'subsystems': {'buildenv'}, 'entropy': 0.0, 'author_experience': 18, 'recent_experience': 6}
2025-04-10 06:03:54,715 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,717 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,717 - __main__ - INFO - Commit Info 
{'hash': '3f48ea98f397c774df7dabe3d2e47b0b7ba614cc', 'author': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'author_name': 'Gengchen Tuo', 'author_email': 'gengchen.tuo@ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 2, 51, 54), 'committer': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 7, 0, 29), 'message': 'Add triggerExecutionSample native\n\n- Add JPP flag for JFR\n- Add com.ibm.oti.vm.VM::triggerExecutionSample that calls\n  jfrExecutionSample on all Java threads\n- Add test for triggerExecutionSample\n\nRelated:\n- https://github.com/ibmruntimes/openj9-openjdk-jdk/pull/817\n\nDepend on:\n- https://github.com/adoptium/TKG/pull/589\n\nSigned-off-by: Gengchen Tuo <gengchen.tuo@ibm.com>\n', 'parents': ['ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535'], 'files_changed': ['.gitattributes', 'jcl/jpp_configuration.xml', 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java', 'jcl/src/java.base/share/classes/java/lang/System.java', 'runtime/jcl/CMakeLists.txt', 'runtime/jcl/common/com_ibm_oti_vm_VM.c', 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp', 'runtime/jcl/exports.cmake', 'runtime/jcl/module.xml', 'runtime/jcl/uma/jfr_exports.xml', 'runtime/oti/j9nonbuilder.h', 'runtime/oti/jclprots.h', 'runtime/vm/intfunc.c', 'test/functional/cmdLineTests/jfr/build.xml', 'test/functional/cmdLineTests/jfr/jfr.xml', 'test/functional/cmdLineTests/jfr/metadata.blob', 'test/functional/cmdLineTests/jfr/playlist.xml', 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java'], 'lines_added': 2673, 'lines_deleted': 198, 'lines_changed': 2871, 'file_stats': {'.gitattributes': {'lines_added': 5, 'lines_deleted': 4, 'lines_changed': 9}, 'jcl/jpp_configuration.xml': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'jcl/src/java.base/share/classes/java/lang/System.java': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/CMakeLists.txt': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/jcl/common/com_ibm_oti_vm_VM.c': {'lines_added': 0, 'lines_deleted': 192, 'lines_changed': 192}, 'runtime/jcl/common/com_ibm_oti_vm_VM.cpp': {'lines_added': 221, 'lines_deleted': 0, 'lines_changed': 221}, 'runtime/jcl/exports.cmake': {'lines_added': 6, 'lines_deleted': 0, 'lines_changed': 6}, 'runtime/jcl/module.xml': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/jcl/uma/jfr_exports.xml': {'lines_added': 24, 'lines_deleted': 0, 'lines_changed': 24}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 3, 'lines_deleted': 0, 'lines_changed': 3}, 'runtime/oti/jclprots.h': {'lines_added': 5, 'lines_deleted': 0, 'lines_changed': 5}, 'runtime/vm/intfunc.c': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'test/functional/cmdLineTests/jfr/build.xml': {'lines_added': 87, 'lines_deleted': 0, 'lines_changed': 87}, 'test/functional/cmdLineTests/jfr/jfr.xml': {'lines_added': 33, 'lines_deleted': 0, 'lines_changed': 33}, 'test/functional/cmdLineTests/jfr/metadata.blob': {'lines_added': 2180, 'lines_deleted': 0, 'lines_changed': 2180}, 'test/functional/cmdLineTests/jfr/playlist.xml': {'lines_added': 57, 'lines_deleted': 0, 'lines_changed': 57}, 'test/functional/cmdLineTests/jfr/src/org/openj9/test/TriggerExecutionSample.java': {'lines_added': 31, 'lines_deleted': 0, 'lines_changed': 31}}, 'subsystems': {'root', 'jcl', 'test', 'runtime'}, 'entropy': 1.4612023105729814, 'author_experience': 86, 'recent_experience': 0}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,719 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,719 - __main__ - INFO - Commit Info 
{'hash': '0362cb326d8137effe1e16c1f10661a99c0a0691', 'author': 'Lan Xia <Lan_Xia@ca.ibm.com>', 'author_name': 'Lan Xia', 'author_email': 'Lan_Xia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 2, 59, 2), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 30, 2, 59, 2), 'message': 'Merge pull request #19918 from LongyuZhang/thread1\n\nExtract Thread Test to JDK 22 and under', 'parents': ['48f557e42619c18f1282fffe592e5554ae784160', '01f287ca56688c57bf3f68a62877c6ce67535eae'], 'files_changed': ['test/functional/Java8andUp/build.xml', 'test/functional/Java8andUp/playlist.xml', 'test/functional/Java8andUp/testng.xml', 'test/functional/Java8andUp/testng_thread.xml', 'test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 143, 'lines_deleted': 15, 'lines_changed': 158, 'file_stats': {'test/functional/Java8andUp/build.xml': {'lines_added': 25, 'lines_deleted': 2, 'lines_changed': 27}, 'test/functional/Java8andUp/playlist.xml': {'lines_added': 49, 'lines_deleted': 0, 'lines_changed': 49}, 'test/functional/Java8andUp/testng.xml': {'lines_added': 0, 'lines_deleted': 2, 'lines_changed': 2}, 'test/functional/Java8andUp/testng_thread.xml': {'lines_added': 37, 'lines_deleted': 0, 'lines_changed': 37}, 'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 32, 'lines_deleted': 11, 'lines_changed': 43}}, 'subsystems': {'test'}, 'entropy': 2.040604141211785, 'author_experience': 574, 'recent_experience': 3}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,719 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,719 - __main__ - INFO - Commit Info 
{'hash': 'dd27fc0d807057d0a1299edc7cabb769bc6c9e01', 'author': 'Julian <zlwang@ca.ibm.com>', 'author_name': 'Julian', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 30, 0, 2, 44), 'committer': 'Julian <zlwang@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 30, 0, 2, 44), 'message': 'Set spin-counts right\nCurrently, they are set according to how many CPUs there are online.\nHowever, it makes more senses to set them according to how many CPUs\n JVM is going to run. Such that, we can take advantages of single-CPU\n scenarios (be it numactl or container).\n', 'parents': ['48f557e42619c18f1282fffe592e5554ae784160'], 'files_changed': ['runtime/vm/vmthread.cpp'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/vm/vmthread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 8, 'recent_experience': 4}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,719 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,719 - __main__ - INFO - Commit Info 
{'hash': '48f557e42619c18f1282fffe592e5554ae784160', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 52, 41), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 52, 41), 'message': 'Merge pull request #19925 from keithc-ca/executeOnCarrierThread\n\nJDK24 removes JavaLangAccess.executeOnCarrierThread()', 'parents': ['c5b3b0920791dcc4242376fcb6eb007d00d779ea', 'e4bf5c1ef78329fda5282d243fffdc14b6a8566b'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 23}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,719 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,719 - __main__ - INFO - Commit Info 
{'hash': 'c5b3b0920791dcc4242376fcb6eb007d00d779ea', 'author': 'Rahil Shah <rahil@ca.ibm.com>', 'author_name': 'Rahil Shah', 'author_email': 'rahil@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 46, 35), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 46, 35), 'message': 'Merge pull request #19926 from zl-wang/master\n\nChange to use isOffheapAllocationEnabled query', 'parents': ['d98e1e5c636a4c44f90e0b5b59c506a891b686f9', '8e7895ff8886aa73c7661bc768e40550df8ab67e'], 'files_changed': ['runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/env/VMJ9.cpp', 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 17, 'lines_deleted': 17, 'lines_changed': 34, 'file_stats': {'runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/env/VMJ9.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}, 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 1.775523493673489, 'author_experience': 144, 'recent_experience': 12}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,719 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,719 - __main__ - INFO - Commit Info 
{'hash': 'd98e1e5c636a4c44f90e0b5b59c506a891b686f9', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 29, 5), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 29, 5), 'message': 'Merge pull request #19805 from fengxue-IS/enhance-profiling\n\nRefactor Continuation cache profiling', 'parents': ['97d0bb706186611d847c7671d991eae9b87bf928', '0076e93ad94783bd40b93434f37293ccf67282d0'], 'files_changed': ['runtime/oti/j9consts.h', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/ContinuationHelpers.cpp', 'runtime/vm/jvminit.c'], 'lines_added': 54, 'lines_deleted': 19, 'lines_changed': 73, 'file_stats': {'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 6, 'lines_deleted': 1, 'lines_changed': 7}, 'runtime/vm/ContinuationHelpers.cpp': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}, 'runtime/vm/jvminit.c': {'lines_added': 43, 'lines_deleted': 14, 'lines_changed': 57}}, 'subsystems': {'runtime'}, 'entropy': 1.0374106511842158, 'author_experience': 675, 'recent_experience': 23}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,719 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,719 - __main__ - INFO - Commit Info 
{'hash': '97d0bb706186611d847c7671d991eae9b87bf928', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 19, 2, 45), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 29, 19, 2, 45), 'message': 'Merge pull request #19928 from JasonFengJ9/jdk24access\n\nJDK24 removes JavaLangAccess.stringSize(long)', 'parents': ['487b005e140f73368d55b7d4c736f0f96fa9dc60', '4d506fd4f2efd03f88d59dff5dff7e36e6e47361'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 66}
2025-04-10 06:03:54,719 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,734 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,735 - __main__ - INFO - Commit Info 
{'hash': '4d506fd4f2efd03f88d59dff5dff7e36e6e47361', 'author': 'Jason Feng <fengj@ca.ibm.com>', 'author_name': 'Jason Feng', 'author_email': 'fengj@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 29, 17, 12, 45), 'committer': 'Jason Feng <fengj@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 29, 17, 12, 45), 'message': 'JDK24 removes JavaLangAccess.stringSize(long x)\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>', 'parents': ['487b005e140f73368d55b7d4c736f0f96fa9dc60'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 5, 'lines_deleted': 5, 'lines_changed': 10}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 641, 'recent_experience': 11}
2025-04-10 06:03:54,736 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,736 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,736 - __main__ - INFO - Commit Info 
{'hash': '8e7895ff8886aa73c7661bc768e40550df8ab67e', 'author': 'Julian <zlwang@ca.ibm.com>', 'author_name': 'Julian', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 2, 15, 2), 'committer': 'Julian <zlwang@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 27, 2, 15, 2), 'message': 'Change to use isOffheapAllocationEnabled query\nwherever it is appropriate (and intended), isIndexableDataAddrPresent is changed into isOffheapAllocationEnabled.\n\nSigned-off-by: Julian <zlwang@ca.ibm.com>\n', 'parents': ['d65b5fe5306c24b69066199ee5d61873f79785d6'], 'files_changed': ['runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/env/VMJ9.cpp', 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp', 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 17, 'lines_deleted': 17, 'lines_changed': 34, 'file_stats': {'runtime/compiler/aarch64/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/env/VMJ9.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/p/codegen/J9TreeEvaluator.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/x/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}, 'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 1.775523493673489, 'author_experience': 8, 'recent_experience': 4}
2025-04-10 06:03:54,736 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,736 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,736 - __main__ - INFO - Commit Info 
{'hash': '01f287ca56688c57bf3f68a62877c6ce67535eae', 'author': 'LongyuZhang <longyu.zhang@ibm.com>', 'author_name': 'LongyuZhang', 'author_email': 'longyu.zhang@ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 21, 13, 32), 'committer': 'LongyuZhang <longyu.zhang@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 27, 2, 9, 4), 'message': 'Extract Thread Test to JDK 22 and under\n- Thread functions are removed for JDK 23, extract test to JDK 22 and under\n\nSigned-off-by: LongyuZhang <longyu.zhang@ibm.com>\n', 'parents': ['200b783f4002902f3ff46d2103f9ee7916f966dc'], 'files_changed': ['test/functional/Java8andUp/build.xml', 'test/functional/Java8andUp/playlist.xml', 'test/functional/Java8andUp/testng.xml', 'test/functional/Java8andUp/testng_thread.xml', 'test/functional/cmdLineTests/jvmtitests/build.xml'], 'lines_added': 143, 'lines_deleted': 15, 'lines_changed': 158, 'file_stats': {'test/functional/Java8andUp/build.xml': {'lines_added': 25, 'lines_deleted': 2, 'lines_changed': 27}, 'test/functional/Java8andUp/playlist.xml': {'lines_added': 49, 'lines_deleted': 0, 'lines_changed': 49}, 'test/functional/Java8andUp/testng.xml': {'lines_added': 0, 'lines_deleted': 2, 'lines_changed': 2}, 'test/functional/Java8andUp/testng_thread.xml': {'lines_added': 37, 'lines_deleted': 0, 'lines_changed': 37}, 'test/functional/cmdLineTests/jvmtitests/build.xml': {'lines_added': 32, 'lines_deleted': 11, 'lines_changed': 43}}, 'subsystems': {'test'}, 'entropy': 2.040604141211785, 'author_experience': 20, 'recent_experience': 1}
2025-04-10 06:03:54,736 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,736 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,736 - __main__ - INFO - Commit Info 
{'hash': '487b005e140f73368d55b7d4c736f0f96fa9dc60', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 2, 0, 19), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 27, 2, 0, 19), 'message': 'Merge pull request #19924 from joransiu/autocvt-default\n\nUpdate com.ibm.autocvt to default to true unless file.encoding is set', 'parents': ['8805cc2707238c179dbfe11b5d1d4e2909f54632', '5dbfd8760028fcfe60506530cacb9589a4e439a1'], 'files_changed': ['runtime/jcl/common/system.c'], 'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11, 'file_stats': {'runtime/jcl/common/system.c': {'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 06:03:54,736 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,736 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,736 - __main__ - INFO - Commit Info 
{'hash': '5dbfd8760028fcfe60506530cacb9589a4e439a1', 'author': 'Joran Siu <joransiu@ca.ibm.com>', 'author_name': 'Joran Siu', 'author_email': 'joransiu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 23, 2, 7), 'committer': 'Joran Siu <joransiu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 27, 1, 48, 55), 'message': 'Update com.ibm.autocvt to default to true unless file.encoding is set\n\nThe z/OS specific com.ibm.autocvt property should default to true only\nif the file.encoding property is unset. If file.encoding is set to a\nspecific charset or COMPAT, then we disable auto conversion to retain\nthe same behaviour as JDK17 and earlier releases.\n\nSigned-off-by: Joran Siu <joransiu@ca.ibm.com>\n', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4'], 'files_changed': ['runtime/jcl/common/system.c'], 'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11, 'file_stats': {'runtime/jcl/common/system.c': {'lines_added': 4, 'lines_deleted': 7, 'lines_changed': 11}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 98, 'recent_experience': 3}
2025-04-10 06:03:54,736 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,736 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,736 - __main__ - INFO - Commit Info 
{'hash': '8805cc2707238c179dbfe11b5d1d4e2909f54632', 'author': 'Aleksandar Micic <amicic@ca.ibm.com>', 'author_name': 'Aleksandar Micic', 'author_email': 'amicic@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 1, 45, 10), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 27, 1, 45, 10), 'message': 'Merge pull request #19919 from zl-wang/master\n\nTreat single CPU as if -Xgc:noConcurrentMark were set', 'parents': ['b6760a1420ac8df465c06bcc21088c2511e5d30b', 'd65b5fe5306c24b69066199ee5d61873f79785d6'], 'files_changed': ['runtime/gc_modron_startup/mminit.cpp'], 'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6, 'file_stats': {'runtime/gc_modron_startup/mminit.cpp': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 374, 'recent_experience': 10}
2025-04-10 06:03:54,736 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,736 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,736 - __main__ - INFO - Commit Info 
{'hash': 'b6760a1420ac8df465c06bcc21088c2511e5d30b', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 27, 0, 22, 17), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 27, 0, 22, 17), 'message': 'Merge pull request #19920 from keithc-ca/throw11\n\nJVM_LoadLibrary: respect throwOnFailure in jdk11', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4', '3f3d51f38c850b1daab989fd034d7420d852dfea'], 'files_changed': ['runtime/j9vm/jvm.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/j9vm/jvm.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 675, 'recent_experience': 24}
2025-04-10 06:03:54,750 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,751 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,751 - __main__ - INFO - Commit Info 
{'hash': 'e4bf5c1ef78329fda5282d243fffdc14b6a8566b', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 26, 22, 58, 21), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 26, 23, 37, 33), 'message': 'JDK24 removes JavaLangAccess.executeOnCarrierThread()\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 06:03:54,751 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,751 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,751 - __main__ - INFO - Commit Info 
{'hash': '3f3d51f38c850b1daab989fd034d7420d852dfea', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 21, 55, 18), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 26, 3, 28, 28), 'message': 'JVM_LoadLibrary: respect throwOnFailure in jdk11\n\nThis corrects an oversight in #14739.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['9142f7eb060d4a74d9def47039b06edf7a8c65c4'], 'files_changed': ['runtime/j9vm/jvm.c'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/j9vm/jvm.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 06:03:54,751 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,751 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,751 - __main__ - INFO - Commit Info 
{'hash': '9142f7eb060d4a74d9def47039b06edf7a8c65c4', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 26, 3, 21, 23), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 26, 3, 21, 23), 'message': 'Merge pull request #19861 from JasonFengJ9/aixlib\n\nJDK17+ JVM_LoadLibrary() opens shared library via J9PORT_SLOPEN_DECORATE', 'parents': ['d776a4a40f493f86d9376a6e2d667f9eb68a8935', 'f3d33e83b83231fc5ee020e8a4318d1588207dbb'], 'files_changed': ['runtime/j9vm/j9scar.tdf', 'runtime/j9vm/jvm.c'], 'lines_added': 77, 'lines_deleted': 8, 'lines_changed': 85, 'file_stats': {'runtime/j9vm/j9scar.tdf': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/j9vm/jvm.c': {'lines_added': 73, 'lines_deleted': 8, 'lines_changed': 81}}, 'subsystems': {'runtime'}, 'entropy': 0.27376916868294177, 'author_experience': 2221, 'recent_experience': 67}
2025-04-10 06:03:54,751 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,751 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,751 - __main__ - INFO - Commit Info 
{'hash': 'f3d33e83b83231fc5ee020e8a4318d1588207dbb', 'author': 'Jason Feng <fengj@ca.ibm.com>', 'author_name': 'Jason Feng', 'author_email': 'fengj@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 15, 20, 55, 51), 'committer': 'Jason Feng <fengj@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 25, 22, 47, 27), 'message': 'JDK17+ JVM_LoadLibrary() opens shared library via J9PORT_SLOPEN_DECORATE\n\nj9sl_open_shared_library() with the flag J9PORT_SLOPEN_DECORATE expects\nthe incoming library name to be platform independent, i.e., it must not\ncontain any prefix or file extension. A path to the library is\nsupported.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>', 'parents': ['157a0ef24c69eef780776bfabf75e2504e8c9a24'], 'files_changed': ['runtime/j9vm/j9scar.tdf', 'runtime/j9vm/jvm.c'], 'lines_added': 77, 'lines_deleted': 8, 'lines_changed': 85, 'file_stats': {'runtime/j9vm/j9scar.tdf': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/j9vm/jvm.c': {'lines_added': 73, 'lines_deleted': 8, 'lines_changed': 81}}, 'subsystems': {'runtime'}, 'entropy': 0.27376916868294177, 'author_experience': 641, 'recent_experience': 11}
2025-04-10 06:03:54,751 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,751 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,751 - __main__ - INFO - Commit Info 
{'hash': 'd65b5fe5306c24b69066199ee5d61873f79785d6', 'author': 'Julian <zlwang@ca.ibm.com>', 'author_name': 'Julian', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 19, 28, 59), 'committer': 'Julian <zlwang@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 25, 22, 38, 2), 'message': 'Treat single CPU as if -Xgc:noConcurrentMark were set\nThere is little expected benefit with concurrentmark if you are running on a single-CPU machine/environment. On the other hand, you could gain some benefits with noConcurrentMark: 1) no interference from background marking thread; 2) shorter write-barrier path-length: for certain workloads, this provides substantial performance benefits (e.g. Spark TPC-DS q72 in particular).\n\nfix the missing portLib declaration ...\n\nSigned-off-by: Julian <zlwang@ca.ibm.com>\n', 'parents': ['157a0ef24c69eef780776bfabf75e2504e8c9a24'], 'files_changed': ['runtime/gc_modron_startup/mminit.cpp'], 'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6, 'file_stats': {'runtime/gc_modron_startup/mminit.cpp': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 8, 'recent_experience': 4}
2025-04-10 06:03:54,751 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,751 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,751 - __main__ - INFO - Commit Info 
{'hash': 'd776a4a40f493f86d9376a6e2d667f9eb68a8935', 'author': 'Hang Shao <hangshao@ca.ibm.com>', 'author_name': 'Hang Shao', 'author_email': 'hangshao@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 19, 42, 41), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 25, 19, 42, 41), 'message': 'Merge pull request #19915 from theresa-m/unsafe_update\n\nUpdate Unsafe value type comments and Java methods', 'parents': ['876f013cc7d079e97ac84ab151c8e7f1ebabfede', '40c65378d14f4f6fed10eda96f0b6690dd778ec0'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java'], 'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java': {'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 333, 'recent_experience': 32}
2025-04-10 06:03:54,763 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,764 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,765 - __main__ - INFO - Commit Info 
{'hash': '876f013cc7d079e97ac84ab151c8e7f1ebabfede', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 25, 7, 19, 11), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 25, 7, 19, 11), 'message': 'Merge pull request #19877 from theresa-m/fix_19756\n\nError if invokeinterface receiver is reference array', 'parents': ['157a0ef24c69eef780776bfabf75e2504e8c9a24', 'eac4b61c53eac94cf45ae8750cffaab4d7807a0c'], 'files_changed': ['runtime/bcverify/rtverify.c', 'runtime/oti/bytecodewalk.h'], 'lines_added': 11, 'lines_deleted': 10, 'lines_changed': 21, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 7, 'lines_deleted': 6, 'lines_changed': 13}, 'runtime/oti/bytecodewalk.h': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}}, 'subsystems': {'runtime'}, 'entropy': 0.9587118829771317, 'author_experience': 675, 'recent_experience': 24}
2025-04-10 06:03:54,765 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,766 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,767 - __main__ - INFO - Commit Info 
{'hash': '157a0ef24c69eef780776bfabf75e2504e8c9a24', 'author': 'Rahil Shah <rahil@ca.ibm.com>', 'author_name': 'Rahil Shah', 'author_email': 'rahil@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 23, 20, 28), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 24, 23, 20, 28), 'message': 'Merge pull request #19860 from ehsankianifar/Z_RemoveUnusedRegistersFromGenHeapAlloc\n\nZ: remove unused and redundant register from object evaluator', 'parents': ['200b783f4002902f3ff46d2103f9ee7916f966dc', 'b4719f8df39cad0985a5faa9f6ddfa7dc2c812c4'], 'files_changed': ['runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287, 'file_stats': {'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 144, 'recent_experience': 12}
2025-04-10 06:03:54,768 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,768 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,768 - __main__ - INFO - Commit Info 
{'hash': '40c65378d14f4f6fed10eda96f0b6690dd778ec0', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 19, 39, 25), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 19, 46, 40), 'message': 'Update Unsafe value type comments and Java methods\n\n- update comments with primitive references\n- remove stale methods getReferenceVolatile and getReference\n- add methods hasNullMarker and nullMarkerOffset to match RI\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['795fef00b272a217ea634ae50963fc2e780fed37'], 'files_changed': ['jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java'], 'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167, 'file_stats': {'jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java': {'lines_added': 82, 'lines_deleted': 85, 'lines_changed': 167}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 366, 'recent_experience': 34}
2025-04-10 06:03:54,768 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,768 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,768 - __main__ - INFO - Commit Info 
{'hash': 'b4719f8df39cad0985a5faa9f6ddfa7dc2c812c4', 'author': 'Ehsan Kiani Far <ehsan.kianifar@gmail.com>', 'author_name': 'Ehsan Kiani Far', 'author_email': 'ehsan.kianifar@gmail.com', 'authored_date': datetime.datetime(2024, 7, 16, 1, 30, 36), 'committer': 'Ehsan Kiani Far <ehsan.kianifar@gmail.com>', 'committed_date': datetime.datetime(2024, 7, 24, 19, 45, 20), 'message': 'Z: reduce the number of registers used in VMnewEvaluator\n\nVMnewEvaluator uses more registers than it needs.\nSome registers like zeroReg are initialized but never used.\nSome registers line dataSizeReg are redundant.\nThis commit uses existing registers as much as possible and\nremoves all the unused or redundant registers.\nIt also uses scratch register manager in genHeapAlloc for\nbetter register allocation.\n\nSigned-off-by: Ehsan Kiani Far <ehsan.kianifar@gmail.com>\n', 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca'], 'files_changed': ['runtime/compiler/z/codegen/J9TreeEvaluator.cpp'], 'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287, 'file_stats': {'runtime/compiler/z/codegen/J9TreeEvaluator.cpp': {'lines_added': 80, 'lines_deleted': 207, 'lines_changed': 287}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 11, 'recent_experience': 4}
2025-04-10 06:03:54,768 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,768 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,768 - __main__ - INFO - Commit Info 
{'hash': 'eac4b61c53eac94cf45ae8750cffaab4d7807a0c', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 20, 38), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 19, 30, 19), 'message': 'Error if invokeinterface receiver is reference array\n\nThrow an error during bytecode verification if the receiver\nof invokeinterface is a reference array\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['015b58ddc90aeb9143258eb419ee2fb1f4110eec'], 'files_changed': ['runtime/bcverify/rtverify.c', 'runtime/oti/bytecodewalk.h'], 'lines_added': 11, 'lines_deleted': 10, 'lines_changed': 21, 'file_stats': {'runtime/bcverify/rtverify.c': {'lines_added': 7, 'lines_deleted': 6, 'lines_changed': 13}, 'runtime/oti/bytecodewalk.h': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}}, 'subsystems': {'runtime'}, 'entropy': 0.9587118829771317, 'author_experience': 366, 'recent_experience': 34}
2025-04-10 06:03:54,768 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,768 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,768 - __main__ - INFO - Commit Info 
{'hash': '200b783f4002902f3ff46d2103f9ee7916f966dc', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 18, 34, 18), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 24, 18, 34, 18), 'message': 'Merge pull request #19912 from JasonFengJ9/jdk24access\n\nJDK24 removes JavaLangAccess.stringConcatHelperPrepend()', 'parents': ['9d6010511102076fb18bfcfe2b3609c4fb9c94f6', 'badec667bdf46d05fc2c6171630cf10a5fb290fc'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 70}
2025-04-10 06:03:54,768 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,768 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,768 - __main__ - INFO - Commit Info 
{'hash': 'badec667bdf46d05fc2c6171630cf10a5fb290fc', 'author': 'Jason Feng <fengj@ca.ibm.com>', 'author_name': 'Jason Feng', 'author_email': 'fengj@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 17, 23, 5), 'committer': 'Jason Feng <fengj@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 17, 23, 5), 'message': 'JDK24 removes JavaLangAccess.stringConcatHelperPrepend()\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>', 'parents': ['9d6010511102076fb18bfcfe2b3609c4fb9c94f6'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/Access.java'], 'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/Access.java': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}}, 'subsystems': {'jcl'}, 'entropy': 0.0, 'author_experience': 641, 'recent_experience': 11}
2025-04-10 06:03:54,768 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,779 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,779 - __main__ - INFO - Commit Info 
{'hash': '9d6010511102076fb18bfcfe2b3609c4fb9c94f6', 'author': 'Julian Wang <zlwang@ca.ibm.com>', 'author_name': 'Julian Wang', 'author_email': 'zlwang@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 24, 5, 15, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 24, 5, 15, 51), 'message': 'Merge pull request #17969 from midronij/offheap-unsafe\n\nAdjust arguments to Unsafe array operations while offheap is enabled', 'parents': ['5e3816d311ca2d4daeb315c8687d6d1d87e6234f', '4cffe9c32538f6af3a2c24e5ea0a2a18c1f31ead'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 746, 'lines_deleted': 158, 'lines_changed': 904, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 735, 'lines_deleted': 156, 'lines_changed': 891}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 11, 'lines_deleted': 2, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.10860192578701666, 'author_experience': 62, 'recent_experience': 4}
2025-04-10 06:03:54,779 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,779 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,779 - __main__ - INFO - Commit Info 
{'hash': '0076e93ad94783bd40b93434f37293ccf67282d0', 'author': 'Jack Lu <Jack.S.Lu@ibm.com>', 'author_name': 'Jack Lu', 'author_email': 'Jack.S.Lu@ibm.com', 'authored_date': datetime.datetime(2024, 7, 4, 0, 51, 14), 'committer': 'Jack Lu <Jack.S.Lu@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 24, 1, 0, 11), 'message': 'Refactor Continuation cache profiling\n\n- Add runtime option to JVM for reporting cache usage\n- Report vthread stack size related data\n\nSigned-off-by: Jack Lu <Jack.S.Lu@ibm.com>\n', 'parents': ['5e3816d311ca2d4daeb315c8687d6d1d87e6234f'], 'files_changed': ['runtime/oti/j9consts.h', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/ContinuationHelpers.cpp', 'runtime/vm/jvminit.c'], 'lines_added': 54, 'lines_deleted': 19, 'lines_changed': 73, 'file_stats': {'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 6, 'lines_deleted': 1, 'lines_changed': 7}, 'runtime/vm/ContinuationHelpers.cpp': {'lines_added': 4, 'lines_deleted': 4, 'lines_changed': 8}, 'runtime/vm/jvminit.c': {'lines_added': 43, 'lines_deleted': 14, 'lines_changed': 57}}, 'subsystems': {'runtime'}, 'entropy': 1.0374106511842158, 'author_experience': 330, 'recent_experience': 2}
2025-04-10 06:03:54,786 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,786 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,786 - __main__ - INFO - Commit Info 
{'hash': '5e3816d311ca2d4daeb315c8687d6d1d87e6234f', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 23, 30, 30), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 23, 23, 30, 30), 'message': 'Merge pull request #19904 from pshipton/replaceall\n\nString.replaceAll() fast path must check regex is compressed', 'parents': ['015b58ddc90aeb9143258eb419ee2fb1f4110eec', '312c8246ed317f2f551926f322633ae522ae6e41'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/String.java', 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java'], 'lines_added': 56, 'lines_deleted': 8, 'lines_changed': 64, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/String.java': {'lines_added': 42, 'lines_deleted': 8, 'lines_changed': 50}, 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java': {'lines_added': 14, 'lines_deleted': 0, 'lines_changed': 14}}, 'subsystems': {'jcl', 'test'}, 'entropy': 0.7578784625383954, 'author_experience': 2221, 'recent_experience': 72}
2025-04-10 06:03:54,786 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,786 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,786 - __main__ - INFO - Commit Info 
{'hash': '4cffe9c32538f6af3a2c24e5ea0a2a18c1f31ead', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2024, 7, 20, 1, 33, 45), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 25, 53), 'message': 'Update documentation for Unsafe method inlining\n\nAdd comments and update existing documentation/explanations to reflect\nchanges made to inlining of Unsafe.get()/put() and compareAndSwap() to\naccommodate cases where offheap allocation is enabled.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['d1aaa914bdc62a93ff36fcf48522033148b15293'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 168, 'lines_deleted': 104, 'lines_changed': 272, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 166, 'lines_deleted': 102, 'lines_changed': 268}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.11058084476988708, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 06:03:54,786 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,786 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,786 - __main__ - INFO - Commit Info 
{'hash': 'd1aaa914bdc62a93ff36fcf48522033148b15293', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 8, 28, 19, 39, 24), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'For Unsafe.get()/put(), reorder blocks to optimize fallthrough path\n\nWhen offheap is enabled and the type of the object being operated on\nis unknown, there are three possible cases that need to be accounted\nfor regarding the type of the object being operated on for\nUnsafe.get()/put():\n\n1.) array object\n2.) java/lang/Class object\n3.) none of the above\n\nSince case (3) is the most likely, we want the block corresponding to\nthis case (directAccessBlock) to be on the fallthrough path.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['7a309afe720f309d67e3f7ff9ff3271bf9c82869'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 06:03:54,786 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,786 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,786 - __main__ - INFO - Commit Info 
{'hash': '7a309afe720f309d67e3f7ff9ff3271bf9c82869', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 8, 23, 23, 22, 59), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Skip unecessary runtime checks for Unsafe.CAS()\n\nFor Unsafe.compareAndSwap(), do not generate array check IL or adjusted\narray access block if object type is known at compile time.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['313a00c9a2d7aa3eb6c92995ca0487cc2bd81a4b'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 91, 'lines_deleted': 27, 'lines_changed': 118, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 91, 'lines_deleted': 27, 'lines_changed': 118}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 06:03:54,786 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,796 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,796 - __main__ - INFO - Commit Info 
{'hash': '313a00c9a2d7aa3eb6c92995ca0487cc2bd81a4b', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 8, 22, 22, 34, 47), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Skip unecessary runtime checks for Unsafe.get()/put()\n\nWhen the type of the object being passed in to Unsafe.get()/put() is\nknown at compile time, rather than generate runtime type checks, skip\nto determining and generating the appropriate access block. There are\ntwo cases in which we can do this:\n\n1.) If the object is known to be an array, only generate the\n    arrayDirectAccessBlock and directAccessBlock (in case NULLCHK\n    fails).\n2.) If the object is known to be non-array, non-java/lang/Class,\n    and non-java/lang/Object, only generate the directAccessBlock.\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['ff51db6a2a5fc7e6dcac0df88c211226c43d3ecd'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp', 'runtime/compiler/optimizer/J9Inliner.hpp'], 'lines_added': 384, 'lines_deleted': 99, 'lines_changed': 483, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 373, 'lines_deleted': 97, 'lines_changed': 470}, 'runtime/compiler/optimizer/J9Inliner.hpp': {'lines_added': 11, 'lines_deleted': 2, 'lines_changed': 13}}, 'subsystems': {'runtime'}, 'entropy': 0.17867714028218293, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 06:03:54,797 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,797 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,799 - __main__ - INFO - Commit Info 
{'hash': 'ff51db6a2a5fc7e6dcac0df88c211226c43d3ecd', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 7, 18, 23, 42, 50), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Offheap Adjustments for Unsafe.compareAndSwap()\n\nWhen Unsafe.compareAndSwap() is called on an array and offheap changes\nare enabled, adjust arguments so that dataAddr is passed in as\nbase address of object\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['1ed9c082188e07459a169e528bb0c8f67be20f21'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 94, 'lines_deleted': 10, 'lines_changed': 104, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 94, 'lines_deleted': 10, 'lines_changed': 104}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 06:03:54,799 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,799 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,800 - __main__ - INFO - Commit Info 
{'hash': '1ed9c082188e07459a169e528bb0c8f67be20f21', 'author': 'midronij <jackie.midroni@ibm.com>', 'author_name': 'midronij', 'author_email': 'jackie.midroni@ibm.com', 'authored_date': datetime.datetime(2023, 6, 30, 12, 46, 46), 'committer': 'midronij <jackie.midroni@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 22, 20, 53), 'message': 'Offheap Adjustments for Unsafe.get()/put()\n\nWhen Unsafe.get()/put() is called on an array and offheap changes\nare enabled, adjust arguments so that dataAddr is passed in as\nbase address of object\n\nSigned-off-by: midronij <jackie.midroni@ibm.com>\n', 'parents': ['c05e25e984f5a110e1a5a9f344fe84777293d1d0'], 'files_changed': ['runtime/compiler/optimizer/InlinerTempForJ9.cpp'], 'lines_added': 106, 'lines_deleted': 15, 'lines_changed': 121, 'file_stats': {'runtime/compiler/optimizer/InlinerTempForJ9.cpp': {'lines_added': 106, 'lines_deleted': 15, 'lines_changed': 121}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 36, 'recent_experience': 0}
2025-04-10 06:03:54,801 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,801 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,801 - __main__ - INFO - Commit Info 
{'hash': '312c8246ed317f2f551926f322633ae522ae6e41', 'author': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'author_name': 'Peter Shipton', 'author_email': 'Peter_Shipton@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 18, 16, 59), 'committer': 'Peter Shipton <Peter_Shipton@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 23, 21, 34, 56), 'message': 'String.replaceAll() fast path must check regex is compressed\n\nAlso, return the original String in the fast paths when nothing is\nreplaced.\n\nIssue https://github.com/eclipse-openj9/openj9/issues/19903\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>', 'parents': ['015b58ddc90aeb9143258eb419ee2fb1f4110eec'], 'files_changed': ['jcl/src/java.base/share/classes/java/lang/String.java', 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java'], 'lines_added': 56, 'lines_deleted': 8, 'lines_changed': 64, 'file_stats': {'jcl/src/java.base/share/classes/java/lang/String.java': {'lines_added': 42, 'lines_deleted': 8, 'lines_changed': 50}, 'test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java': {'lines_added': 14, 'lines_deleted': 0, 'lines_changed': 14}}, 'subsystems': {'jcl', 'test'}, 'entropy': 0.7578784625383954, 'author_experience': 3908, 'recent_experience': 70}
2025-04-10 06:03:54,801 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,801 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,801 - __main__ - INFO - Commit Info 
{'hash': '015b58ddc90aeb9143258eb419ee2fb1f4110eec', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 23, 0, 19, 33), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 23, 0, 19, 33), 'message': 'Merge pull request #19897 from babsingh/main8\n\nRemove the extra indentation from switch case statements', 'parents': ['7affcea260e9ee7f1fee9ec1f1831c3c16018082', '95a694857ec84ffaf234eea2b87d364f17ab2e6e'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 72}
2025-04-10 06:03:54,806 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,806 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,807 - __main__ - INFO - Commit Info 
{'hash': '7affcea260e9ee7f1fee9ec1f1831c3c16018082', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 23, 47, 13), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 22, 23, 47, 13), 'message': 'Merge pull request #19895 from theresa-m/maxclassname\n\nEnforce maximum name size during class loading', 'parents': ['578e8369908b634cc23e719226ad7545d4cfa173', '323b8b999af9b4be1796bef218c483c22209355a'], 'files_changed': ['runtime/j9vm/j7vmi.c', 'runtime/jcl/common/jcldefine.c', 'runtime/nls/j9vm/j9vm.nls', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/classsupport.c'], 'lines_added': 61, 'lines_deleted': 2, 'lines_changed': 63, 'file_stats': {'runtime/j9vm/j7vmi.c': {'lines_added': 19, 'lines_deleted': 1, 'lines_changed': 20}, 'runtime/jcl/common/jcldefine.c': {'lines_added': 16, 'lines_deleted': 0, 'lines_changed': 16}, 'runtime/nls/j9vm/j9vm.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/vm/classsupport.c': {'lines_added': 15, 'lines_deleted': 1, 'lines_changed': 16}}, 'subsystems': {'runtime'}, 'entropy': 2.134580775053083, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 06:03:54,808 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,809 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,809 - __main__ - INFO - Commit Info 
{'hash': '578e8369908b634cc23e719226ad7545d4cfa173', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 22, 24, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 22, 22, 24, 51), 'message': 'Merge pull request #19896 from babsingh/main1\n\nFix compiler error, unused variable: currentThread', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767', 'c2723578d03d22c18b0607fc9b6ca1deabe2c552'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 06:03:54,809 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,810 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,811 - __main__ - INFO - Commit Info 
{'hash': '95a694857ec84ffaf234eea2b87d364f17ab2e6e', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 21, 32, 17), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 22, 21, 45, 3), 'message': 'Remove the extra indentation from switch case statements\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 33, 'lines_deleted': 34, 'lines_changed': 67}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 06:03:54,811 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,812 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,812 - __main__ - INFO - Commit Info 
{'hash': 'c2723578d03d22c18b0607fc9b6ca1deabe2c552', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 21, 13, 14), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 22, 21, 15, 18), 'message': 'Fix compiler error, unused variable: currentThread\n\nRelated: https://github.com/eclipse-openj9/openj9/pull/19871#discussion_r1686758594\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 06:03:54,812 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,812 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,812 - __main__ - INFO - Commit Info 
{'hash': '323b8b999af9b4be1796bef218c483c22209355a', 'author': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'author_name': 'Theresa Mammarella', 'author_email': 'Theresa.T.Mammarella@ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 20, 12, 10), 'committer': 'Theresa Mammarella <Theresa.T.Mammarella@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 22, 20, 12, 10), 'message': 'Enforce maximum name size during class loading\n\nClass names are stored as a UTF8 string and length is represented by\n two bytes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>\n', 'parents': ['3be60c0a813efeeeda8e0fbb1f63d921fc404767'], 'files_changed': ['runtime/j9vm/j7vmi.c', 'runtime/jcl/common/jcldefine.c', 'runtime/nls/j9vm/j9vm.nls', 'runtime/oti/j9nonbuilder.h', 'runtime/vm/classsupport.c'], 'lines_added': 61, 'lines_deleted': 2, 'lines_changed': 63, 'file_stats': {'runtime/j9vm/j7vmi.c': {'lines_added': 19, 'lines_deleted': 1, 'lines_changed': 20}, 'runtime/jcl/common/jcldefine.c': {'lines_added': 16, 'lines_deleted': 0, 'lines_changed': 16}, 'runtime/nls/j9vm/j9vm.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9nonbuilder.h': {'lines_added': 4, 'lines_deleted': 0, 'lines_changed': 4}, 'runtime/vm/classsupport.c': {'lines_added': 15, 'lines_deleted': 1, 'lines_changed': 16}}, 'subsystems': {'runtime'}, 'entropy': 2.134580775053083, 'author_experience': 366, 'recent_experience': 35}
2025-04-10 06:03:54,816 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,816 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,817 - __main__ - INFO - Commit Info 
{'hash': '3be60c0a813efeeeda8e0fbb1f63d921fc404767', 'author': 'Hang Shao <hangshao@ca.ibm.com>', 'author_name': 'Hang Shao', 'author_email': 'hangshao@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 22, 19, 55, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 22, 19, 55, 51), 'message': 'Merge pull request #19871 from babsingh/main1\n\nAdd virtual thread support for JVMTI GetObjectMonitorUsage', 'parents': ['4ce1a43f903d34929bc1613033bf778ed54a24b9', 'aeef1385814973738bdf1732a3fbe5bbec34d212'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 97, 'lines_deleted': 81, 'lines_changed': 178, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 97, 'lines_deleted': 81, 'lines_changed': 178}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 333, 'recent_experience': 33}
2025-04-10 06:03:54,818 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,818 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,818 - __main__ - INFO - Commit Info 
{'hash': '4ce1a43f903d34929bc1613033bf778ed54a24b9', 'author': 'Joran Siu <joransiu@ca.ibm.com>', 'author_name': 'Joran Siu', 'author_email': 'joransiu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 20, 22, 9, 20), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 20, 22, 9, 20), 'message': 'Merge pull request #19875 from dchopra001/libFFI_structs_fix\n\n', 'parents': ['08e67ec7900b8a03aa79cdb31fb0de28557d51ed', '5b2a07138fe11cb30c1492b8857c4749f7bf180a'], 'files_changed': ['runtime/libffi/z/sysvz64.s'], 'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21, 'file_stats': {'runtime/libffi/z/sysvz64.s': {'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 98, 'recent_experience': 3}
2025-04-10 06:03:54,818 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,818 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,818 - __main__ - INFO - Commit Info 
{'hash': '08e67ec7900b8a03aa79cdb31fb0de28557d51ed', 'author': 'Babneet Singh <babsingh@users.noreply.github.com>', 'author_name': 'Babneet Singh', 'author_email': 'babsingh@users.noreply.github.com', 'authored_date': datetime.datetime(2024, 7, 20, 1, 35, 32), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 20, 1, 35, 32), 'message': 'Merge pull request #19842 from fengxue-IS/vthread-alive-check\n\nUpdate VThread alive check to check continuation state', 'parents': ['881038dfc97ab68cf93dcce94812c48a2f47be3f', 'b14cd71e11ecc5ff469b1cb3be6363107a151b65'], 'files_changed': ['runtime/jvmti/jvmtiHelpers.cpp'], 'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9, 'file_stats': {'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 196, 'recent_experience': 5}
2025-04-10 06:03:54,818 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,818 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,818 - __main__ - INFO - Commit Info 
{'hash': '5b2a07138fe11cb30c1492b8857c4749f7bf180a', 'author': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'author_name': 'Dhruv Chopra', 'author_email': 'Dhruv.C.Chopra@ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 6, 33, 55), 'committer': 'Dhruv Chopra <Dhruv.C.Chopra@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 40, 46), 'message': "Cap R0's value to 3 when handling complex structs in sysvz64.s\n\nR0's value is used to calculate a branch offset. This value can be\nbetween 0 and 3. Due to the nature of how complex types are passed in\nregisters, it's possible to increment this value beyond 3. This commit adds\nsome support code to cap that value at 3 before any branch offsets are computed.\n", 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca'], 'files_changed': ['runtime/libffi/z/sysvz64.s'], 'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21, 'file_stats': {'runtime/libffi/z/sysvz64.s': {'lines_added': 13, 'lines_deleted': 8, 'lines_changed': 21}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 157, 'recent_experience': 1}
2025-04-10 06:03:54,818 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,818 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,818 - __main__ - INFO - Commit Info 
{'hash': '881038dfc97ab68cf93dcce94812c48a2f47be3f', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 21, 34, 28), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 34, 28), 'message': 'Merge pull request #19870 from mahdipub/fix_issue_with_non_numeric_sdk_versions\n\nFix error when param SDK_VERSION is not numeric', 'parents': ['865b57546519ff9f1cf4fb9006970cac20f2e292', 'eac681f0cee21af67657f575a366590b937a2a13'], 'files_changed': ['buildenv/jenkins/common/build.groovy'], 'lines_added': 2, 'lines_deleted': 1, 'lines_changed': 3, 'file_stats': {'buildenv/jenkins/common/build.groovy': {'lines_added': 2, 'lines_deleted': 1, 'lines_changed': 3}}, 'subsystems': {'buildenv'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 06:03:54,818 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,818 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,818 - __main__ - INFO - Commit Info 
{'hash': 'aeef1385814973738bdf1732a3fbe5bbec34d212', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 6, 19, 19, 38, 28), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 30, 15), 'message': 'Add virtual thread support for JVMTI GetObjectMonitorUsage\n\n- RI has removed support for virtual threads if an object monitor is\nowned by a virtual thread.\n- Support has also been removed for virtual threads that are waiting\nbe notified or own a monitor.\n- Also, new tests show that waiting to be notified threads do not\nrepeat and only appear in one list. This has been corrected in OpenJ9.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['fba3bfe9ef06509646e8f3cd520de51c6a3069c6'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 60, 'lines_deleted': 42, 'lines_changed': 102, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 60, 'lines_deleted': 42, 'lines_changed': 102}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 06:03:54,827 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,828 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,828 - __main__ - INFO - Commit Info 
{'hash': '865b57546519ff9f1cf4fb9006970cac20f2e292', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 21, 17, 54), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 21, 17, 54), 'message': 'Merge pull request #19806 from cjjdespres/fix-aotcache-decls\n\nImprove JITServer AOT cache implementation portability', 'parents': ['ab58e586f3a84a6605fae78d0f57fe32827883b2', '4b9cac2d8285c59ab5fba7ef1b93ae9083805cc3'], 'files_changed': ['runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTCache.hpp', 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp'], 'lines_added': 93, 'lines_deleted': 56, 'lines_changed': 149, 'file_stats': {'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 45, 'lines_deleted': 17, 'lines_changed': 62}, 'runtime/compiler/runtime/JITServerAOTCache.hpp': {'lines_added': 46, 'lines_deleted': 37, 'lines_changed': 83}, 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 1.1366957416314165, 'author_experience': 1271, 'recent_experience': 37}
2025-04-10 06:03:54,829 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,829 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,829 - __main__ - INFO - Commit Info 
{'hash': 'ab58e586f3a84a6605fae78d0f57fe32827883b2', 'author': 'Joran Siu <joransiu@ca.ibm.com>', 'author_name': 'Joran Siu', 'author_email': 'joransiu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 20, 19, 9), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 20, 19, 9), 'message': 'Merge pull request #19876 from keithc-ca/ifa\n\n', 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca', '8ef7ddb4e88557452f909b76b8121945f0470caf'], 'files_changed': ['test/functional/NativeTest/nativeTestSettings.mk'], 'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66, 'file_stats': {'test/functional/NativeTest/nativeTestSettings.mk': {'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 98, 'recent_experience': 3}
2025-04-10 06:03:54,829 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,829 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,829 - __main__ - INFO - Commit Info 
{'hash': '8ef7ddb4e88557452f909b76b8121945f0470caf', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 18, 6, 25), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 18, 6, 25), 'message': 'Correct path to libj9ifa29.so for Java 11+\n\nSince the switch to using "mixed references", there no longer\nis a "compressedrefs" folder.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['b2674c2d74382482f98a3445e32655a27ca5d6ca'], 'files_changed': ['test/functional/NativeTest/nativeTestSettings.mk'], 'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66, 'file_stats': {'test/functional/NativeTest/nativeTestSettings.mk': {'lines_added': 32, 'lines_deleted': 34, 'lines_changed': 66}}, 'subsystems': {'test'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 06:03:54,829 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,829 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': 'b14cd71e11ecc5ff469b1cb3be6363107a151b65', 'author': 'Jack Lu <Jack.S.Lu@ibm.com>', 'author_name': 'Jack Lu', 'author_email': 'Jack.S.Lu@ibm.com', 'authored_date': datetime.datetime(2024, 7, 10, 23, 26, 25), 'committer': 'Jack Lu <Jack.S.Lu@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 3, 10, 22), 'message': 'Update VThread alive check to check continuation state\n\nCheck if the continuation is finished to determine more accurately\nif a virtual thread is alive.\n\nRelated: https://github.com/eclipse-openj9/openj9/issues/18738#issuecomment-2218824062\n\nSigned-off-by: Jack Lu <Jack.S.Lu@ibm.com>\n', 'parents': ['cc3ddb896c24d2e3931b1e833badf74050bcd939'], 'files_changed': ['runtime/jvmti/jvmtiHelpers.cpp'], 'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9, 'file_stats': {'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 8, 'lines_deleted': 1, 'lines_changed': 9}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 330, 'recent_experience': 2}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': 'b2674c2d74382482f98a3445e32655a27ca5d6ca', 'author': 'Tobi <atobia@ca.ibm.com>', 'author_name': 'Tobi', 'author_email': 'atobia@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 2, 24, 8), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 2, 24, 8), 'message': 'Merge pull request #19866 from keithc-ca/jfr_new_delete\n\nInline VM_JFRConstantPoolTypes into VM_JFRChunkWriter', 'parents': ['79f9d1c662d87a56003af6b9fdcb0583bd292c78', '2a1ae31e90942ff083a781f3d0aaf32e375f7851'], 'files_changed': ['runtime/vm/BufferWriter.hpp', 'runtime/vm/JFRChunkWriter.cpp', 'runtime/vm/JFRChunkWriter.hpp'], 'lines_added': 175, 'lines_deleted': 174, 'lines_changed': 349, 'file_stats': {'runtime/vm/BufferWriter.hpp': {'lines_added': 28, 'lines_deleted': 31, 'lines_changed': 59}, 'runtime/vm/JFRChunkWriter.cpp': {'lines_added': 61, 'lines_deleted': 61, 'lines_changed': 122}, 'runtime/vm/JFRChunkWriter.hpp': {'lines_added': 86, 'lines_deleted': 82, 'lines_changed': 168}}, 'subsystems': {'runtime'}, 'entropy': 1.4713376040840003, 'author_experience': 675, 'recent_experience': 24}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': '79f9d1c662d87a56003af6b9fdcb0583bd292c78', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 19, 1, 29, 28), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 19, 1, 29, 28), 'message': 'Merge pull request #19826 from Deigue/test-nojvmtiexport\n\nAdd Open XL equivalent for EXPORTALL in jvmtitests', 'parents': ['ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535', '0ba67381545ba81b41bfaa04b3677d2b8b00901f'], 'files_changed': ['runtime/tests/jvmtitests/agent/CMakeLists.txt', 'runtime/tests/jvmtitests/src/CMakeLists.txt'], 'lines_added': 10, 'lines_deleted': 3, 'lines_changed': 13, 'file_stats': {'runtime/tests/jvmtitests/agent/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 2, 'lines_changed': 7}, 'runtime/tests/jvmtitests/src/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.9957274520849256, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': 'fba3bfe9ef06509646e8f3cd520de51c6a3069c6', 'author': 'Babneet Singh <sbabneet@ca.ibm.com>', 'author_name': 'Babneet Singh', 'author_email': 'sbabneet@ca.ibm.com', 'authored_date': datetime.datetime(2024, 6, 19, 8, 14, 4), 'committer': 'Babneet Singh <sbabneet@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 19, 0, 25, 17), 'message': 'Update formatting in jvmtiObject.c to follow coding standards\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>\n', 'parents': ['ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535'], 'files_changed': ['runtime/jvmti/jvmtiObject.c'], 'lines_added': 46, 'lines_deleted': 48, 'lines_changed': 94, 'file_stats': {'runtime/jvmti/jvmtiObject.c': {'lines_added': 46, 'lines_deleted': 48, 'lines_changed': 94}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 500, 'recent_experience': 13}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': 'ab1ec9a10e72274ef8afe5329b7f7ca46a9d0535', 'author': 'Babneet Singh <babsingh@users.noreply.github.com>', 'author_name': 'Babneet Singh', 'author_email': 'babsingh@users.noreply.github.com', 'authored_date': datetime.datetime(2024, 7, 18, 23, 49, 4), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 23, 49, 4), 'message': 'Merge pull request #19873 from keithc-ca/jvmti\n\nMove new messages to the end of jvmti.nls', 'parents': ['679e18300d742b857dfead7a6f86650ab4ed1a06', 'b20800d7deacf77a1604ebe5456db0a09bea802d'], 'files_changed': ['runtime/nls/j9ti/jvmti.nls'], 'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14, 'file_stats': {'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 196, 'recent_experience': 6}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': '679e18300d742b857dfead7a6f86650ab4ed1a06', 'author': 'Henry Zongaro <zongaro@ca.ibm.com>', 'author_name': 'Henry Zongaro', 'author_email': 'zongaro@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 23, 3, 34), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 23, 3, 34), 'message': 'Merge pull request #19856 from cjjdespres/fix-j9node-assert\n\nUpdate _unionPropertyA assert', 'parents': ['129082feb8707adf77052326e45a89a572aedd81', '04930aa4a131fe0488464402e2256406de036cfe'], 'files_changed': ['runtime/compiler/il/J9Node.cpp'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/compiler/il/J9Node.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 273, 'recent_experience': 14}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': '129082feb8707adf77052326e45a89a572aedd81', 'author': "Irwin D'Souza <dsouzai.gh@gmail.com>", 'author_name': "Irwin D'Souza", 'author_email': 'dsouzai.gh@gmail.com', 'authored_date': datetime.datetime(2024, 7, 18, 22, 36, 32), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 22, 36, 32), 'message': 'Merge pull request #19863 from mpirvu/gcr\n\nDo not look at JIT startup state for turning GCR on/off', 'parents': ['c0c18a98615075600562d3b3ec88d04dcc8c7d6e', '2e4a07017417b887c5dfb6530305a41ba27199b8'], 'files_changed': ['runtime/compiler/control/HookedByTheJit.cpp'], 'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26, 'file_stats': {'runtime/compiler/control/HookedByTheJit.cpp': {'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 730, 'recent_experience': 18}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': 'c0c18a98615075600562d3b3ec88d04dcc8c7d6e', 'author': 'Marius Pirvu <mpirvu@ca.ibm.com>', 'author_name': 'Marius Pirvu', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 22, 26, 51), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 22, 26, 51), 'message': 'Merge pull request #19847 from cjjdespres/send-cached-hash\n\nSend cached J9ROMClass hashes to JITServer', 'parents': ['c70cb5d2ded6cc888e8ae6b0c3534966c20b6c37', '3a50aeb25d3cd5fa9dfc7a9f9682e6d35d870fb1'], 'files_changed': ['runtime/compiler/control/JITServerCompilationThread.cpp', 'runtime/compiler/control/JITServerHelpers.cpp', 'runtime/compiler/control/JITServerHelpers.hpp', 'runtime/compiler/net/CommunicationStream.hpp', 'runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp'], 'lines_added': 88, 'lines_deleted': 41, 'lines_changed': 129, 'file_stats': {'runtime/compiler/control/JITServerCompilationThread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/control/JITServerHelpers.cpp': {'lines_added': 17, 'lines_deleted': 8, 'lines_changed': 25}, 'runtime/compiler/control/JITServerHelpers.hpp': {'lines_added': 3, 'lines_deleted': 2, 'lines_changed': 5}, 'runtime/compiler/net/CommunicationStream.hpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 38, 'lines_deleted': 26, 'lines_changed': 64}, 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp': {'lines_added': 21, 'lines_deleted': 0, 'lines_changed': 21}, 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp': {'lines_added': 3, 'lines_deleted': 1, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 2.1589426732747357, 'author_experience': 1271, 'recent_experience': 37}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': 'b20800d7deacf77a1604ebe5456db0a09bea802d', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 18, 21, 55, 48), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 21, 55, 48), 'message': 'Move new messages to the end of jvmti.nls\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['c70cb5d2ded6cc888e8ae6b0c3534966c20b6c37'], 'files_changed': ['runtime/nls/j9ti/jvmti.nls'], 'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14, 'file_stats': {'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 7, 'lines_changed': 14}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 2221, 'recent_experience': 73}
2025-04-10 06:03:54,834 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,834 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,834 - __main__ - INFO - Commit Info 
{'hash': '4b9cac2d8285c59ab5fba7ef1b93ae9083805cc3', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 6, 26, 20, 24, 34), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 20, 39, 23), 'message': 'Increase portability in AOT cache records\n\nInstead of having an AOTCacheListRecord class from which the\nAOTCacheClassChainRecord and AOTCacheWellKnownClassesRecord classes are\nderived, those classes now derive from the base AOTCacheRecord class and\ndeclare their own methods separately.\n\nThe previous class inheritance structure was not portable; both clang\nand gcc support the non-standard flexible array member extension, but\nonly gcc supports deriving from classes with a flexible array\nmember (under certain circumstances).\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n', 'parents': ['deb57b937e63263db6146720ef87ce7a12e29e57'], 'files_changed': ['runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTCache.hpp', 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp'], 'lines_added': 92, 'lines_deleted': 55, 'lines_changed': 147, 'file_stats': {'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 45, 'lines_deleted': 17, 'lines_changed': 62}, 'runtime/compiler/runtime/JITServerAOTCache.hpp': {'lines_added': 45, 'lines_deleted': 36, 'lines_changed': 81}, 'runtime/compiler/runtime/JITServerAOTSerializationRecords.hpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 1.1405701579136374, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 06:03:54,849 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,850 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,850 - __main__ - INFO - Commit Info 
{'hash': 'deb57b937e63263db6146720ef87ce7a12e29e57', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 6, 27, 2, 3, 29), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 20, 11), 'message': "Make AOTCacheRecord::setSubrecordPointers protected\n\nThis works around a bug in clang. Without this, the invocation of\nsetSubrecordPointers in the AOTCacheRecord::readRecord<> template method\nfails; clang complains that setSubrecordPointers is a private method of\nAOTCacheRecord. This shouldn't matter at all, as a method of\nAOTCacheRecord ought to be able to call the private methods of the\nAOTCacheRecord class itself, but clang issues an erroneous access error\nanyway.\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n", 'parents': ['d2b02cf3c7ae4a88c0d8a73e0bf7d7cb3418f954'], 'files_changed': ['runtime/compiler/runtime/JITServerAOTCache.hpp'], 'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2, 'file_stats': {'runtime/compiler/runtime/JITServerAOTCache.hpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 06:03:54,851 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,851 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,851 - __main__ - INFO - Commit Info 
{'hash': 'c70cb5d2ded6cc888e8ae6b0c3534966c20b6c37', 'author': 'Babneet Singh <babsingh@users.noreply.github.com>', 'author_name': 'Babneet Singh', 'author_email': 'babsingh@users.noreply.github.com', 'authored_date': datetime.datetime(2024, 7, 18, 19, 43), 'committer': 'GitHub <noreply@github.com>', 'committed_date': datetime.datetime(2024, 7, 18, 19, 43), 'message': 'Merge pull request #19855 from thallium/clear-tls-after-callback\n\nDestroy virtual thread data after VirtualThreadEnd callback', 'parents': ['0e944e75c874f243f8f14c402ea8f268bf5e78b7', '73fd01800e1ad42629d72122561d512b2ab0a939'], 'files_changed': ['runtime/include/ibmjvmti.h', 'runtime/j9vm/javanextvmi.cpp', 'runtime/jvmti/jvmtiExtensionMechanism.c', 'runtime/jvmti/jvmtiHelpers.cpp', 'runtime/jvmti/jvmtiHook.c', 'runtime/nls/j9ti/jvmti.nls', 'runtime/oti/j9consts.h', 'runtime/oti/j9vm.hdf', 'runtime/oti/jvmtiInternal.h'], 'lines_added': 36, 'lines_deleted': 3, 'lines_changed': 39, 'file_stats': {'runtime/include/ibmjvmti.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/j9vm/javanextvmi.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiExtensionMechanism.c': {'lines_added': 12, 'lines_deleted': 0, 'lines_changed': 12}, 'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiHook.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/oti/j9vm.hdf': {'lines_added': 10, 'lines_deleted': 0, 'lines_changed': 10}, 'runtime/oti/jvmtiInternal.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 2.5702659262486396, 'author_experience': 196, 'recent_experience': 6}
2025-04-10 06:03:54,851 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,851 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,851 - __main__ - INFO - Commit Info 
{'hash': '3a50aeb25d3cd5fa9dfc7a9f9682e6d35d870fb1', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 7, 11, 0, 1, 10), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 0, 31, 9), 'message': 'Send cached J9ROMClass hashes to JITServer\n\nIf a JITServer client has a cached hash for a ROMClass, it may now send\nthis hash to the server to avoid the server having to re-hash (and\npossibly re-pack) the ROMClass received from the client. The server will\nstore this cached hash in its shared ROMClass cache. Currently, only the\nstored hashes of generated classes are sent to the server.\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n', 'parents': ['d2b02cf3c7ae4a88c0d8a73e0bf7d7cb3418f954'], 'files_changed': ['runtime/compiler/control/JITServerCompilationThread.cpp', 'runtime/compiler/control/JITServerHelpers.cpp', 'runtime/compiler/control/JITServerHelpers.hpp', 'runtime/compiler/net/CommunicationStream.hpp', 'runtime/compiler/runtime/JITServerAOTCache.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp', 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp', 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp'], 'lines_added': 88, 'lines_deleted': 41, 'lines_changed': 129, 'file_stats': {'runtime/compiler/control/JITServerCompilationThread.cpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/control/JITServerHelpers.cpp': {'lines_added': 17, 'lines_deleted': 8, 'lines_changed': 25}, 'runtime/compiler/control/JITServerHelpers.hpp': {'lines_added': 3, 'lines_deleted': 2, 'lines_changed': 5}, 'runtime/compiler/net/CommunicationStream.hpp': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerAOTCache.cpp': {'lines_added': 38, 'lines_deleted': 26, 'lines_changed': 64}, 'runtime/compiler/runtime/JITServerAOTDeserializer.cpp': {'lines_added': 21, 'lines_deleted': 0, 'lines_changed': 21}, 'runtime/compiler/runtime/JITServerAOTDeserializer.hpp': {'lines_added': 2, 'lines_deleted': 0, 'lines_changed': 2}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/compiler/runtime/JITServerSharedROMClassCache.hpp': {'lines_added': 3, 'lines_deleted': 1, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 2.1589426732747357, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 06:03:54,851 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,851 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,851 - __main__ - INFO - Commit Info 
{'hash': '04930aa4a131fe0488464402e2256406de036cfe', 'author': 'Christian Despres <despresc@ibm.com>', 'author_name': 'Christian Despres', 'author_email': 'despresc@ibm.com', 'authored_date': datetime.datetime(2024, 7, 11, 20, 54, 53), 'committer': 'Christian Despres <despresc@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 18, 0, 1, 20), 'message': "Update _unionPropertyA assert\n\nIf hasPinningArrayPointer() is true for the Node, but the Node is using\nthe node extension to record the array pointer\n(supportsPinningArrayPointerInNodeExtension() is true), then it's not\nusing the UnionPropertyA field to record that information. In that case,\nit's not a potentially conflicting use of the _unionPropertyA field.\n\nSigned-off-by: Christian Despres <despresc@ibm.com>\n", 'parents': ['d2b02cf3c7ae4a88c0d8a73e0bf7d7cb3418f954'], 'files_changed': ['runtime/compiler/il/J9Node.cpp'], 'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4, 'file_stats': {'runtime/compiler/il/J9Node.cpp': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 222, 'recent_experience': 19}
2025-04-10 06:03:54,851 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,859 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,860 - __main__ - INFO - Commit Info 
{'hash': '73fd01800e1ad42629d72122561d512b2ab0a939', 'author': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'author_name': 'Gengchen Tuo', 'author_email': 'gengchen.tuo@ibm.com', 'authored_date': datetime.datetime(2024, 7, 16, 19, 12, 45), 'committer': 'Gengchen Tuo <gengchen.tuo@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 17, 23, 53, 21), 'message': 'Add JVMTI VirtualThreadDestroy Event\n\nCurrently destroyThreadData() is hooked onto the VirtualThreadEnd event\nwhich is called before the event callback. In JDWP, the agent uses TLS\nto associate nodes in the running thread list. Clearing TLS before\nthe event callback makes the agent lose track of the node thus failed to\nremove existed virtual threads from the list. This commit adds JVMTI\nVirtualThreadDestroy event which is triggered after VirtualThreadEnd and\njvmtiHookVirtualThreadDestroy() is hooked onto VirtualThreadDestroy\nevent.\n\nFixes:\nhttps://github.com/ibmruntimes/Semeru-Runtimes/issues/80\nhttps://github.com/eclipse-openj9/openj9/issues/19759\n\nSigned-off-by: Gengchen Tuo <gengchen.tuo@ibm.com>\n', 'parents': ['0e944e75c874f243f8f14c402ea8f268bf5e78b7'], 'files_changed': ['runtime/include/ibmjvmti.h', 'runtime/j9vm/javanextvmi.cpp', 'runtime/jvmti/jvmtiExtensionMechanism.c', 'runtime/jvmti/jvmtiHelpers.cpp', 'runtime/jvmti/jvmtiHook.c', 'runtime/nls/j9ti/jvmti.nls', 'runtime/oti/j9consts.h', 'runtime/oti/j9vm.hdf', 'runtime/oti/jvmtiInternal.h'], 'lines_added': 36, 'lines_deleted': 3, 'lines_changed': 39, 'file_stats': {'runtime/include/ibmjvmti.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/j9vm/javanextvmi.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiExtensionMechanism.c': {'lines_added': 12, 'lines_deleted': 0, 'lines_changed': 12}, 'runtime/jvmti/jvmtiHelpers.cpp': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}, 'runtime/jvmti/jvmtiHook.c': {'lines_added': 2, 'lines_deleted': 2, 'lines_changed': 4}, 'runtime/nls/j9ti/jvmti.nls': {'lines_added': 7, 'lines_deleted': 0, 'lines_changed': 7}, 'runtime/oti/j9consts.h': {'lines_added': 1, 'lines_deleted': 1, 'lines_changed': 2}, 'runtime/oti/j9vm.hdf': {'lines_added': 10, 'lines_deleted': 0, 'lines_changed': 10}, 'runtime/oti/jvmtiInternal.h': {'lines_added': 1, 'lines_deleted': 0, 'lines_changed': 1}}, 'subsystems': {'runtime'}, 'entropy': 2.5702659262486396, 'author_experience': 86, 'recent_experience': 0}
2025-04-10 06:03:54,861 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,861 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,862 - __main__ - INFO - Commit Info 
{'hash': '2a1ae31e90942ff083a781f3d0aaf32e375f7851', 'author': 'Keith W. Campbell <keithc@ca.ibm.com>', 'author_name': 'Keith W. Campbell', 'author_email': 'keithc@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 12, 3, 0, 16), 'committer': 'Keith W. Campbell <keithc@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 17, 22, 11, 38), 'message': 'Inline VM_JFRConstantPoolTypes into VM_JFRChunkWriter\n\n* avoid using new/delete so libstdc++.so is not needed at runtime\n\n* tidy up\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>', 'parents': ['bb41a039ea15b5b862416d39fac00365642cbffd'], 'files_changed': ['runtime/vm/BufferWriter.hpp', 'runtime/vm/JFRChunkWriter.cpp', 'runtime/vm/JFRChunkWriter.hpp'], 'lines_added': 175, 'lines_deleted': 174, 'lines_changed': 349, 'file_stats': {'runtime/vm/BufferWriter.hpp': {'lines_added': 28, 'lines_deleted': 31, 'lines_changed': 59}, 'runtime/vm/JFRChunkWriter.cpp': {'lines_added': 61, 'lines_deleted': 61, 'lines_changed': 122}, 'runtime/vm/JFRChunkWriter.hpp': {'lines_added': 86, 'lines_deleted': 82, 'lines_changed': 168}}, 'subsystems': {'runtime'}, 'entropy': 1.4713376040840003, 'author_experience': 2221, 'recent_experience': 74}
2025-04-10 06:03:54,862 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,862 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,862 - __main__ - INFO - Commit Info 
{'hash': '2e4a07017417b887c5dfb6530305a41ba27199b8', 'author': 'Marius <mpirvu@ca.ibm.com>', 'author_name': 'Marius', 'author_email': 'mpirvu@ca.ibm.com', 'authored_date': datetime.datetime(2024, 7, 16, 21, 27, 21), 'committer': 'Marius <mpirvu@ca.ibm.com>', 'committed_date': datetime.datetime(2024, 7, 16, 21, 41, 38), 'message': 'Do not look at JIT startup state for turning GCR on/off\n\nIf the JVM is in JITServer client mode, GCR counting will be\nenabled even during JIT startup phases (but not during JVM startup\nphase which only happens once). This allows GCR recompilations\nto happen sooner, improving rampup. In client mode there is a\nlesser risk that GCR recompilation overhead will impact the\nthroughput of the JVM.\nThis change can be overridden by using the following environment\nvariable:\nexport TR_LookAtJitStateForGCREnablement=1\n\nSigned-off-by: Marius <mpirvu@ca.ibm.com>\n', 'parents': ['f98185a57363e5d3c7768a0612f2a4b388bc76fc'], 'files_changed': ['runtime/compiler/control/HookedByTheJit.cpp'], 'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26, 'file_stats': {'runtime/compiler/control/HookedByTheJit.cpp': {'lines_added': 18, 'lines_deleted': 8, 'lines_changed': 26}}, 'subsystems': {'runtime'}, 'entropy': 0.0, 'author_experience': 14, 'recent_experience': 38}
2025-04-10 06:03:54,862 - __main__ - WARNING - No commits found between 96ef5c5b and eac681f0
2025-04-10 06:03:54,865 - __main__ - WARNING - This will result in empty report details
2025-04-10 06:03:54,866 - __main__ - INFO - Commit Info 
{'hash': '0ba67381545ba81b41bfaa04b3677d2b8b00901f', 'author': 'Gaurav Chaudhari <gaurav.chaudhari@ibm.com>', 'author_name': 'Gaurav Chaudhari', 'author_email': 'gaurav.chaudhari@ibm.com', 'authored_date': datetime.datetime(2024, 7, 5, 20, 46, 6), 'committer': 'Gaurav Chaudhari <gaurav.chaudhari@ibm.com>', 'committed_date': datetime.datetime(2024, 7, 11, 21, 34, 14), 'message': 'Add Open XL equivalent for EXPORTALL in jvmtitests\n\nHaving confirmed that exporting symbols is required for jvmtitests,\nthis change adds an Open XL conditional for the flag EXPORTALL\n(-fvisibility=default).\n\nSigned-off-by: Gaurav Chaudhari <gaurav.chaudhari@ibm.com>\n', 'parents': ['dd108dba6ae99ce85411f98ae652a306603a2011'], 'files_changed': ['runtime/tests/jvmtitests/agent/CMakeLists.txt', 'runtime/tests/jvmtitests/src/CMakeLists.txt'], 'lines_added': 10, 'lines_deleted': 3, 'lines_changed': 13, 'file_stats': {'runtime/tests/jvmtitests/agent/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 2, 'lines_changed': 7}, 'runtime/tests/jvmtitests/src/CMakeLists.txt': {'lines_added': 5, 'lines_deleted': 1, 'lines_changed': 6}}, 'subsystems': {'runtime'}, 'entropy': 0.9957274520849256, 'author_experience': 12, 'recent_experience': 2}
2025-04-10 06:03:54,868 - main - INFO - Results written to ./reports/comprehensive_analysis.html
2025-04-10 06:03:54,868 - main - INFO - CommitHunter completed successfully
